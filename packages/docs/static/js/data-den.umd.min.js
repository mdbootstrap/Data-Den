var as = (m, S, g) => {
  if (!S.has(m)) throw TypeError('Cannot ' + g);
};
var i = (m, S, g) => (as(m, S, 'read from private field'), g ? g.call(m) : S.get(m)),
  r = (m, S, g) => {
    if (S.has(m)) throw TypeError('Cannot add the same private member more than once');
    S instanceof WeakSet ? S.add(m) : S.set(m, g);
  },
  a = (m, S, g, _) => (as(m, S, 'write to private field'), _ ? _.call(m, g) : S.set(m, g), g);
var os = (m, S, g, _) => ({
    set _(at) {
      a(m, S, at, g);
    },
    get _() {
      return i(m, S, _);
    },
  }),
  o = (m, S, g) => (as(m, S, 'access private method'), g);
(function (m, S) {
  typeof exports == 'object' && typeof module < 'u'
    ? S(exports)
    : typeof define == 'function' && define.amd
    ? define(['exports'], S)
    : ((m = typeof globalThis < 'u' ? globalThis : m || self), S((m['data-den-core'] = {})));
})(this, function (m) {
  var jt,
    Ft,
    M,
    Bt,
    ye,
    Qt,
    Ee,
    Ls,
    $e,
    Ms,
    Fe,
    Is,
    Xt,
    ot,
    E,
    Kt,
    _t,
    Re,
    Os,
    Le,
    Ts,
    Me,
    ks,
    Rt,
    Lt,
    Ie,
    As,
    z,
    Oe,
    qs,
    Jt,
    Yt,
    J,
    ht,
    lt,
    ct,
    Zt,
    x,
    te,
    Mt,
    Te,
    Hs,
    ke,
    zs,
    Ae,
    Ws,
    qe,
    Gs,
    He,
    Us,
    dt,
    ut,
    ft,
    pt,
    ze,
    Vs,
    U,
    Y,
    D,
    gt,
    O,
    p,
    I,
    ee,
    It,
    ie,
    mt,
    Ot,
    se,
    hs,
    re,
    ls,
    We,
    Ns,
    Ge,
    js,
    Ue,
    Bs,
    Ve,
    Qs,
    Ne,
    Xs,
    je,
    Ks,
    ne,
    cs,
    Tt,
    Zi,
    Be,
    _s,
    Qe,
    Js,
    Xe,
    Ys,
    Ke,
    Zs,
    _e,
    tr,
    Je,
    er,
    ae,
    F,
    R,
    L,
    Ye,
    ir,
    V,
    Et,
    Ze,
    sr,
    ti,
    rr,
    ei,
    nr,
    ii,
    ar,
    si,
    or,
    T,
    Z,
    bt,
    kt,
    tt,
    W,
    N,
    k,
    v,
    j,
    A,
    q,
    C,
    B,
    vt,
    et,
    wt,
    St,
    xt,
    ri,
    hr,
    ni,
    lr,
    oe,
    ds,
    he,
    us,
    le,
    fs,
    ce,
    ps,
    de,
    gs,
    ai,
    cr,
    oi,
    dr,
    ue,
    ms,
    fe,
    bs,
    hi,
    ur,
    li,
    fr,
    ci,
    pr,
    di,
    gr,
    ui,
    mr,
    fi,
    br,
    pi,
    vr,
    gi,
    wr,
    mi,
    Sr,
    bi,
    xr,
    pe,
    vs,
    vi,
    Pr,
    At,
    ts,
    ge,
    ws,
    qt,
    es,
    wi,
    Cr,
    Si,
    Dr,
    xi,
    yr,
    Pi,
    Er,
    Ci,
    $r,
    H,
    Q,
    Ht,
    X,
    it,
    Pt,
    zt,
    y,
    Ct,
    Wt,
    Dt,
    Gt,
    Di,
    yi,
    Fr,
    Ei,
    Rr,
    $i,
    Lr,
    Fi,
    Mr,
    Ri,
    Ir,
    Li,
    Or,
    Mi,
    Tr,
    Ii,
    kr,
    Oi,
    Ar,
    Ti,
    qr,
    me,
    Ss,
    ki,
    Hr,
    Ai,
    zr,
    qi,
    Wr,
    K,
    Ut,
    be,
    ve,
    we,
    $,
    st,
    Vt,
    rt,
    Nt,
    Hi,
    Gr,
    zi,
    Ur,
    Wi,
    Vr,
    Gi,
    Nr,
    Ui,
    jr,
    G,
    Vi,
    Br,
    Ni,
    ji,
    Bi,
    Qi,
    Xi,
    Ki,
    yt,
    Se,
    _i,
    Qr,
    Ji,
    Xr;
  ('use strict');
  const S = '';
  function g(l, t = 'div') {
    const e = document.createElement(t);
    return (e.innerHTML = l), e.firstElementChild;
  }
  function _(l, t) {
    let e;
    return (...s) => {
      const n = () => {
        clearTimeout(e), l(...s);
      };
      clearTimeout(e), (e = setTimeout(n, t));
    };
  }
  const at = (l) => {
    if (typeof l != 'object' || l === null) return l;
    if (l instanceof Date) return new Date(l.getTime());
    if (l instanceof Array) return l.reduce((t, e, s) => ((t[s] = at(e)), t), []);
    if (l instanceof Object) return Object.keys(l).reduce((t, e) => ((t[e] = at(l[e])), t), {});
  };
  function Kr(l) {
    const t = l.split('-').map((h) => Number(h)),
      [e, s, n] = t;
    return new Date(e, s - 1, n);
  }
  function _r(l, t) {
    return l.setHours(0, 0, 0, 0), t.setHours(0, 0, 0, 0), l.getTime() === t.getTime();
  }
  class Jr {
    constructor(t) {
      r(this, jt, void 0);
      a(this, jt, t.cssPrefix);
      const e = `
      <div class="${i(this, jt)}cell-editor-container"><input type="text" value="${t.value}"></div>
    `;
      this.element = g(e);
    }
    getGui() {
      return this.element;
    }
    setValue() {}
    parseValue() {}
  }
  jt = new WeakMap();
  class xe {
    constructor(t, e, s, n, h, c, d) {
      r(this, Ee);
      r(this, $e);
      r(this, Fe);
      r(this, Ft, void 0);
      r(this, M, void 0);
      r(this, Bt, void 0);
      r(this, ye, void 0);
      r(this, Qt, void 0);
      (this.colIndex = e),
        (this.rowIndex = s),
        (this.width = h),
        a(this, Ft, t),
        a(this, M, d),
        a(this, Qt, c ? 'auto' : `${n}px`),
        (this.pinned = c),
        o(this, Ee, Ls).call(this);
    }
    render() {
      const t = `
        <div
          class="${i(this, M).cssPrefix}cell ${
          i(this, M).draggable && !this.pinned ? `${i(this, M).cssPrefix}cell-draggable` : ''
        } ${this.pinned === 'left' ? `${i(this, M).cssPrefix}cell-pinned-left` : ''} ${
          this.pinned === 'right' ? `${i(this, M).cssPrefix}cell-pinned-right` : ''
        }"
          role="gridcell"
          ref="cell"
          style="left: ${i(this, Qt)}; width: ${this.width}px;"
        ></div>
      `,
        e = g(t);
      return e.appendChild(i(this, Bt).getGui()), e;
    }
  }
  (Ft = new WeakMap()),
    (M = new WeakMap()),
    (Bt = new WeakMap()),
    (ye = new WeakMap()),
    (Qt = new WeakMap()),
    (Ee = new WeakSet()),
    (Ls = function () {
      const e = i(this, M).columns[this.colIndex].cellRenderer,
        s = o(this, $e, Ms).call(this),
        n = o(this, Fe, Is).call(this);
      a(this, Bt, new e(s)), a(this, ye, new Jr(n));
    }),
    ($e = new WeakSet()),
    (Ms = function () {
      return { value: i(this, Ft), cssPrefix: i(this, M).cssPrefix };
    }),
    (Fe = new WeakSet()),
    (Is = function () {
      return { value: i(this, Ft), cssPrefix: i(this, M).cssPrefix };
    });
  class xs {
    constructor(t) {
      this.element = g(`<span>${t.value}</span>`);
    }
    getGui() {
      return this.element;
    }
  }
  class Yr {
    constructor(t) {
      r(this, Xt, void 0);
      a(this, Xt, t.cssPrefix);
      const e = `<div class="${i(this, Xt)}header-cell-value">${t.value}</div>`;
      this.element = g(e);
    }
    getGui() {
      return this.element;
    }
  }
  Xt = new WeakMap();
  class Zr {}
  class w {
    constructor(t) {
      this.action = t;
    }
  }
  class tn extends Zr {
    constructor(e, s, n, h) {
      super();
      r(this, Re);
      r(this, Le);
      r(this, Me);
      r(this, ot, void 0);
      r(this, E, void 0);
      r(this, Kt, void 0);
      r(this, _t, void 0);
      (this.PubSub = n), a(this, E, h.cssPrefix);
      const c = `
      <div class="${i(this, E)}header-sorter">
        <div
          ref="sorterArrow"
          class="${i(this, E)}header-sorter-arrow ${i(this, E)}header-sorter-arrow-${s}"
        >
          <svg 
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            class="${i(this, E)}header-sorter-arrow-svg"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M7.25 9.75 12 3m0 0 4.75 6.75M12 3v18"
            />
          </svg>
        </div>
        <div ref="sorterIndex" class="${i(this, E)}header-sorter-index"></div>
      </div>
    `;
      a(this, ot, e),
        a(this, _t, h.multiSort),
        a(this, Kt, h.multiSortKey),
        (this.element = g(c)),
        (this.arrowElement = this.element.querySelector('[ref="sorterArrow"]')),
        this.element.addEventListener('click', (d) => {
          const f = i(this, Kt) === 'shift' ? d.shiftKey : d.ctrlKey,
            u = i(this, _t) && f;
          window.getSelection().removeAllRanges(), this.sort(u);
        }),
        o(this, Re, Os).call(this);
    }
    destroy() {
      throw new Error('Method not implemented.');
    }
    getGui() {
      return this.element;
    }
    sort(e) {
      const s = 'command:sorting:start';
      this.PubSub.publish(s, { caller: this, context: new w(s), field: i(this, ot), isMultiSort: e });
    }
  }
  (ot = new WeakMap()),
    (E = new WeakMap()),
    (Kt = new WeakMap()),
    (_t = new WeakMap()),
    (Re = new WeakSet()),
    (Os = function () {
      this.PubSub.subscribe('command:fetch:sort-start', (e) => {
        const { field: s, order: n, isMultiSort: h, activeSorters: c } = e.data;
        i(this, ot) === s && o(this, Le, Ts).call(this, n, h), o(this, Me, ks).call(this, c);
      });
    }),
    (Le = new WeakSet()),
    (Ts = function (e, s) {
      s ||
        document.querySelectorAll('[ref="sorterArrow"]').forEach((h) => {
          h.classList.remove(`${i(this, E)}header-sorter-arrow-asc`, `${i(this, E)}header-sorter-arrow-desc`);
        }),
        e === '' &&
          s &&
          this.arrowElement.classList.remove(
            `${i(this, E)}header-sorter-arrow-asc`,
            `${i(this, E)}header-sorter-arrow-desc`
          ),
        this.arrowElement.classList.add(`${i(this, E)}header-sorter-arrow-${e}`);
    }),
    (Me = new WeakSet()),
    (ks = function (e) {
      const s = this.element.querySelector('[ref="sorterIndex"]'),
        n = e.find((h) => h.field === i(this, ot));
      if (e.length > 1 && n) {
        const h = n.sortIndex + 1;
        s.textContent = h.toString();
      } else s.textContent = '';
    });
  class en {}
  class sn extends en {
    constructor(e, s, n) {
      super();
      r(this, Ie);
      r(this, Rt, void 0);
      r(this, Lt, void 0);
      (this.PubSub = n), a(this, Rt, e), a(this, Lt, s.pinned === 'right');
      const h = `<div class="${i(this, Rt)}header-resizer ${
        i(this, Lt) ? i(this, Rt) + 'header-resizer-left' : ''
      }"></div>`;
      (this.element = g(h)), this.element.addEventListener('mousedown', o(this, Ie, As).bind(this));
    }
    getGui() {
      return this.element;
    }
    destroy() {}
  }
  (Rt = new WeakMap()),
    (Lt = new WeakMap()),
    (Ie = new WeakSet()),
    (As = function (e) {
      e.stopPropagation(),
        this.PubSub.publish('info:resizing:mousedown', {
          target: e.target,
          isPinnedRight: i(this, Lt),
          context: new w('info:resizing:mousedown'),
        });
    });
  class rn {
    constructor(t, e, s, n) {
      r(this, Oe);
      r(this, z, void 0);
      (this.PubSub = n), a(this, z, t), (this.colDef = e), (this.colIndex = s);
      const h = `<button class="${i(this, z)}header-menu-toggler">
      <svg xmlns="http://www.w3.org/2000/svg" width="16px" height="100%" viewBox="0 0 16 16" fill="currenColor" class="${i(
        this,
        z
      )}header-menu-toggler-icon">
        <path stroke="currentColor" fill="currentColor" d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>
      </svg>
    </button>
    `,
        c = `<div class="${i(this, z)}header-menu-dropdown">
      ${
        this.colDef.pinned
          ? `<a href="#" class="${i(this, z)}header-menu-dropdown-item" ref="unPinColTrigger">Unpin</a>`
          : ''
      }
      ${
        this.colDef.pinned === 'right' || !this.colDef.pinned
          ? `<a href="#" class="${i(this, z)}header-menu-dropdown-item" ref="pinLeftPinColTrigger">Pin to the left</a>`
          : ''
      }
      ${
        this.colDef.pinned === 'left' || !this.colDef.pinned
          ? `<a href="#" class="${i(
              this,
              z
            )}header-menu-dropdown-item" ref="pinRightPinColTrigger">Pin to the right</a>`
          : ''
      }
    </div>`;
      (this.toggler = g(h)), (this.dropdown = g(c)), o(this, Oe, qs).call(this);
    }
    getGui() {
      return this.toggler;
    }
    getDropdownGui() {
      return this.dropdown;
    }
    destroy() {}
  }
  (z = new WeakMap()),
    (Oe = new WeakSet()),
    (qs = function () {
      this.toggler.addEventListener('click', () => {
        this.dropdown.classList.toggle('active');
      });
      const t = this.dropdown.querySelector('[ref="unPinColTrigger"]'),
        e = this.dropdown.querySelector('[ref="pinLeftPinColTrigger"]'),
        s = this.dropdown.querySelector('[ref="pinRightPinColTrigger"]');
      t == null ||
        t.addEventListener('click', (n) => {
          n.preventDefault(),
            this.PubSub.publish('command:pin-column:start', {
              pin: !1,
              colIndex: this.colIndex,
              context: new w('command:pin-column:start'),
            });
        }),
        e == null ||
          e.addEventListener('click', (n) => {
            n.preventDefault(),
              this.PubSub.publish('command:pin-column:start', {
                pin: 'left',
                colIndex: this.colIndex,
                context: new w('command:pin-column:start'),
              });
          }),
        s == null ||
          s.addEventListener('click', (n) => {
            n.preventDefault(),
              this.PubSub.publish('command:pin-column:start', {
                pin: 'right',
                colIndex: this.colIndex,
                context: new w('command:pin-column:start'),
              });
          }),
        document.addEventListener('click', (n) => {
          this.toggler.contains(n.target) || this.dropdown.classList.remove('active');
        }),
        document.addEventListener('keydown', (n) => {
          n.key === 'Escape' && this.dropdown.classList.remove('active');
        });
    });
  class Ps extends xe {
    constructor(e, s, n, h, c, d, f, u, b) {
      super(e, n, s, h, c, d, f);
      r(this, Te);
      r(this, ke);
      r(this, Ae);
      r(this, qe);
      r(this, He);
      r(this, Jt, void 0);
      r(this, Yt, void 0);
      r(this, J, void 0);
      r(this, ht, void 0);
      r(this, lt, void 0);
      r(this, ct, void 0);
      r(this, Zt, void 0);
      r(this, x, void 0);
      r(this, te, void 0);
      r(this, Mt, void 0);
      (this.PubSub = b),
        a(this, J, null),
        a(this, ht, null),
        a(this, lt, null),
        a(this, ct, null),
        a(this, Jt, e),
        a(this, Yt, d ? 'auto' : `${h}px`),
        (this.width = c),
        (this.pinned = d),
        (this.colIndex = s),
        (this.rowIndex = n),
        a(this, x, f),
        a(this, te, u),
        a(this, Mt, !1),
        o(this, Te, Hs).call(this);
    }
    render() {
      const e = i(this, x).columns.some((d) => d.filter),
        s = `<div
        class="${i(this, x).cssPrefix}header-cell ${
          i(this, x).draggable && !this.pinned ? `${i(this, x).cssPrefix}header-cell-draggable` : ''
        } ${this.pinned === 'left' ? `${i(this, x).cssPrefix}header-cell-pinned-left` : ''} ${
          this.pinned === 'right' ? `${i(this, x).cssPrefix}header-cell-pinned-right` : ''
        } ${e ? `${i(this, x).cssPrefix}header-cell-filterable` : ''}"
        role="columnheader"
        ref="headerCell"
        style="left: ${i(this, Yt)}; width: ${this.width}px;"
      >
        <div ref="headerCellMain" class="${i(this, x).cssPrefix}header-cell-main">
          <div ref="headerValueAndSorter" class="${i(this, x).cssPrefix}header-value-and-sorter"></div>
        </div>
      </div>`,
        n = g(s),
        h = n.querySelector('[ref="headerCellMain"]'),
        c = n.querySelector('[ref="headerValueAndSorter"]');
      return (
        c.appendChild(i(this, Zt).getGui()),
        i(this, ht) && c.appendChild(i(this, ht).getGui()),
        i(this, J) && n.appendChild(i(this, J).getGui()),
        h.appendChild(i(this, ct).getGui()),
        o(this, He, Us).call(this, n),
        i(this, lt) && n.appendChild(i(this, lt).getGui()),
        n
      );
    }
  }
  (Jt = new WeakMap()),
    (Yt = new WeakMap()),
    (J = new WeakMap()),
    (ht = new WeakMap()),
    (lt = new WeakMap()),
    (ct = new WeakMap()),
    (Zt = new WeakMap()),
    (x = new WeakMap()),
    (te = new WeakMap()),
    (Mt = new WeakMap()),
    (Te = new WeakSet()),
    (Hs = function () {
      const e = i(this, x).columns[this.colIndex],
        s = i(this, x).cssPrefix,
        { field: n, filter: h, sort: c, resize: d } = e,
        f = i(this, te);
      if ((a(this, Zt, new Yr(o(this, ke, zs).call(this))), a(this, ct, new rn(s, e, this.colIndex, this.PubSub)), h)) {
        const u = e.filterRenderer,
          b = o(this, Ae, Ws).call(this, e);
        a(this, J, new u(b));
      }
      c && a(this, ht, new tn(n, f, this.PubSub, i(this, x))), d && a(this, lt, new sn(s, e, this.PubSub));
    }),
    (ke = new WeakSet()),
    (zs = function () {
      return { value: i(this, Jt), cssPrefix: i(this, x).cssPrefix };
    }),
    (Ae = new WeakSet()),
    (Ws = function (e) {
      const s = e.field,
        { method: n, debounceTime: h, listOptions: c } = e.filterOptions;
      return {
        colDef: e,
        field: s,
        method: n,
        debounceTime: h,
        cssPrefix: i(this, x).cssPrefix,
        listOptions: c,
        filterChanged: () => o(this, qe, Gs).call(this),
      };
    }),
    (qe = new WeakSet()),
    (Gs = function () {
      const s = i(this, x).columns[this.colIndex].field,
        n = i(this, J),
        h = new w('info:filtering:header-filter-changed'),
        c = n.getType(),
        d = n.getState(),
        f = n.isActive(),
        u = n.getFilterFn(),
        b = { context: h, field: s, type: c, state: d, isActive: f, filterFn: u };
      this.PubSub.publish('info:filtering:header-filter-changed', b);
    }),
    (He = new WeakSet()),
    (Us = function (e) {
      var s;
      i(this, Mt) || (e.appendChild((s = i(this, ct)) == null ? void 0 : s.getDropdownGui()), a(this, Mt, !0));
    });
  class Pe {}
  class Cs extends Pe {
    constructor(e) {
      super();
      r(this, dt, void 0);
      (this.params = e), a(this, dt, e.cssPrefix);
      const s = `
      <div class="${i(this, dt)}header-filter">
        <input type="text" class="${i(this, dt)}header-filter-input">
      </div>
    `;
      (this.element = g(s)),
        (this.input = this.element.querySelector(`.${i(this, dt)}header-filter-input`)),
        this.attachUiEvents(e);
    }
    getGui() {
      return this.element;
    }
    getType() {
      return 'text';
    }
    getState() {
      const e = this.input ? this.input.value : null;
      return { method: this.params.method, searchTerm: e };
    }
    isActive() {
      return !!(this.input ? this.input.value : null);
    }
    getFilterFn() {
      const e = this.params.colDef.filterOptions;
      return (s, n) => {
        let h = s.searchTerm;
        const c = s.method,
          d = e.caseSensitive;
        switch (((n = d ? n : n.toString().toLowerCase()), (h = d ? h : h.toString().toLowerCase()), c)) {
          case 'includes':
            return n.includes(h);
          default:
            return !1;
        }
      };
    }
    attachUiEvents(e) {
      if (this.input) {
        const s = _(() => e.filterChanged(), e.debounceTime);
        this.input.addEventListener('keyup', () => s());
      }
    }
    destroy() {}
  }
  dt = new WeakMap();
  class nn extends Pe {
    constructor(e) {
      super();
      r(this, ut, void 0);
      (this.params = e), a(this, ut, e.cssPrefix);
      const s = `
        <div class="${i(this, ut)}header-filter">
          <input type="number" class="${i(this, ut)}header-filter-input" />
        </div>
      `;
      (this.element = g(s)),
        (this.input = this.element.querySelector(`.${i(this, ut)}header-filter-input`)),
        this.attachUiEvents(e);
    }
    getGui() {
      return this.element;
    }
    getType() {
      return 'number';
    }
    getState() {
      const e = this.input.value;
      return { method: this.params.method, searchTerm: e };
    }
    isActive() {
      return !!this.input.value;
    }
    getFilterFn() {
      return (e, s) => {
        const n = e.method,
          h = Number(e.searchTerm),
          c = Number(s);
        switch (n) {
          case 'equals':
            return c === h;
          default:
            return !1;
        }
      };
    }
    attachUiEvents(e) {
      if (this.input) {
        const s = _(() => e.filterChanged(), e.debounceTime);
        this.input.addEventListener('keyup', () => s());
      }
    }
    destroy() {}
  }
  ut = new WeakMap();
  class an extends Pe {
    constructor(e) {
      super();
      r(this, ft, void 0);
      (this.params = e), a(this, ft, e.cssPrefix);
      const s = `
        <div class="${i(this, ft)}header-filter">
          <input type="date" class="${i(this, ft)}header-filter-input" />
        </div>
      `;
      (this.element = g(s)),
        (this.input = this.element.querySelector(`.${i(this, ft)}header-filter-input`)),
        this.attachUiEvents(e);
    }
    getGui() {
      return this.element;
    }
    getType() {
      return 'date';
    }
    getState() {
      const e = this.input.value;
      return { method: this.params.method, searchTerm: e };
    }
    isActive() {
      return !!this.input.value;
    }
    getFilterFn() {
      const e = this.params.colDef.filterOptions;
      return (s, n) => {
        const h = e.dateParserFn,
          c = s.method,
          d = Kr(s.searchTerm),
          f = typeof n == 'string' ? h(n) : n;
        switch (c) {
          case 'equals':
            return _r(d, f);
          default:
            return !1;
        }
      };
    }
    attachUiEvents(e) {
      if (this.input) {
        const s = _(() => e.filterChanged(), e.debounceTime);
        this.input.addEventListener('change', () => s());
      }
    }
    destroy() {}
  }
  ft = new WeakMap();
  class on extends Pe {
    constructor(e) {
      super();
      r(this, ze);
      r(this, pt, void 0);
      (this.params = e), a(this, pt, e.cssPrefix);
      const s = `
        <div class="${i(this, pt)}header-filter">
          <select class="${i(this, pt)}header-filter-select">
            <option disabled selected value></option>
          </select>
        </div>
      `;
      (this.element = g(s)),
        (this.select = this.element.querySelector(`.${i(this, pt)}header-filter-select`)),
        o(this, ze, Vs).call(this, e),
        this.attachUiEvents(e);
    }
    getGui() {
      return this.element;
    }
    getType() {
      return 'select';
    }
    getState() {
      return { method: this.params.method, searchTerm: this.select.value };
    }
    isActive() {
      return !!this.select.value;
    }
    getFilterFn() {
      return (e, s) => {
        const n = e.method;
        switch (((s = s.toString().toLowerCase()), n)) {
          case 'includes':
            return s.includes(e.searchTerm);
          case 'equals':
            return s === e.searchTerm;
          default:
            return !1;
        }
      };
    }
    attachUiEvents(e) {
      this.select &&
        this.select.addEventListener('change', () => {
          e.filterChanged();
        });
    }
    destroy() {}
  }
  (pt = new WeakMap()),
    (ze = new WeakSet()),
    (Vs = function (e) {
      if (this.select) {
        const s = e.listOptions,
          n = document.createDocumentFragment();
        s.forEach((h) => {
          const c = document.createElement('option');
          (c.label = h.label), (c.value = h.value), n.appendChild(c);
        }),
          this.select.appendChild(n);
      }
    });
  class Ds {
    constructor(t, e, s) {
      r(this, U, void 0);
      (this.index = t), (this.cells = e), a(this, U, s);
      const n = `<div class="${s.cssPrefix}row" role="row" ref="row" style="height: ${s.rowHeight}px;"></div>`;
      this.element = g(n);
    }
    render() {
      const t = document.createDocumentFragment(),
        e = this.cells.filter((d) => d.pinned === 'left').reduce((d, f) => d + f.width, 0),
        s = this.cells.filter((d) => d.pinned === 'right').reduce((d, f) => d + f.width, 0),
        n = g(`<div
        class="${i(this, U).cssPrefix}pinned-cells-wrapper ${i(this, U).cssPrefix}pinned-cells-wrapper-left"
      ></div>`),
        h = g(`<div
        class="${i(this, U).cssPrefix}main-cells-wrapper"
        style="left: ${e}px; width: calc(100% - ${e + s}px);"
        ref="rowMainCellsWrapper"
      ></div>`),
        c = g(`<div
        class="${i(this, U).cssPrefix}pinned-cells-wrapper ${i(this, U).cssPrefix}pinned-cells-wrapper-right"
      ></div>`);
      return (
        t.appendChild(n),
        t.appendChild(h),
        t.appendChild(c),
        this.cells.filter((d) => d.pinned === 'left').forEach((d) => n.appendChild(d.render())),
        this.cells.filter((d) => !d.pinned).forEach((d) => h.appendChild(d.render())),
        this.cells.filter((d) => d.pinned === 'right').forEach((d) => c.appendChild(d.render())),
        this.element.appendChild(t),
        this.element
      );
    }
  }
  U = new WeakMap();
  class hn extends Ds {
    constructor(e, s, n) {
      super(e, s, n);
      r(this, Y, void 0);
      (this.index = e), (this.cells = s), a(this, Y, n);
      const h = i(this, Y).columns.some((d) => d.filter) ? n.headerHeight + 15 : n.headerHeight,
        c = `<div class="${n.cssPrefix}header-row" role="row" ref="headerRow" style="height: ${h}px"></div>`;
      this.element = g(c);
    }
    render() {
      const e = document.createDocumentFragment(),
        s = this.cells.filter((f) => f.pinned === 'left').reduce((f, u) => f + u.width, 0),
        n = this.cells.filter((f) => f.pinned === 'right').reduce((f, u) => f + u.width, 0),
        h = g(`<div ref="headerLeftCellsWrapper" class="${i(this, Y).cssPrefix}header-left-cells-wrapper"></div>`),
        c = g(`<div
        ref="headerMainCellsWrapper"
        class="${i(this, Y).cssPrefix}header-main-cells-wrapper"
        style="left: ${s}px; width: calc(100% - ${s + n}px)"
      ></div>`),
        d = g(`<div ref="headerRightCellsWrapper" class="${i(this, Y).cssPrefix}header-right-cells-wrapper"></div>`);
      return (
        e.appendChild(h),
        e.appendChild(c),
        e.appendChild(d),
        this.cells.filter((f) => f.pinned === 'left').forEach((f) => h.appendChild(f.render())),
        this.cells.filter((f) => !f.pinned).forEach((f) => c.appendChild(f.render())),
        this.cells.filter((f) => f.pinned === 'right').forEach((f) => d.appendChild(f.render())),
        this.element.appendChild(e),
        this.element
      );
    }
  }
  Y = new WeakMap();
  class ln {
    constructor(t, e, s) {
      r(this, D, void 0);
      (this.PubSub = s), (this.options = t), a(this, D, e);
      const n = `<div class="${i(this, D)}pagination">
        <div class="${i(this, D)}pagination-content">
          <button class="${i(this, D)}pagination-button" ref="data-den-pagination-first-button">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="${i(this, D)}pagination-button-svg"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="m18.75 4.5-7.5 7.5 7.5 7.5m-6-15L5.25 12l7.5 7.5"
              />
            </svg>
          </button>
          <button class="${i(this, D)}pagination-button" ref="data-den-pagination-prev-button">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="${i(this, D)}pagination-button-svg"
            >
              <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5 8.25 12l7.5-7.5" />
            </svg>
          </button>
          <div class="${i(this, D)}pagination-info" ref="data-den-pagination-info">
            1-10 ${this.options.ofText || 'of'} 100
          </div>
          <button class="${i(this, D)}pagination-button" ref="data-den-pagination-next-button">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="${i(this, D)}pagination-button-svg"
            >
              <path stroke-linecap="round" stroke-linejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5" />
            </svg>
          </button>
          <button class="${i(this, D)}pagination-button" ref="data-den-pagination-last-button">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="${i(this, D)}pagination-button-svg"
            >
              <path stroke-linecap="round" stroke-linejoin="round" d="m5.25 4.5 7.5 7.5-7.5 7.5m6-15 7.5 7.5-7.5 7.5" />
            </svg>
          </button>
        </div>
      </div>`;
      (this.element = g(n)),
        (this.buttons = {
          first: this.element.querySelector('[ref=data-den-pagination-first-button]'),
          prev: this.element.querySelector('[ref=data-den-pagination-prev-button]'),
          next: this.element.querySelector('[ref=data-den-pagination-next-button]'),
          last: this.element.querySelector('[ref=data-den-pagination-last-button]'),
        }),
        this.attachUiEvents(),
        this.subscribeToEvents();
    }
    getGui() {
      return this.element;
    }
    attachUiEvents() {
      this.buttons.first.addEventListener('click', () => {
        this.PubSub.publish('command:pagination:load-first-page:start', {
          context: new w('command:pagination:load-first-page:start'),
        });
      }),
        this.buttons.prev.addEventListener('click', () => {
          this.PubSub.publish('command:pagination:load-prev-page:start', {
            context: new w('command:pagination:load-prev-page:start'),
          });
        }),
        this.buttons.next.addEventListener('click', () => {
          this.PubSub.publish('command:pagination:load-next-page:start', {
            context: new w('command:pagination:load-next-page:start'),
          });
        }),
        this.buttons.last.addEventListener('click', () => {
          this.PubSub.publish('command:pagination:load-last-page:start', {
            context: new w('command:pagination:load-last-page:start'),
          });
        });
    }
    destroy() {
      var t;
      (this.element.innerHTML = ''), (t = document.querySelector('.data-den-pagination')) == null || t.remove();
    }
    subscribeToEvents() {
      this.PubSub.subscribe('info:pagination:info-change:done', (t) => {
        this.updateInfo(t.data.firstRowIndex, t.data.lastRowIndex, t.data.allTotalRows),
          this.updateButtonsState(t.data.firstRowIndex, t.data.lastRowIndex, t.data.allTotalRows);
      });
    }
    updateButtonsState(t, e, s) {
      Object.values(this.buttons).forEach((n) => (n.disabled = !1)),
        t === 0 && ((this.buttons.first.disabled = !0), (this.buttons.prev.disabled = !0)),
        e === s && ((this.buttons.next.disabled = !0), (this.buttons.last.disabled = !0));
    }
    updateInfo(t, e, s) {
      const n = this.element.querySelector('[ref=data-den-pagination-info');
      n.innerHTML = `${t + 1}-${e} ${this.options.ofText || 'of'} ${s}`;
    }
    updatePageSize(t) {
      this.PubSub.publish('info:pagination:page-size-change:done', {
        pageSize: t,
        context: new w('info:pagination:page-size-change:done'),
      });
    }
  }
  D = new WeakMap();
  const ys = (l) => l.filter((t) => t.pinned === 'left'),
    Ce = (l) => l.filter((t) => !t.pinned),
    is = (l) => l.filter((t) => t.pinned === 'right'),
    Es = (l) => $s(l).map((t) => l[t]),
    $s = (l) => Ce(l).map((t) => l.indexOf(t)),
    cn = (l) => Ce(l).map((t, e) => e),
    ss = (l) => [
      ...ys(l).map((t) => l.indexOf(t)),
      ...Ce(l).map((t) => l.indexOf(t)),
      ...is(l).map((t) => l.indexOf(t)),
    ];
  class dn {
    constructor(t) {
      (this.data = {}), (this.data = { ...this.data, ...t });
    }
    getValue(t) {
      return this.data[t];
    }
  }
  class $t {
    static on(t, e) {
      i(this, gt)[t] || (i(this, gt)[t] = []), i(this, gt)[t].push(e);
    }
    static triggerEvent(t, e) {
      var n;
      const s = {
        name: t,
        preventDefault: () => {
          s.defaultPrevented = !0;
        },
        defaultPrevented: !1,
        ...e,
      };
      return (
        (n = i(this, gt)[t]) == null ||
          n.forEach((h) => {
            h(s);
          }),
        s
      );
    }
  }
  (gt = new WeakMap()), r($t, gt, {});
  class un {
    constructor(t, e, s) {
      r(this, se);
      r(this, re);
      r(this, We);
      r(this, Ge);
      r(this, Ue);
      r(this, Ve);
      r(this, Ne);
      r(this, je);
      r(this, ne);
      r(this, Tt);
      r(this, Be);
      r(this, Qe);
      r(this, Xe);
      r(this, Ke);
      r(this, _e);
      r(this, Je);
      r(this, O, void 0);
      r(this, p, void 0);
      r(this, I, void 0);
      r(this, ee, void 0);
      r(this, It, void 0);
      r(this, ie, void 0);
      r(this, mt, []);
      r(this, Ot, null);
      (this.PubSub = s),
        a(this, O, t),
        a(this, p, e),
        e.pagination && a(this, Ot, new ln(e.paginationOptions, e.cssPrefix, this.PubSub)),
        o(this, se, hs).call(this),
        o(this, Ke, Zs).call(this),
        o(this, _e, tr).call(this),
        o(this, ne, cs).call(this);
    }
    renderTable() {
      const t = o(this, Be, _s).call(this),
        e = document.createElement('div');
      e.setAttribute('ref', 'gridMain'),
        e.classList.add(`${i(this, p).cssPrefix}grid-main`),
        e.appendChild(o(this, Qe, Js).call(this)),
        e.appendChild(o(this, Xe, Ys).call(this)),
        t.appendChild(e),
        i(this, Ot) && t.appendChild(i(this, Ot).getGui()),
        i(this, O).appendChild(t),
        o(this, Tt, Zi).call(this);
    }
    rerenderTable() {
      (i(this, O).innerHTML = ''),
        o(this, se, hs).call(this),
        o(this, ne, cs).call(this),
        this.PubSub.publish('command:rerendering:done', { caller: this, context: new w('command:rerendering:done') }),
        this.PubSub.publish('command:rerendering:done', { caller: this, context: new w('command:rerendering:done') });
    }
  }
  (O = new WeakMap()),
    (p = new WeakMap()),
    (I = new WeakMap()),
    (ee = new WeakMap()),
    (It = new WeakMap()),
    (ie = new WeakMap()),
    (mt = new WeakMap()),
    (Ot = new WeakMap()),
    (se = new WeakSet()),
    (hs = function () {
      a(this, I, Es(i(this, p).columns)),
        a(this, ee, Es(i(this, p).columns)),
        a(this, It, $s(i(this, p).columns)),
        a(this, ie, o(this, Ge, js).call(this, i(this, p).columns, '')),
        this.renderTable();
    }),
    (re = new WeakSet()),
    (ls = function (t, e, s) {
      return t.map((n) => {
        const h = n.headerName,
          c = 0,
          d = n.width || 120,
          f = i(this, p)
            .columns.map((u) => u.field)
            .indexOf(n.field);
        return new Ps(h, f, e, c, d, n.pinned, i(this, p), s, this.PubSub);
      });
    }),
    (We = new WeakSet()),
    (Ns = function (t, e, s) {
      return t.map((n, h) => {
        const c = n.headerName,
          d = i(this, I)
            .slice(0, h)
            .reduce((b, P) => b + (P.width || 120), 0),
          f = i(this, I)[h].width || 120,
          u = i(this, p)
            .columns.map((b) => b.field)
            .indexOf(n.field);
        return new Ps(c, u, e, d, f, n.pinned, i(this, p), s, this.PubSub);
      });
    }),
    (Ge = new WeakSet()),
    (js = function (t, e) {
      const n = o(this, re, ls).call(this, ys(t), 0, e),
        h = o(this, We, Ns).call(this, Ce(t), 0, e),
        c = o(this, re, ls).call(this, is(t).reverse(), 0, e),
        d = [...n, ...h, ...c];
      return new hn(0, d, i(this, p));
    }),
    (Ue = new WeakSet()),
    (Bs = function (t, e, s, n) {
      const h = i(this, p).columns.find((f) => f.field === t);
      if (h.pinned !== 'left') return;
      const c = 0,
        d = i(this, p).columns[s].width || 120;
      return new xe(e, s, n, c, d, h.pinned, i(this, p));
    }),
    (Ve = new WeakSet()),
    (Qs = function (t, e, s, n) {
      const h = i(this, p).columns.find((u) => u.field === t);
      if (h.pinned) return;
      const c = i(this, I).findIndex((u) => u.field === t),
        d = i(this, I)
          .slice(0, c)
          .reduce((u, b) => u + (b.width || 120), 0),
        f = i(this, I)[c].width || 120;
      return new xe(e, s, n, d, f, h.pinned, i(this, p));
    }),
    (Ne = new WeakSet()),
    (Xs = function (t, e, s, n) {
      const h = i(this, p).columns.find((u) => u.field === t);
      if (h.pinned !== 'right') return;
      const c = i(this, p)
          .columns.filter((u) => u.pinned === 'right')
          .map((u) => u.field)
          .indexOf(t),
        d = 0,
        f = is(i(this, p).columns)[c].width || 120;
      return new xe(e, s, n, d, f, h.pinned, i(this, p));
    }),
    (je = new WeakSet()),
    (Ks = function (t) {
      return t.map((e, s) => {
        const n = Object.entries(e).map(([u, b], P) => o(this, Ue, Bs).call(this, u, b, P, s)),
          h = Object.entries(e);
        h.sort(([u], [b]) => {
          const P = i(this, I).findIndex((nt) => nt.field === u),
            Yi = i(this, I).findIndex((nt) => nt.field === b);
          return P - Yi;
        });
        const c = h.map(([u, b], P) => o(this, Ve, Qs).call(this, u, b, P, s)),
          d = Object.entries(e)
            .reverse()
            .map(([u, b], P) => o(this, Ne, Xs).call(this, u, b, P, s)),
          f = [...n, ...c, ...d].filter((u) => u !== void 0);
        return new Ds(s, f, i(this, p));
      });
    }),
    (ne = new WeakSet()),
    (cs = function () {
      this.PubSub.publish('command:fetch:start', { caller: this, context: new w('command:fetch:start') });
    }),
    (Tt = new WeakSet()),
    (Zi = function () {
      const t = i(this, O).querySelector(`.${i(this, p).cssPrefix}header`),
        e = i(this, O).querySelector(`.${i(this, p).cssPrefix}grid-rows`),
        s = i(this, O).querySelector('[ref=headerMainCellsWrapper]'),
        n = i(this, O).querySelectorAll('[ref=rowMainCellsWrapper]'),
        h = i(this, p).columns.reduce((u, b) => u + (b.width || 120), 0),
        c = i(this, p)
          .columns.filter((u) => u.pinned === 'left')
          .reduce((u, b) => u + (b.width || 120), 0),
        d = i(this, p)
          .columns.filter((u) => !u.pinned)
          .reduce((u, b) => u + (b.width || 120), 0),
        f = i(this, p).rowHeight * i(this, mt).length;
      (t.style.width = `${h}px`),
        (e.style.width = `${h}px`),
        (e.style.height = `${f}px`),
        (s.style.left = `${c}px`),
        (s.style.width = `${d}px`),
        n &&
          n.forEach((u) => {
            (u.style.left = `${c}px`), (u.style.width = `${d}px`);
          });
    }),
    (Be = new WeakSet()),
    (_s = function () {
      const t = document.createElement('div');
      return t.classList.add(`${i(this, p).cssPrefix}grid`), t;
    }),
    (Qe = new WeakSet()),
    (Js = function () {
      const t = document.createElement('div');
      t.classList.add(`${i(this, p).cssPrefix}header`), t.setAttribute('role', 'rowgroup');
      const e = i(this, ie).render();
      return t.appendChild(e), t;
    }),
    (Xe = new WeakSet()),
    (Ys = function () {
      const t = document.createElement('div');
      t.classList.add(`${i(this, p).cssPrefix}grid-rows`), t.setAttribute('role', 'rowgroup');
      const e = document.createDocumentFragment();
      return i(this, mt).forEach((s) => e.appendChild(s.render())), t.appendChild(e), t;
    }),
    (Ke = new WeakSet()),
    (Zs = function () {
      this.PubSub.subscribe('info:dragging:columns-reorder:done', (t) => {
        a(this, It, t.data.columnsOrder),
          a(
            this,
            I,
            i(this, It).map((e) => i(this, ee)[e])
          );
      }),
        this.PubSub.subscribe('info:resizing:start', (t) => {
          const e = ss(i(this, p).columns)[t.data.currentColIndex];
          (i(this, p).columns[e].width = t.data.newCurrentColWidth), o(this, Tt, Zi).call(this);
        }),
        this.PubSub.subscribe('command:pin-column:start', (t) => {
          const e = new dn({ pin: i(this, p).columns[t.data.colIndex].pinned });
          if (
            ((i(this, p).columns[t.data.colIndex].pinned = t.data.pin),
            $t.triggerEvent('pinningStart', { pin: t.data.pin, colIndex: t.data.colIndex, columns: i(this, p).columns })
              .defaultPrevented)
          ) {
            i(this, p).columns[t.data.colIndex].pinned = e.getValue('pin');
            return;
          }
          this.rerenderTable(),
            $t.triggerEvent('pinningDone', { pin: t.data.pin, colIndex: t.data.colIndex, columns: i(this, p).columns });
        });
    }),
    (_e = new WeakSet()),
    (tr = function () {
      this.PubSub.subscribe('info:fetch:done', (t) => {
        o(this, Je, er).call(this, t);
      });
    }),
    (Je = new WeakSet()),
    (er = function (t) {
      const { rows: e } = t.data,
        s = document.createDocumentFragment();
      a(this, mt, o(this, je, Ks).call(this, e)), i(this, mt).forEach((h) => s.appendChild(h.render()));
      const n = i(this, O).querySelector(`.${i(this, p).cssPrefix}grid-rows`);
      (n.innerHTML = ''), n.appendChild(s), o(this, Tt, Zi).call(this);
    });
  class fn {
    constructor(t, e) {
      r(this, Ye);
      r(this, V);
      r(this, Ze);
      r(this, ti);
      r(this, ei);
      r(this, ii);
      r(this, si);
      r(this, ae, void 0);
      r(this, F, void 0);
      r(this, R, void 0);
      r(this, L, void 0);
      (this.PubSub = e),
        a(this, ae, t.paginationOptions),
        a(this, F, 0),
        a(this, L, 0),
        a(this, R, i(this, ae).pageSize || 10),
        o(this, Ye, ir).call(this);
    }
  }
  (ae = new WeakMap()),
    (F = new WeakMap()),
    (R = new WeakMap()),
    (L = new WeakMap()),
    (Ye = new WeakSet()),
    (ir = function () {
      this.PubSub.subscribe('command:pagination:load-first-page:start', () => {
        o(this, ti, rr).call(this);
      }),
        this.PubSub.subscribe('command:pagination:load-prev-page:start', () => {
          o(this, ei, nr).call(this);
        }),
        this.PubSub.subscribe('command:pagination:load-next-page:start', () => {
          o(this, ii, ar).call(this);
        }),
        this.PubSub.subscribe('command:pagination:load-last-page:start', () => {
          o(this, si, or).call(this);
        }),
        this.PubSub.subscribe('info:pagination:page-size-change:done', (t) => {
          a(this, R, t.data.pageSize), a(this, F, 0), o(this, V, Et).call(this);
        }),
        this.PubSub.subscribe('info:fetch:done', (t) => {
          i(this, L) ||
            i(this, L) === t.data.rows.length ||
            (a(this, L, t.data.rows.length), o(this, V, Et).call(this));
        });
    }),
    (V = new WeakSet()),
    (Et = function () {
      const t = i(this, F) * i(this, R),
        e = Math.min(i(this, L), i(this, F) * i(this, R) + i(this, R));
      o(this, Ze, sr).call(this, t, e, i(this, L));
    }),
    (Ze = new WeakSet()),
    (sr = function (t, e, s) {
      this.PubSub.publish('info:pagination:info-change:done', {
        firstRowIndex: t,
        lastRowIndex: e,
        allTotalRows: s,
        pageSize: i(this, R),
        context: new w('info:pagination:info-change:done'),
      });
    }),
    (ti = new WeakSet()),
    (rr = function () {
      a(this, F, 0), o(this, V, Et).call(this);
    }),
    (ei = new WeakSet()),
    (nr = function () {
      i(this, F) !== 0 && (os(this, F)._--, o(this, V, Et).call(this));
    }),
    (ii = new WeakSet()),
    (ar = function () {
      i(this, F) * i(this, R) + i(this, R) >= i(this, L) || (os(this, F)._++, o(this, V, Et).call(this));
    }),
    (si = new WeakSet()),
    (or = function () {
      i(this, L) / i(this, R) - 1 >= i(this, L) ||
        (a(this, F, Math.ceil(i(this, L) / i(this, R) - 1)), o(this, V, Et).call(this));
    });
  class pn {
    constructor(t, e, s) {
      r(this, ri);
      r(this, ni);
      r(this, oe);
      r(this, he);
      r(this, le);
      r(this, ce);
      r(this, de);
      r(this, ai);
      r(this, oi);
      r(this, ue);
      r(this, fe);
      r(this, hi);
      r(this, li);
      r(this, ci);
      r(this, di);
      r(this, ui);
      r(this, fi);
      r(this, pi);
      r(this, gi);
      r(this, mi);
      r(this, bi);
      r(this, pe);
      r(this, vi);
      r(this, At);
      r(this, ge);
      r(this, qt);
      r(this, wi);
      r(this, Si);
      r(this, xi);
      r(this, Pi);
      r(this, Ci);
      r(this, T, void 0);
      r(this, Z, void 0);
      r(this, bt, void 0);
      r(this, kt, void 0);
      r(this, tt, void 0);
      r(this, W, void 0);
      r(this, N, void 0);
      r(this, k, void 0);
      r(this, v, void 0);
      r(this, j, void 0);
      r(this, A, void 0);
      r(this, q, void 0);
      r(this, C, void 0);
      r(this, B, void 0);
      r(this, vt, void 0);
      r(this, et, void 0);
      r(this, wt, void 0);
      r(this, St, void 0);
      r(this, xt, void 0);
      (this.PubSub = s),
        a(this, T, t),
        a(this, Z, t.querySelector('[ref="gridMain"]')),
        a(this, bt, e),
        a(this, kt, !1),
        a(this, tt, !1),
        a(this, W, null),
        a(this, N, []),
        a(this, k, -1),
        a(this, v, -1),
        a(this, j, -1),
        a(this, A, []),
        a(this, q, []),
        a(this, C, []),
        a(this, B, []),
        a(this, vt, 0),
        a(this, et, e.cssPrefix),
        a(this, wt, () => {}),
        a(this, St, () => {}),
        a(this, xt, () => {}),
        o(this, ri, hr).call(this),
        o(this, ni, lr).call(this);
    }
    init() {
      o(this, fe, bs).call(this),
        o(this, oe, ds).call(this),
        this.update(),
        o(this, he, us).call(this),
        o(this, ue, ms).call(this),
        o(this, hi, ur).call(this),
        a(this, kt, !0);
    }
    dispose() {
      o(this, xi, yr).call(this), o(this, Pi, Er).call(this);
    }
    update() {
      const t = [...o(this, ai, cr).call(this)];
      a(
        this,
        A,
        i(this, B).map((e) => t[e])
      );
    }
  }
  (T = new WeakMap()),
    (Z = new WeakMap()),
    (bt = new WeakMap()),
    (kt = new WeakMap()),
    (tt = new WeakMap()),
    (W = new WeakMap()),
    (N = new WeakMap()),
    (k = new WeakMap()),
    (v = new WeakMap()),
    (j = new WeakMap()),
    (A = new WeakMap()),
    (q = new WeakMap()),
    (C = new WeakMap()),
    (B = new WeakMap()),
    (vt = new WeakMap()),
    (et = new WeakMap()),
    (wt = new WeakMap()),
    (St = new WeakMap()),
    (xt = new WeakMap()),
    (ri = new WeakSet()),
    (hr = function () {
      this.PubSub.subscribe('info:fetch:done', () => {
        i(this, kt) ? this.update() : this.init();
      });
    }),
    (ni = new WeakSet()),
    (lr = function () {
      this.PubSub.subscribe('command:rerendering:done', () => {
        o(this, fe, bs).call(this),
          o(this, oe, ds).call(this),
          setTimeout(() => {
            a(this, Z, i(this, T).querySelector('[ref="gridMain"]')),
              this.update(),
              o(this, he, us).call(this),
              o(this, ue, ms).call(this);
          }, 0);
      });
    }),
    (oe = new WeakSet()),
    (ds = function () {
      a(this, W, i(this, T).querySelector('[ref="headerMainCellsWrapper"]')),
        a(this, N, Array.from(i(this, W).querySelectorAll('[ref="headerCell"]')));
    }),
    (he = new WeakSet()),
    (us = function () {
      a(this, q, [...o(this, de, gs).call(this)]),
        o(this, le, fs).call(this),
        a(this, vt, i(this, Z).getBoundingClientRect().left + parseFloat(i(this, W).style.left));
    }),
    (le = new WeakSet()),
    (fs = function () {
      a(this, C, []),
        i(this, q).forEach((t) => {
          t.left !== 'auto' && i(this, C).push(parseFloat(t.left));
        }),
        i(this, C).sort((t, e) => t - e);
    }),
    (ce = new WeakSet()),
    (ps = function (t) {
      return t - i(this, vt) + i(this, Z).scrollLeft;
    }),
    (de = new WeakSet()),
    (gs = function () {
      return i(this, N).map((t) => ({ left: t.style.left, width: parseFloat(t.style.width) }));
    }),
    (ai = new WeakSet()),
    (cr = function () {
      return i(this, N).map((t, e) => [...o(this, oi, dr).call(this, e)]);
    }),
    (oi = new WeakSet()),
    (dr = function (t) {
      const e = i(this, N)[t],
        s = i(this, T).querySelectorAll('[ref="row"]'),
        n = Array.from(s).map((h) => h.querySelectorAll('.data-den-main-cells-wrapper [ref="cell"]')[t]);
      return [e, ...n];
    }),
    (ue = new WeakSet()),
    (ms = function () {
      a(this, xt, o(this, li, fr).bind(this)),
        a(this, wt, o(this, ui, mr).bind(this)),
        a(this, St, o(this, fi, br).bind(this)),
        i(this, W).addEventListener('mousedown', i(this, xt)),
        i(this, T).addEventListener('mousemove', i(this, wt)),
        document.addEventListener('mouseup', i(this, St));
    }),
    (fe = new WeakSet()),
    (bs = function () {
      a(this, B, cn(i(this, bt).columns));
    }),
    (hi = new WeakSet()),
    (ur = function () {
      this.PubSub.subscribe('info:resizing:done', () => {
        const t = [...o(this, de, gs).call(this)];
        a(
          this,
          q,
          i(this, B).map((e) => t[e])
        ),
          o(this, le, fs).call(this),
          a(this, vt, i(this, Z).getBoundingClientRect().left + parseFloat(i(this, W).style.left));
      });
    }),
    (li = new WeakSet()),
    (fr = function (t) {
      t.stopPropagation();
      const e = t.target;
      t.button !== 0 ||
        (e.getAttribute('ref') !== 'headerCell' &&
          e.getAttribute('ref') !== 'headerCellMain' &&
          e.getAttribute('ref') !== 'headerValueAndSorter') ||
        o(this, ci, pr).call(this, o(this, ce, ps).call(this, t.pageX));
    }),
    (ci = new WeakSet()),
    (pr = function (t) {
      o(this, di, gr).call(this, t), a(this, tt, !0), o(this, pi, vr).call(this), o(this, gi, wr).call(this);
    }),
    (di = new WeakSet()),
    (gr = function (t) {
      a(this, k, o(this, pe, vs).call(this, i(this, C), t));
    }),
    (ui = new WeakSet()),
    (mr = function (t) {
      if (!i(this, tt)) return;
      const e = o(this, ce, ps).call(this, t.pageX);
      a(this, v, o(this, pe, vs).call(this, i(this, C), e));
      const s = i(this, q)[i(this, k)].width,
        n = o(this, ge, ws).call(this, i(this, k));
      if (
        (o(this, At, ts).call(this) === 'right' && i(this, C)[i(this, v)] + n > e) ||
        (o(this, At, ts).call(this) === 'left' && i(this, C)[i(this, v)] + s < e)
      ) {
        a(this, v, i(this, k));
        return;
      }
      i(this, j) !== i(this, v) && i(this, v) !== -1 && (o(this, vi, Pr).call(this), a(this, j, i(this, v)));
    }),
    (fi = new WeakSet()),
    (br = function () {
      i(this, tt) && o(this, wi, Cr).call(this);
    }),
    (pi = new WeakSet()),
    (vr = function () {
      i(this, A).forEach((t) => {
        t.forEach((e) => {
          e.classList.add(`${i(this, et)}dragging`);
        });
      });
    }),
    (gi = new WeakSet()),
    (wr = function () {
      i(this, T).children[0].classList.add(`${i(this, bt).cssPrefix}dragging`),
        i(this, A)[i(this, k)].forEach((t) => {
          t.classList.add(`${i(this, et)}active`);
        });
    }),
    (mi = new WeakSet()),
    (Sr = function () {
      i(this, T).children[0].classList.remove(`${i(this, bt).cssPrefix}dragging`),
        i(this, A).forEach((t) => {
          t.forEach((e) => {
            e.classList.remove(`${i(this, et)}active`);
          });
        });
    }),
    (bi = new WeakSet()),
    (xr = function () {
      i(this, A).forEach((t) => {
        t.forEach((e) => {
          e.classList.remove(`${i(this, et)}dragging`);
        });
      });
    }),
    (pe = new WeakSet()),
    (vs = function (t, e) {
      for (let s = 0; s < t.length - 1; s++) if (t[s] < e && t[s + 1] >= e) return s;
      return t.length - 1;
    }),
    (vi = new WeakSet()),
    (Pr = function () {
      if (i(this, k) === i(this, v) && i(this, j) === -1) return;
      const t = o(this, At, ts).call(this),
        e = t === 'right' ? i(this, v) - 1 : i(this, v) + 1,
        s = o(this, ge, ws).call(this, e);
      t === 'right'
        ? (i(this, C)[i(this, v)] = i(this, C)[i(this, v)] + s)
        : (i(this, C)[i(this, v) + 1] = i(this, C)[i(this, v) + 1] - s),
        o(this, qt, es).call(this, i(this, q), e, i(this, v)),
        o(this, qt, es).call(this, i(this, A), e, i(this, v)),
        o(this, qt, es).call(this, i(this, B), e, i(this, v)),
        i(this, A).forEach((n, h) => {
          n.forEach((c) => {
            c.style.left = `${i(this, C)[h]}px`;
          });
        }),
        o(this, Ci, $r).call(this);
    }),
    (At = new WeakSet()),
    (ts = function () {
      return i(this, j) > i(this, v) ? 'left' : 'right';
    }),
    (ge = new WeakSet()),
    (ws = function (t) {
      const e = i(this, q)[t].width;
      return i(this, q)[i(this, v)].width - e;
    }),
    (qt = new WeakSet()),
    (es = function (t, e, s) {
      if (e === -1) return;
      const n = t[e];
      (t[e] = t[s]), (t[s] = n);
    }),
    (wi = new WeakSet()),
    (Cr = function () {
      a(this, tt, !1), o(this, bi, xr).call(this), o(this, mi, Sr).call(this), o(this, Si, Dr).call(this);
    }),
    (Si = new WeakSet()),
    (Dr = function () {
      a(this, k, -1), a(this, v, -1), a(this, j, -1);
    }),
    (xi = new WeakSet()),
    (yr = function () {
      i(this, N).forEach((t) => {
        t.classList.remove('data-den-header-cell-draggable');
      });
    }),
    (Pi = new WeakSet()),
    (Er = function () {
      i(this, W).removeEventListener('mousedown', i(this, xt)),
        i(this, T).removeEventListener('mousemove', i(this, wt)),
        document.removeEventListener('mouseup', i(this, St));
    }),
    (Ci = new WeakSet()),
    ($r = function () {
      this.PubSub.publish('info:dragging:columns-reorder:done', {
        columnsOrder: i(this, B),
        context: new w('info:dragging:columns-reorder:done'),
      });
    });
  class gn {
    constructor(t, e, s) {
      r(this, yi);
      r(this, Ei);
      r(this, $i);
      r(this, Fi);
      r(this, Ri);
      r(this, Li);
      r(this, Mi);
      r(this, Ii);
      r(this, Oi);
      r(this, Ti);
      r(this, me);
      r(this, H, void 0);
      r(this, Q, void 0);
      r(this, Ht, void 0);
      r(this, X, void 0);
      r(this, it, void 0);
      r(this, Pt, void 0);
      r(this, zt, void 0);
      r(this, y, void 0);
      r(this, Ct, void 0);
      r(this, Wt, void 0);
      r(this, Dt, void 0);
      r(this, Gt, void 0);
      r(this, Di, 45);
      (this.PubSub = s),
        a(this, H, t),
        a(this, Q, e),
        a(this, Ht, !1),
        a(this, X, !1),
        a(this, it, []),
        a(this, Pt, []),
        a(this, Dt, []),
        a(this, zt, []),
        a(this, y, null),
        a(this, Ct, null),
        a(this, Wt, []),
        i(this, Gt),
        o(this, yi, Fr).call(this),
        o(this, Ei, Rr).call(this);
    }
    init() {
      a(this, it, Array.from(i(this, H).querySelectorAll('[ref="headerCell"]'))),
        a(
          this,
          Pt,
          Array.from(i(this, H).querySelector('[ref="headerMainCellsWrapper"]').querySelectorAll('[ref="headerCell"]'))
        ),
        a(this, Dt, ss(i(this, Q).columns)),
        o(this, $i, Lr).call(this),
        o(this, Fi, Mr).call(this),
        a(this, Ht, !0);
    }
  }
  (H = new WeakMap()),
    (Q = new WeakMap()),
    (Ht = new WeakMap()),
    (X = new WeakMap()),
    (it = new WeakMap()),
    (Pt = new WeakMap()),
    (zt = new WeakMap()),
    (y = new WeakMap()),
    (Ct = new WeakMap()),
    (Wt = new WeakMap()),
    (Dt = new WeakMap()),
    (Gt = new WeakMap()),
    (Di = new WeakMap()),
    (yi = new WeakSet()),
    (Fr = function () {
      this.PubSub.subscribe('info:fetch:done', () => {
        i(this, Ht) || this.init(),
          setTimeout(() => {
            a(this, zt, Array.from(i(this, H).querySelectorAll('[ref="row"]')));
          }, 0);
      });
    }),
    (Ei = new WeakSet()),
    (Rr = function () {
      this.PubSub.subscribe('command:rerendering:done', () => {
        a(this, it, Array.from(i(this, H).querySelectorAll('[ref="headerCell"]'))),
          a(
            this,
            Pt,
            Array.from(
              i(this, H).querySelector('[ref="headerMainCellsWrapper"]').querySelectorAll('[ref="headerCell"]')
            )
          ),
          a(this, Dt, ss(i(this, Q).columns));
      });
    }),
    ($i = new WeakSet()),
    (Lr = function () {
      this.PubSub.subscribe('info:resizing:mousedown', o(this, Ri, Ir).bind(this)),
        document.addEventListener('mousemove', o(this, Mi, Tr).bind(this)),
        document.addEventListener('mouseup', o(this, Li, Or).bind(this));
    }),
    (Fi = new WeakSet()),
    (Mr = function () {
      this.PubSub.subscribe('info:dragging:columns-reorder:done', (t) => {
        a(this, Dt, t.data.columnsOrder);
      });
    }),
    (Ri = new WeakSet()),
    (Ir = function (t) {
      i(this, H).children[0].classList.add(`${i(this, Q).cssPrefix}resizing`),
        a(this, y, t.data.target.parentElement),
        a(this, Ct, o(this, me, Ss).call(this, i(this, y))),
        a(this, Gt, t.data.isPinnedRight),
        !(!i(this, y) || !i(this, y).parentElement) && (a(this, X, !0), a(this, Wt, o(this, Ti, qr).call(this)));
    }),
    (Li = new WeakSet()),
    (Or = function () {
      i(this, H).children[0].classList.remove(`${i(this, Q).cssPrefix}resizing`),
        i(this, X) &&
          (a(this, X, !1), this.PubSub.publish('info:resizing:done', { context: new w('info:resizing:done') }));
    }),
    (Mi = new WeakSet()),
    (Tr = function (t) {
      var c;
      if (!i(this, X) || !i(this, y) || i(this, Ct).some((d) => d === void 0)) {
        a(this, X, !1);
        return;
      }
      const e = i(this, Gt) ? -t.movementX : t.movementX,
        s = (c = i(this, y)) == null ? void 0 : c.style.width,
        n = i(this, y).querySelector(`.${i(this, Q).cssPrefix}header-resizer`),
        h = parseInt(s || '0') + e;
      (e > 0 && t.clientX < n.getClientRects()[0].left) ||
        h < i(this, Di) ||
        (o(this, Ii, kr).call(this, h),
        o(this, Oi, Ar).call(this, e),
        this.PubSub.publish('info:resizing:start', {
          currentColIndex: i(this, it).indexOf(i(this, y)),
          newCurrentColWidth: parseInt(i(this, y).style.width, 10),
          context: new w('info:resizing:start'),
        }));
    }),
    (Ii = new WeakSet()),
    (kr = function (t) {
      i(this, Ct).forEach((e) => (e.style.width = `${t}px`));
    }),
    (Oi = new WeakSet()),
    (Ar = function (t) {
      i(this, y) &&
        i(this, Wt).forEach((e) => {
          const s = e.style.left;
          if (s === 'auto') return;
          const n = parseInt(s || '0') + t;
          o(this, me, Ss)
            .call(this, e)
            .forEach((c) => (c.style.left = `${n}px`));
        });
    }),
    (Ti = new WeakSet()),
    (qr = function () {
      var e;
      const t = parseInt(((e = i(this, y)) == null ? void 0 : e.style.left) || '0', 10);
      return i(this, Pt).filter((s) => parseInt(s.style.left || '0', 10) > t);
    }),
    (me = new WeakSet()),
    (Ss = function (t) {
      if (!t || !t.parentElement) return [];
      const e = i(this, it).indexOf(t),
        s = i(this, zt).map((n) => n.querySelectorAll('[ref="cell"]')[e]);
      return [t, ...s];
    });
  class mn {
    constructor(t, e) {
      r(this, ki);
      r(this, Ai);
      r(this, qi);
      (this.PubSub = e),
        (this.activeHeaderFilters = {}),
        (this.options = t),
        (this.activeQuickFilter = { searchTerm: '', filterFn: t.quickFilterOptions.filterFn }),
        this.PubSub.subscribe('info:filtering:header-filter-changed', o(this, ki, Hr).bind(this)),
        this.PubSub.subscribe('info:filtering:quick-filter-changed', o(this, qi, Wr).bind(this));
    }
  }
  (ki = new WeakSet()),
    (Hr = function (t) {
      const { field: e, type: s, state: n, isActive: h, filterFn: c } = t.data,
        d = { type: s, state: n, filterFn: c };
      o(this, Ai, zr).call(this, e, d, h);
      const f = { context: new w('info:filtering:active-filters-changed'), filters: this.activeHeaderFilters };
      this.PubSub.publish('info:filtering:active-filters-changed', f);
    }),
    (Ai = new WeakSet()),
    (zr = function (t, e, s) {
      s ? (this.activeHeaderFilters[t] = e) : delete this.activeHeaderFilters[t];
    }),
    (qi = new WeakSet()),
    (Wr = function (t) {
      const { searchTerm: e } = t.data;
      this.activeQuickFilter.searchTerm = e;
      const s = { context: new w('info:filtering:active-quick-filter-changed'), filter: this.activeQuickFilter };
      this.PubSub.publish('info:filtering:active-quick-filter-changed', s);
    });
  class bn {
    constructor(t) {
      (this.data = {}), (this.data = { ...this.data, ...t });
    }
    getValue(t) {
      return this.data[t];
    }
  }
  class vn {
    constructor(t, e) {
      r(this, K, void 0);
      r(this, Ut, void 0);
      r(this, be, void 0);
      (this.PubSub = e),
        a(this, K, ''),
        a(this, Ut, 'asc'),
        a(this, be, t),
        (this.activeSortersMap = new Map()),
        this.PubSub.subscribe('command:sorting:start', (s) => {
          const n = new bn({ field: i(this, K), order: i(this, Ut) }),
            { field: h, isMultiSort: c } = s.data,
            d = this.activeSortersMap.has(h),
            f = d ? this.activeSortersMap.get(h).order : '';
          let u;
          if (d)
            switch (f) {
              case 'asc':
                u = 'desc';
                break;
              case 'desc':
                u = '';
                break;
              default:
                u = 'asc';
                break;
            }
          else u = 'asc';
          s.data.order && (u = s.data.order), a(this, K, s.data.field);
          const P = i(this, be).columns.find((nt) => nt.field === i(this, K)).sortOptions.comparator;
          if (
            $t.triggerEvent('sortingStart', { field: h, order: u, comparator: P, sortFn: this.sort }).defaultPrevented
          ) {
            a(this, K, n.getValue('field')), a(this, Ut, n.getValue('order'));
            return;
          }
          c
            ? this.updateActiveSortersMap(h, u, P)
            : (this.activeSortersMap.clear(), this.updateActiveSortersMap(h, u, P)),
            this.PubSub.publish('command:fetch:sort-start', {
              caller: this,
              context: s.context,
              field: h,
              order: u,
              comparator: P,
              sortFn: this.sort,
              activeSorters: this.getActiveSortersArray(),
              isMultiSort: c,
            });
        });
    }
    updateActiveSortersMap(t, e, s) {
      const n = this.activeSortersMap.has(t);
      if (e === '' && n) {
        this.activeSortersMap.delete(t), this.updateSortIndexes();
        return;
      }
      if (n && e !== '') {
        const h = this.activeSortersMap.get(t);
        h.order = e;
      } else if (!n && e !== '') {
        const h = this.activeSortersMap.size;
        this.activeSortersMap.set(i(this, K), { field: t, order: e, comparator: s, sortIndex: h });
      }
    }
    updateSortIndexes() {
      let t = 0;
      for (const e of this.activeSortersMap.values()) e.sortIndex = t++;
    }
    getActiveSortersArray() {
      return Array.from(this.activeSortersMap.values()).sort((t, e) => t.sortIndex - e.sortIndex);
    }
    sort(t, e) {
      return (
        t.sort((s, n) => {
          let h = 0;
          for (const c of e) {
            const { order: d, field: f, comparator: u } = c;
            if (h === 0) {
              const b = d === 'asc',
                P = s[f],
                Yi = n[f],
                nt = u(P, Yi);
              h = b ? nt : nt * -1;
            } else break;
          }
          return h;
        }),
        t
      );
    }
  }
  (K = new WeakMap()), (Ut = new WeakMap()), (be = new WeakMap());
  class rs {}
  class Fs extends rs {
    constructor(e) {
      super();
      r(this, ve, void 0);
      a(this, ve, e);
    }
    getData(e) {
      return this.filterData(at(i(this, ve)), e.filtersOptions)
        .then((s) => this.quickFilterData(s, e.quickFilterOptions))
        .then((s) => this.sortData(s, e.sortingOptions))
        .then((s) => this.paginateData(s, e.paginationOptions));
    }
    filterData(e, s) {
      if (!s) return Promise.resolve(e);
      const h = Object.keys(s.filters).reduce(
        (c, d) =>
          c.filter((f) => {
            const u = s.filters[d].filterFn,
              b = s.filters[d].state,
              P = f[d];
            return u(b, P);
          }),
        e
      );
      return Promise.resolve(h);
    }
    paginateData(e, s) {
      if (!s) return Promise.resolve(e);
      const { firstRowIndex: n, lastRowIndex: h } = s,
        c = e.slice(n, h);
      return Promise.resolve(c);
    }
    sortData(e, s) {
      if (!s) return Promise.resolve(e);
      const { sortFn: n, activeSorters: h } = s,
        c = n(e, h);
      return Promise.resolve(c);
    }
    quickFilterData(e, s) {
      if (!s) return Promise.resolve(e);
      const { searchTerm: n, filterFn: h } = s,
        c = e.filter((d) => h(n, Object.values(d)));
      return Promise.resolve(c);
    }
  }
  ve = new WeakMap();
  class Rs extends rs {
    getData(t) {
      return fetch('url' + new URLSearchParams(t)).then((e) => e.json());
    }
    sortData(t, e) {
      return fetch('url' + new URLSearchParams(e)).then((s) => s.json());
    }
    filterData(t, e) {
      return fetch('url' + new URLSearchParams(e)).then((s) => s.json());
    }
    quickFilterData(t, e) {
      return fetch('url' + new URLSearchParams(e)).then((s) => s.json());
    }
    paginateData(t, e) {
      return fetch('url' + new URLSearchParams(e)).then((s) => s.json());
    }
  }
  class wn {
    constructor(t, e) {
      r(this, st);
      r(this, rt);
      r(this, Hi);
      r(this, zi);
      r(this, Wi);
      r(this, Gi);
      r(this, Ui);
      r(this, we, void 0);
      r(this, $, void 0);
      (this.PubSub = e),
        a(this, we, t),
        a(this, $, {}),
        o(this, Hi, Gr).call(this),
        o(this, zi, Ur).call(this),
        o(this, Wi, Vr).call(this),
        o(this, Gi, Nr).call(this),
        o(this, Ui, jr).call(this);
    }
  }
  (we = new WeakMap()),
    ($ = new WeakMap()),
    (st = new WeakSet()),
    (Vt = function (t) {
      return i(this, we).getData(t);
    }),
    (rt = new WeakSet()),
    (Nt = function (t, e) {
      const s = { caller: this, context: t, rows: e };
      this.PubSub.publish('info:fetch:done', s);
    }),
    (Hi = new WeakSet()),
    (Gr = function () {
      this.PubSub.subscribe('command:fetch:start', (t) => {
        o(this, st, Vt)
          .call(this, i(this, $))
          .then((e) => {
            o(this, rt, Nt).call(this, t.context, e);
          });
      });
    }),
    (zi = new WeakSet()),
    (Ur = function () {
      this.PubSub.subscribe('command:fetch:sort-start', (t) => {
        (i(this, $).sortingOptions = {
          field: t.data.field,
          order: t.data.order,
          comparator: t.data.comparator,
          sortFn: t.data.sortFn,
          activeSorters: t.data.activeSorters,
        }),
          o(this, st, Vt)
            .call(this, i(this, $))
            .then((e) => {
              o(this, rt, Nt).call(this, t.context, e), $t.triggerEvent('sortingDone', i(this, $).sortingOptions);
            });
      });
    }),
    (Wi = new WeakSet()),
    (Vr = function () {
      this.PubSub.subscribe('info:filtering:active-quick-filter-changed', (t) => {
        (i(this, $).quickFilterOptions = { searchTerm: t.data.filter.searchTerm, filterFn: t.data.filter.filterFn }),
          o(this, st, Vt)
            .call(this, i(this, $))
            .then((e) => {
              o(this, rt, Nt).call(this, t.context, e);
            });
      });
    }),
    (Gi = new WeakSet()),
    (Nr = function () {
      this.PubSub.subscribe('info:filtering:active-filters-changed', (t) => {
        (i(this, $).filtersOptions = { filters: t.data.filters }),
          o(this, st, Vt)
            .call(this, i(this, $))
            .then((e) => {
              o(this, rt, Nt).call(this, t.context, e);
            });
      });
    }),
    (Ui = new WeakSet()),
    (jr = function () {
      this.PubSub.subscribe('info:pagination:info-change:done', (t) => {
        (i(this, $).paginationOptions = { firstRowIndex: t.data.firstRowIndex, lastRowIndex: t.data.lastRowIndex }),
          o(this, st, Vt)
            .call(this, i(this, $))
            .then((e) => {
              o(this, rt, Nt).call(this, t.context, e);
            });
      });
    });
  class Sn {
    constructor(t, e, s) {
      (this.name = t), (this.data = e), (this.context = s), (this.key = '' + Math.random());
    }
  }
  class xn {
    constructor() {
      r(this, Vi);
      r(this, G, {
        'command:pagination:load-first-page:start': [],
        'command:pagination:load-prev-page:start': [],
        'command:pagination:load-next-page:start': [],
        'command:pagination:load-last-page:start': [],
        'info:pagination:data-change:done': [],
        'info:pagination:info-change:done': [],
        'info:pagination:page-size-change:done': [],
        'info:dragging:columns-reorder:done': [],
        'command:sorting:start': [],
        'info:filtering:get-active-quick-filter:done': [],
        'info:filtering:header-filter-changed': [],
        'info:filtering:active-filters-changed': [],
        'info:filtering:quick-filter-changed': [],
        'info:filtering:active-quick-filter-changed': [],
        'info:resizing:mousedown': [],
        'info:resizing:start': [],
        'info:resizing:done': [],
        'command:fetch:start': [],
        'command:fetch:sort-start': [],
        'info:fetch:done': [],
        'command:pin-column:start': [],
        'command:rerendering:done': [],
      });
    }
    publish(t, e) {
      if (!i(this, G)[t]) return;
      const s = new Sn(t, e, e.context);
      i(this, G)[t].forEach((n) => {
        n(s);
      });
    }
    subscribe(t, e) {
      if (!i(this, G)[t]) throw new Error(`Could not subscribe: Unsupported event: ${t}`);
      return (
        i(this, G)[t].push(e),
        () => {
          o(this, Vi, Br).call(this, t, e);
        }
      );
    }
  }
  (G = new WeakMap()),
    (Vi = new WeakSet()),
    (Br = function (t, e) {
      i(this, G)[t] && (i(this, G)[t] = i(this, G)[t].filter((s) => s !== e));
    });
  const Pn = {
      cssPrefix: 'data-den-',
      mode: 'client',
      columns: [],
      defaultColDef: {
        sort: !1,
        sortOptions: {
          comparator: (l, t) => (
            typeof l == 'string' && (l = l.toLowerCase()),
            typeof t == 'string' && (t = t.toLowerCase()),
            l === t ? 0 : l > t ? 1 : -1
          ),
        },
        filter: !1,
        filterRenderer: Cs,
        filterOptions: {
          method: 'includes',
          debounceTime: 500,
          caseSensitive: !1,
          dateParserFn: (l) => {
            const t = l.split('/').map((h) => Number(h)),
              [e, s, n] = t;
            return new Date(n, s - 1, e);
          },
          listOptions: [],
        },
        resize: !1,
        width: 200,
        cellRenderer: xs,
      },
      rows: [],
      draggable: !1,
      pagination: !1,
      paginationOptions: { pageSize: 10, pageSizeOptions: [5, 10, 25], ofText: 'of' },
      quickFilterOptions: {
        filterFn: (l, t) => ((l = l.toString().toLowerCase()), (t = t.toString().toLowerCase()), t.includes(l)),
      },
      resizable: !1,
      rowHeight: 42,
      headerHeight: 42,
      multiSortKey: 'shift',
      multiSort: !0,
    },
    De = (l) => l && typeof l == 'object',
    ns = (l, t) =>
      !De(l) || !De(t)
        ? t
        : (Object.keys(t).forEach((e) => {
            const s = l[e],
              n = t[e];
            Array.isArray(s) && Array.isArray(n)
              ? (l[e] = s.concat(n))
              : De(s) && De(n)
              ? (l[e] = ns(Object.assign({}, s), n))
              : (l[e] = n);
          }),
          l);
  class Cn {
    constructor(t, e) {
      r(this, _i);
      r(this, Ji);
      r(this, Ni, void 0);
      r(this, ji, void 0);
      r(this, Bi, void 0);
      r(this, Qi, void 0);
      r(this, Xi, void 0);
      r(this, Ki, void 0);
      r(this, yt, void 0);
      r(this, Se, void 0);
      a(this, yt, null), a(this, Se, null), (this.PubSub = new xn());
      const s = o(this, _i, Qr).call(this, Pn, e);
      a(this, yt, o(this, Ji, Xr).call(this, s)),
        i(this, yt) && a(this, Se, new wn(i(this, yt), this.PubSub)),
        a(this, Ni, new un(t, s, this.PubSub)),
        a(this, ji, new vn(s, this.PubSub)),
        a(this, Bi, new mn(s, this.PubSub)),
        a(this, Qi, new fn(s, this.PubSub)),
        a(this, Xi, e.draggable ? new pn(t, s, this.PubSub) : null),
        a(this, Ki, e.columns.some((n) => n.resize) ? new gn(t, s, this.PubSub) : null);
    }
    on(t, e) {
      $t.on(t, e);
    }
    sort(t, e) {
      const s = 'command:sorting:start';
      this.PubSub.publish(s, { context: new w(s), field: t, order: e });
    }
    quickFilter(t) {
      const s = { context: new w('info:filtering:quick-filter-changed'), searchTerm: t };
      this.PubSub.publish('info:filtering:quick-filter-changed', s);
    }
    pinColumn(t, e) {
      const s = 'command:pin-column:start';
      this.PubSub.publish(s, { context: new w(s), pin: t, colIndex: e });
    }
  }
  (Ni = new WeakMap()),
    (ji = new WeakMap()),
    (Bi = new WeakMap()),
    (Qi = new WeakMap()),
    (Xi = new WeakMap()),
    (Ki = new WeakMap()),
    (yt = new WeakMap()),
    (Se = new WeakMap()),
    (_i = new WeakSet()),
    (Qr = function (t, e) {
      const s = ns(at(t), e);
      return (
        s.columns.forEach((n, h) => {
          s.columns[h] = ns(at(s.defaultColDef), n);
        }),
        s
      );
    }),
    (Ji = new WeakSet()),
    (Xr = function (t) {
      const { mode: e, rows: s } = t;
      return e === 'client' && s.length ? new Fs(t.rows) : e === 'server' ? new Rs() : null;
    }),
    (m.DataDen = Cn),
    (m.DataDenClientDataLoaderStrategy = Fs),
    (m.DataDenDataLoaderStrategy = rs),
    (m.DataDenDefaultCellRenderer = xs),
    (m.DataDenHeaderDateFilterRenderer = an),
    (m.DataDenHeaderNumberFilterRenderer = nn),
    (m.DataDenHeaderSelectFilterRenderer = on),
    (m.DataDenHeaderTextFilterRenderer = Cs),
    (m.DataDenServerDataLoaderStrategy = Rs),
    Object.defineProperty(m, Symbol.toStringTag, { value: 'Module' });
});
//# sourceMappingURL=data-den.umd.min.js.map
