{"version":3,"file":"data-den.es.min.js","sources":["../../src/utils/dom.ts","../../src/utils/filter.ts","../../src/utils/deep-copy.ts","../../src/utils/date.ts","../../src/modules/rendering/editor/data-den-default-cell-editor.ts","../../src/modules/rendering/cell/data-den-cell.ts","../../src/modules/rendering/cell/data-den-default-cell-renderer.ts","../../src/modules/rendering/cell/data-den-default-header-cell-renderer.ts","../../src/modules/rendering/sorter/data-den-header-sorter-renderer.interface.ts","../../src/context.ts","../../src/modules/rendering/sorter/data-den-header-default-sorter-renderer.ts","../../src/modules/rendering/resizer/data-den-header-resizer-renderer.interface.ts","../../src/modules/rendering/resizer/data-den-header-default-resizer-renderer.ts","../../src/modules/rendering/menu/data-den-header-menu-renderer.ts","../../src/modules/rendering/cell/data-den-header-cell.ts","../../src/modules/rendering/filter/data-den-header-filter-renderer.interface.ts","../../src/modules/rendering/filter/data-den-header-text-filter-renderer.ts","../../src/modules/rendering/filter/data-den-header-number-filter-renderer.ts","../../src/modules/rendering/filter/data-den-header-date-filter-renderer.ts","../../src/modules/rendering/filter/data-den-header-select-filter-renderer.ts","../../src/modules/rendering/row/data-den-row.ts","../../src/modules/rendering/row/data-den-header-row.ts","../../src/modules/rendering/pagination/data-den-pagination-renderer.ts","../../src/utils/columns-order.ts","../../src/modules/pinning/data-den-pinning-previous-state.ts","../../src/data-den-event-emitter.ts","../../src/modules/rendering/data-den-rendering-service.ts","../../src/modules/pagination/data-den-pagination-service.ts","../../src/modules/dragging/data-den-dragging-service.ts","../../src/modules/resizing/data-den-resizing-service.ts","../../src/modules/filtering/data-den-filtering-service.ts","../../src/modules/sorting/data-den-sorting-previous-state.ts","../../src/modules/sorting/data-den-sorting-service.ts","../../src/modules/fetch/strategy/data-den-data-loader-strategy.ts","../../src/modules/fetch/strategy/data-den-client-data-loader-strategy-client.ts","../../src/modules/fetch/strategy/data-den-server-data-loader-strategy-server.ts","../../src/modules/fetch/data-den-fetch-service.ts","../../src/data-den-event.ts","../../src/data-den-pub-sub.ts","../../src/default-options.interface.ts","../../src/utils/object.ts","../../src/utils/deep-merge.ts","../../src/data-den.ts"],"sourcesContent":["export function createHtmlElement(template: string, elementName = 'div'): HTMLElement {\n  const placeholder = document.createElement(elementName);\n  placeholder.innerHTML = template;\n\n  return placeholder.firstElementChild as HTMLElement;\n}\n","export function debounce(callback: any, debounceTime: number) {\n  let timeout: ReturnType<typeof setTimeout>;\n\n  return (...args: any) => {\n    const debounceFn = () => {\n      clearTimeout(timeout);\n      callback(...args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(debounceFn, debounceTime);\n  };\n}\n","type Obj<T = string> = { [key: string]: T };\n\nexport const deepCopy = (obj: any) => {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj;\n  }\n\n  if (obj instanceof Date) {\n    return new Date(obj.getTime());\n  }\n\n  if (obj instanceof Array) {\n    return obj.reduce((arr, item, i) => {\n      arr[i] = deepCopy(item);\n      return arr;\n    }, []);\n  }\n\n  if (obj instanceof Object) {\n    return Object.keys(obj).reduce((newObj: Obj, key) => {\n      newObj[key] = deepCopy(obj[key]);\n      return newObj;\n    }, {});\n  }\n};\n","export function parseDate(dateString: string) {\n  const dateParts = dateString.split('-').map((part) => Number(part));\n  const [year, month, day] = dateParts;\n\n  return new Date(year, month - 1, day);\n}\n\nexport function isSameDate(date1: Date, date2: Date): boolean {\n  date1.setHours(0, 0, 0, 0);\n  date2.setHours(0, 0, 0, 0);\n\n  return date1.getTime() === date2.getTime();\n}\n","import { createHtmlElement } from '../../../utils';\nimport { DataDenCellEditor } from './data-den-cell-editor';\nimport { DataDenCellEditorParams } from './data-den-cell-editor-params';\n\nexport class DataDenDefaultCellEditor implements DataDenCellEditor {\n  element: HTMLElement;\n  #cssPrefix: string;\n\n  constructor(params: DataDenCellEditorParams) {\n    this.#cssPrefix = params.cssPrefix;\n    const template = `\n      <div class=\"${this.#cssPrefix}cell-editor-container\"><input type=\"text\" value=\"${params.value}\"></div>\n    `;\n\n    this.element = createHtmlElement(template);\n  }\n\n  getGui(): HTMLElement {\n    return this.element;\n  }\n\n  setValue(): any {}\n\n  parseValue(): any {}\n}\n","import { DataDenCellEditor, DataDenCellEditorParams, DataDenDefaultCellEditor } from '../editor';\nimport { DataDenCellRenderer } from './data-den-cell-renderer.interface';\nimport { DataDenCellRendererParams } from './data-den-cell-renderer-params.interface';\nimport { createHtmlElement } from '../../../utils';\nimport { DataDenInternalOptions } from '../../../data-den-options.interface';\n\nexport class DataDenCell {\n  colIndex: number;\n  rowIndex: number;\n  width: number;\n  #value: any;\n  #options: DataDenInternalOptions;\n  #renderer!: DataDenCellRenderer;\n  #editor!: DataDenCellEditor;\n  #left: string;\n  pinned: string;\n\n  constructor(\n    value: any,\n    colIndex: number,\n    rowIndex: number,\n    left: number,\n    width: number,\n    pinned: string,\n    options: DataDenInternalOptions\n  ) {\n    this.colIndex = colIndex;\n    this.rowIndex = rowIndex;\n    this.width = width;\n    this.#value = value;\n    this.#options = options;\n    this.#left = pinned ? 'auto' : `${left}px`;\n    this.pinned = pinned;\n\n    this.#initRenderers();\n  }\n\n  #initRenderers() {\n    const colDef = this.#options.columns[this.colIndex];\n    const cellRenderer = colDef.cellRenderer!;\n    const cellRendererParams = this.#getCellRendererParams();\n    const cellEditorParams = this.#getCellEditorParams();\n\n    this.#renderer = new cellRenderer(cellRendererParams);\n    this.#editor = new DataDenDefaultCellEditor(cellEditorParams);\n  }\n\n  #getCellRendererParams(): DataDenCellRendererParams {\n    return {\n      value: this.#value,\n      cssPrefix: this.#options.cssPrefix,\n    };\n  }\n\n  #getCellEditorParams(): DataDenCellEditorParams {\n    return {\n      value: this.#value,\n      cssPrefix: this.#options.cssPrefix,\n    };\n  }\n\n  render(): HTMLElement {\n    const template =\n      /* HTML */\n      `\n        <div\n          class=\"${this.#options.cssPrefix}cell ${this.#options.draggable && !this.pinned\n            ? `${this.#options.cssPrefix}cell-draggable`\n            : ''} ${this.pinned === 'left' ? `${this.#options.cssPrefix}cell-pinned-left` : ''} ${this.pinned ===\n          'right'\n            ? `${this.#options.cssPrefix}cell-pinned-right`\n            : ''}\"\n          role=\"gridcell\"\n          ref=\"cell\"\n          style=\"left: ${this.#left}; width: ${this.width}px;\"\n        ></div>\n      `;\n\n    const cellElement = createHtmlElement(template);\n    cellElement.appendChild(this.#renderer.getGui());\n\n    return cellElement;\n  }\n}\n","import { createHtmlElement } from '../../../utils';\nimport { DataDenCellRendererParams } from './data-den-cell-renderer-params.interface';\nimport { DataDenCellRenderer } from './data-den-cell-renderer.interface';\n\nexport class DataDenDefaultCellRenderer implements DataDenCellRenderer {\n  element: HTMLElement;\n\n  constructor(params: DataDenCellRendererParams) {\n    this.element = createHtmlElement(`<span>${params.value}</span>`);\n  }\n\n  getGui(): HTMLElement {\n    return this.element;\n  }\n}\n","import { DataDenCellRendererParams } from './data-den-cell-renderer-params.interface';\nimport { DataDenCellRenderer } from './data-den-cell-renderer.interface';\nimport { createHtmlElement } from '../../../utils/dom';\n\nexport class DataDenDefaultHeaderCellRenderer implements DataDenCellRenderer {\n  element: HTMLElement;\n  #cssPrefix: string;\n\n  constructor(params: DataDenCellRendererParams) {\n    this.#cssPrefix = params.cssPrefix;\n\n    const template = `<div class=\"${this.#cssPrefix}header-cell-value\">${params.value}</div>`;\n\n    this.element = createHtmlElement(template);\n  }\n\n  getGui(): HTMLElement {\n    return this.element;\n  }\n}\n","export abstract class DataDenHeaderSorterRenderer {\n  abstract getGui(): HTMLElement;\n  abstract destroy?(): void;\n}\n","export class Context {\n  constructor(public action: string) {}\n}\n","import { createHtmlElement } from '../../../utils';\nimport { DataDenHeaderSorterRenderer } from './data-den-header-sorter-renderer.interface';\nimport { DataDenPubSub } from './../../../data-den-pub-sub';\nimport { Context } from '../../../context';\nimport { DataDenSortOrder } from '../../sorting/data-den-sorting.interface';\nimport { DataDenActiveSorter } from '../../sorting';\nimport { DataDenEvent } from '../../../data-den-event';\n\nexport class DataDenHeaderDefaultSorterRenderer extends DataDenHeaderSorterRenderer {\n  arrowElement: HTMLElement;\n  element: HTMLElement;\n  #field: string;\n  #cssPrefix: string;\n  #multiSortKey: 'shift' | 'ctrl';\n\n  constructor(\n    field: string,\n    order: DataDenSortOrder,\n    cssPrefix: string,\n    private PubSub: DataDenPubSub,\n    multiSortKey: 'shift' | 'ctrl'\n  ) {\n    super();\n    this.#cssPrefix = cssPrefix;\n    const template = `\n      <div class=\"${this.#cssPrefix}header-sorter\">\n        <div ref=\"sorterIndex\" class=\"${this.#cssPrefix}header-sorter-index\"></div>\n        <div\n          ref=\"sorterArrow\"\n          class=\"${this.#cssPrefix}header-sorter-arrow ${this.#cssPrefix}header-sorter-arrow-${order}\"\n        >\n        </div>\n      </div>\n    `;\n    this.#field = field;\n\n    this.#multiSortKey = multiSortKey;\n    this.element = createHtmlElement(template);\n    this.arrowElement = this.element.querySelector('[ref=\"sorterArrow\"]')!;\n    this.element.addEventListener('click', (event: any) => {\n      const isMultiSort = this.#multiSortKey === 'shift' ? event.shiftKey : event.ctrlKey;\n\n      this.sort(isMultiSort);\n    });\n    this.#subscribeSortingStartEvent();\n  }\n\n  destroy?(): void {\n    throw new Error('Method not implemented.');\n  }\n\n  getGui(): HTMLElement {\n    return this.element;\n  }\n\n  sort(isMultiSort: boolean): void {\n    const command = 'command:sorting:start';\n    this.PubSub.publish(command, {\n      caller: this,\n      context: new Context(command),\n      field: this.#field,\n      isMultiSort,\n    });\n  }\n\n  #subscribeSortingStartEvent(): void {\n    this.PubSub.subscribe('command:fetch:sort-start', (event: DataDenEvent) => {\n      const { field, order, isMultiSort, activeSorters } = event.data;\n\n      if (this.#field === field) {\n        this.#updateArrowDirectionAfterSort(order, isMultiSort);\n      }\n\n      this.#updateSortIndexOrder(activeSorters);\n    });\n  }\n\n  #updateArrowDirectionAfterSort(order: string, isMultiSort: boolean): void {\n    if (!isMultiSort) {\n      const arrowElements = document.querySelectorAll('[ref=\"sorterArrow\"]');\n\n      arrowElements.forEach((arrowElement) => {\n        arrowElement.classList.remove(\n          `${this.#cssPrefix}header-sorter-arrow-asc`,\n          `${this.#cssPrefix}header-sorter-arrow-desc`\n        );\n      });\n    }\n\n    if (order === '' && isMultiSort) {\n      this.arrowElement.classList.remove(\n        `${this.#cssPrefix}header-sorter-arrow-asc`,\n        `${this.#cssPrefix}header-sorter-arrow-desc`\n      );\n    }\n\n    this.arrowElement.classList.add(`${this.#cssPrefix}header-sorter-arrow-${order}`);\n  }\n\n  #updateSortIndexOrder(activeSorters: DataDenActiveSorter[]) {\n    const indexElement = this.element.querySelector('[ref=\"sorterIndex\"]');\n    const activeSorter = activeSorters.find((sorter: DataDenActiveSorter) => sorter.field === this.#field);\n\n    if (activeSorters.length > 1 && activeSorter) {\n      const sortIndexNumber = activeSorter.sortIndex + 1;\n      indexElement.textContent = sortIndexNumber.toString();\n    } else {\n      indexElement.textContent = '';\n    }\n  }\n}\n","export abstract class DataDenHeaderResizerRenderer {\n  abstract getGui(): HTMLElement;\n  abstract destroy?(): void;\n}\n","import { createHtmlElement } from '../../../utils';\nimport { DataDenHeaderResizerRenderer } from './data-den-header-resizer-renderer.interface';\nimport { DataDenPubSub } from '../../../data-den-pub-sub';\nimport { Context } from '../../../context';\nimport { DataDenColDef } from '../../../data-den-options.interface';\n\nexport class DataDenHeaderDefaultResizerRenderer extends DataDenHeaderResizerRenderer {\n  element: HTMLElement;\n  #cssPrefix: string;\n  #isPinnedRight: boolean;\n\n  constructor(cssPrefix: string, colDef: DataDenColDef, private PubSub: DataDenPubSub) {\n    super();\n\n    this.#cssPrefix = cssPrefix;\n    this.#isPinnedRight = colDef.pinned === 'right';\n\n    const template = `<div class=\"${this.#cssPrefix}header-resizer ${\n      this.#isPinnedRight ? this.#cssPrefix + 'header-resizer-left' : ''\n    }\"></div>`;\n\n    this.element = createHtmlElement(template);\n    this.element.addEventListener('mousedown', this.#onMouseDown.bind(this));\n  }\n\n  getGui(): HTMLElement {\n    return this.element;\n  }\n\n  destroy() {}\n\n  #onMouseDown(event: MouseEvent): void {\n    event.stopPropagation();\n\n    this.PubSub.publish('info:resizing:mousedown', {\n      target: event.target,\n      isPinnedRight: this.#isPinnedRight,\n      context: new Context('info:resizing:mousedown'),\n    });\n  }\n}\n","import { createHtmlElement } from '../../../utils';\nimport { DataDenColDef } from '../../../data-den-options.interface';\nimport { DataDenPubSub } from '../../../data-den-pub-sub';\nimport { Context } from '../../../context';\n\nexport class DataDenHeaderMenuRenderer {\n  toggler: HTMLElement;\n  dropdown: HTMLElement;\n  #cssPrefix: string;\n  colDef: DataDenColDef;\n  colIndex: number;\n\n  constructor(cssPrefix: string, colDef: DataDenColDef, colIndex: number, private PubSub: DataDenPubSub) {\n    this.#cssPrefix = cssPrefix;\n    this.colDef = colDef;\n    this.colIndex = colIndex;\n\n    const template = `<button class=\"${this.#cssPrefix}header-menu-toggler\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16px\" height=\"100%\" viewBox=\"0 0 16 16\" fill=\"#000000\" class=\"${\n        this.#cssPrefix\n      }header-menu-icon\">\n        <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\"/>\n      </svg>\n    </button>\n    `;\n\n    const dropdownTemplate = `<div class=\"${this.#cssPrefix}header-menu-dropdown\">\n      ${\n        this.colDef.pinned\n          ? `<a href=\"#\" class=\"${this.#cssPrefix}header-menu-dropdown-item\" ref=\"unPinColTrigger\">Unpin</a>`\n          : ''\n      }\n      ${\n        this.colDef.pinned === 'right' || !this.colDef.pinned\n          ? `<a href=\"#\" class=\"${\n              this.#cssPrefix\n            }header-menu-dropdown-item\" ref=\"pinLeftPinColTrigger\">Pin to the left</a>`\n          : ''\n      }\n      ${\n        this.colDef.pinned === 'left' || !this.colDef.pinned\n          ? `<a href=\"#\" class=\"${\n              this.#cssPrefix\n            }header-menu-dropdown-item\" ref=\"pinRightPinColTrigger\">Pin to the right</a>`\n          : ''\n      }\n    </div>`;\n\n    this.toggler = createHtmlElement(template);\n    this.dropdown = createHtmlElement(dropdownTemplate);\n\n    this.#initDropdown();\n  }\n\n  #initDropdown() {\n    this.toggler.addEventListener('click', () => {\n      this.dropdown.classList.toggle('active');\n    });\n\n    const unPinTrigger = this.dropdown.querySelector('[ref=\"unPinColTrigger\"]');\n    const pinLeftTrigger = this.dropdown.querySelector('[ref=\"pinLeftPinColTrigger\"]');\n    const pinRightTrigger = this.dropdown.querySelector('[ref=\"pinRightPinColTrigger\"]');\n\n    unPinTrigger?.addEventListener('click', (event) => {\n      event.preventDefault();\n      this.PubSub.publish('command:pin-column:start', {\n        pin: false,\n        colIndex: this.colIndex,\n        context: new Context('command:pin-column:start'),\n      });\n    });\n\n    pinLeftTrigger?.addEventListener('click', (event) => {\n      event.preventDefault();\n      this.PubSub.publish('command:pin-column:start', {\n        pin: 'left',\n        colIndex: this.colIndex,\n        context: new Context('command:pin-column:start'),\n      });\n    });\n\n    pinRightTrigger?.addEventListener('click', (event) => {\n      event.preventDefault();\n      this.PubSub.publish('command:pin-column:start', {\n        pin: 'right',\n        colIndex: this.colIndex,\n        context: new Context('command:pin-column:start'),\n      });\n    });\n  }\n\n  getGui(): HTMLElement {\n    return this.toggler;\n  }\n\n  getDropdownGui(): HTMLElement {\n    return this.dropdown;\n  }\n\n  destroy() {}\n}\n","import { DataDenHeaderFilterChangeEvent, DataDenHeaderFilterRenderer } from '../filter';\nimport { DataDenHeaderDefaultSorterRenderer, DataDenHeaderSorterRenderer } from '../sorter';\nimport { DataDenHeaderDefaultResizerRenderer, DataDenHeaderResizerRenderer } from '../resizer';\nimport { DataDenHeaderMenuRenderer } from '../menu';\nimport { DataDenCell } from './data-den-cell';\nimport { DataDenCellRenderer } from './data-den-cell-renderer.interface';\nimport { DataDenColDef, DataDenInternalOptions } from '../../../data-den-options.interface';\nimport { DataDenHeaderFilterRendererParams } from '../filter/data-den-header-filter-renderer-params.interface';\nimport { DataDenSortOrder } from '../../sorting';\nimport { DataDenCellRendererParams } from './data-den-cell-renderer-params.interface';\nimport { createHtmlElement } from '../../../utils';\nimport { DataDenDefaultHeaderCellRenderer } from './data-den-default-header-cell-renderer';\nimport { Context } from '../../../context';\nimport { DataDenPubSub } from '../../../data-den-pub-sub';\n\nexport class DataDenHeaderCell extends DataDenCell {\n  rowIndex: number;\n  colIndex: number;\n  width: number;\n  #value: any;\n  #left: string;\n  pinned: string;\n  #filterRenderer: DataDenHeaderFilterRenderer | null = null;\n  #sorterRenderer: DataDenHeaderSorterRenderer | null = null;\n  #resizerRenderer: DataDenHeaderResizerRenderer | null = null;\n  #headerMenuRenderer: DataDenHeaderMenuRenderer | null = null;\n  #renderer!: DataDenCellRenderer;\n  #options: DataDenInternalOptions;\n  #order: DataDenSortOrder;\n  #isDropdownInitiated: boolean;\n\n  constructor(\n    value: any,\n    colIndex: number,\n    rowIndex: number,\n    left: number,\n    width: number,\n    pinned: string,\n    options: DataDenInternalOptions,\n    order: DataDenSortOrder,\n    private PubSub: DataDenPubSub\n  ) {\n    super(value, rowIndex, colIndex, left, width, pinned, options);\n\n    this.#value = value;\n    this.#left = pinned ? 'auto' : `${left}px`;\n    this.width = width;\n    this.pinned = pinned;\n    this.colIndex = colIndex;\n    this.rowIndex = rowIndex;\n    this.#options = options;\n    this.#order = order;\n    this.#isDropdownInitiated = false;\n\n    this.#initRenderers();\n  }\n\n  #initRenderers() {\n    const colDef = this.#options.columns[this.colIndex];\n    const cssPrefix = this.#options.cssPrefix;\n    const { field, filter, sort, resize } = colDef;\n    const order = this.#order;\n\n    this.#renderer = new DataDenDefaultHeaderCellRenderer(this.#getCellRendererParams());\n    this.#headerMenuRenderer = new DataDenHeaderMenuRenderer(cssPrefix, colDef, this.colIndex, this.PubSub);\n\n    if (filter) {\n      const filterRenderer = colDef.filterRenderer;\n      const filterParams = this.#getHeaderFilterParams(colDef);\n      this.#filterRenderer = new filterRenderer(filterParams);\n    }\n\n    if (sort) {\n      this.#sorterRenderer = new DataDenHeaderDefaultSorterRenderer(\n        field,\n        order,\n        cssPrefix,\n        this.PubSub,\n        this.#options.multiSortKey\n      );\n    }\n\n    if (resize) {\n      this.#resizerRenderer = new DataDenHeaderDefaultResizerRenderer(cssPrefix, colDef, this.PubSub);\n    }\n  }\n\n  #getCellRendererParams(): DataDenCellRendererParams {\n    return {\n      value: this.#value,\n      cssPrefix: this.#options.cssPrefix,\n    };\n  }\n\n  #getHeaderFilterParams(colDef: DataDenColDef): DataDenHeaderFilterRendererParams {\n    const field = colDef.field;\n    const { method, debounceTime, listOptions } = colDef.filterOptions;\n\n    const params: DataDenHeaderFilterRendererParams = {\n      colDef,\n      field,\n      method,\n      debounceTime,\n      cssPrefix: this.#options.cssPrefix,\n      listOptions,\n      filterChanged: () => this.#onFilterChange(),\n    };\n\n    return params;\n  }\n\n  #onFilterChange() {\n    const colDef = this.#options.columns[this.colIndex];\n    const field = colDef.field;\n\n    const filter = this.#filterRenderer;\n    const context = new Context('info:filtering:header-filter-changed');\n    const type = filter.getType();\n    const state = filter.getState();\n    const isActive = filter.isActive();\n    const filterFn = filter.getFilterFn();\n\n    const filterChangeEvent: DataDenHeaderFilterChangeEvent = {\n      context,\n      field,\n      type,\n      state,\n      isActive,\n      filterFn,\n    };\n\n    this.PubSub.publish('info:filtering:header-filter-changed', filterChangeEvent);\n  }\n\n  render(): HTMLElement {\n    const template =\n      /* HTML */\n      `<div\n        class=\"${this.#options.cssPrefix}header-cell ${this.#options.draggable && !this.pinned\n          ? `${this.#options.cssPrefix}header-cell-draggable`\n          : ''} ${this.pinned === 'left' ? `${this.#options.cssPrefix}header-cell-pinned-left` : ''} ${this.pinned ===\n        'right'\n          ? `${this.#options.cssPrefix}header-cell-pinned-right`\n          : ''}\"\n        role=\"columnheader\"\n        ref=\"headerCell\"\n        style=\"left: ${this.#left}; width: ${this.width}px;\"\n      ></div>`;\n\n    const cellElement = createHtmlElement(template);\n    cellElement.appendChild(this.#renderer.getGui());\n\n    if (this.#sorterRenderer) {\n      cellElement.appendChild(this.#sorterRenderer.getGui());\n    }\n\n    if (this.#filterRenderer) {\n      cellElement.appendChild(this.#filterRenderer.getGui());\n    }\n\n    cellElement.appendChild(this.#headerMenuRenderer.getGui());\n    this.#renderDropdown(cellElement);\n\n    if (this.#resizerRenderer) {\n      cellElement.appendChild(this.#resizerRenderer.getGui());\n    }\n\n    return cellElement;\n  }\n\n  #renderDropdown(cellElement: HTMLElement) {\n    if (this.#isDropdownInitiated) {\n      return;\n    }\n\n    cellElement.appendChild(this.#headerMenuRenderer?.getDropdownGui());\n\n    this.#isDropdownInitiated = true;\n  }\n}\n","export abstract class DataDenHeaderFilterRenderer {\n  abstract getGui(): HTMLElement;\n  abstract destroy?(): void;\n  abstract getType(): string;\n  abstract getState(): any;\n  abstract isActive(): boolean;\n  abstract getFilterFn(): (state: any, value: any) => boolean;\n}\n","import { createHtmlElement, debounce } from '../../../utils';\nimport { DataDenHeaderFilterRendererParams } from './data-den-header-filter-renderer-params.interface';\nimport { DataDenHeaderFilterRenderer } from './data-den-header-filter-renderer.interface';\n\nexport class DataDenHeaderTextFilterRenderer extends DataDenHeaderFilterRenderer {\n  element: HTMLElement;\n  input: HTMLInputElement;\n  params: DataDenHeaderFilterRendererParams;\n  #cssPrefix: string;\n\n  constructor(params: DataDenHeaderFilterRendererParams) {\n    super();\n    this.params = params;\n    this.#cssPrefix = params.cssPrefix;\n\n    const template =\n      /* HTLM */\n      `\n      <div class=\"${this.#cssPrefix}header-filter\">\n        <input type=\"text\" class=\"${this.#cssPrefix}header-filter-input\">\n      </div>\n    `;\n\n    this.element = createHtmlElement(template);\n    this.input = this.element.querySelector(`.${this.#cssPrefix}header-filter-input`);\n\n    this.attachUiEvents(params);\n  }\n\n  getGui(): HTMLElement {\n    return this.element;\n  }\n\n  getType(): string {\n    return 'text';\n  }\n\n  getState(): any {\n    const value = this.input ? this.input.value : null;\n\n    return {\n      method: this.params.method,\n      searchTerm: value,\n    };\n  }\n\n  isActive(): boolean {\n    const value = this.input ? this.input.value : null;\n\n    return !!value;\n  }\n\n  getFilterFn(): (state: any, value: any) => boolean {\n    const options = this.params.colDef.filterOptions;\n\n    return (state: any, value: any) => {\n      let searchTerm = state.searchTerm;\n      const method = state.method;\n      const caseSensitive = options.caseSensitive;\n      value = caseSensitive ? value : value.toString().toLowerCase();\n      searchTerm = caseSensitive ? searchTerm : searchTerm.toString().toLowerCase();\n\n      switch (method) {\n        case 'includes':\n          return value.includes(searchTerm);\n        default:\n          return false;\n      }\n    };\n  }\n\n  attachUiEvents(params: DataDenHeaderFilterRendererParams) {\n    if (this.input) {\n      const debounceFilter: () => void = debounce(() => params.filterChanged(), params.debounceTime);\n\n      this.input.addEventListener('keyup', () => debounceFilter());\n    }\n  }\n\n  destroy() {}\n}\n","import { createHtmlElement, debounce } from '../../../utils';\nimport { DataDenHeaderFilterRendererParams } from './data-den-header-filter-renderer-params.interface';\nimport { DataDenHeaderFilterRenderer } from './data-den-header-filter-renderer.interface';\n\nexport class DataDenHeaderNumberFilterRenderer extends DataDenHeaderFilterRenderer {\n  element: HTMLElement;\n  input: HTMLInputElement;\n  params: DataDenHeaderFilterRendererParams;\n  #cssPrefix: string;\n\n  constructor(params: DataDenHeaderFilterRendererParams) {\n    super();\n    this.params = params;\n    this.#cssPrefix = params.cssPrefix;\n\n    const template =\n      /* HTML */\n      `\n        <div class=\"${this.#cssPrefix}header-filter\">\n          <input type=\"number\" class=\"${this.#cssPrefix}header-filter-input\" />\n        </div>\n      `;\n\n    this.element = createHtmlElement(template);\n    this.input = this.element.querySelector(`.${this.#cssPrefix}header-filter-input`);\n\n    this.attachUiEvents(params);\n  }\n\n  getGui(): HTMLElement {\n    return this.element;\n  }\n\n  getType(): string {\n    return 'number';\n  }\n\n  getState(): any {\n    const value = this.input.value;\n\n    return {\n      method: this.params.method,\n      searchTerm: value,\n    };\n  }\n\n  isActive(): boolean {\n    const value = this.input.value;\n\n    return !!value;\n  }\n\n  getFilterFn(): (state: any, value: any) => boolean {\n    return (state: any, value: any) => {\n      const method = state.method;\n      const searchTermAsNumber = Number(state.searchTerm);\n      const valueAsNumber = Number(value);\n\n      switch (method) {\n        case 'equals':\n          return valueAsNumber === searchTermAsNumber;\n        default:\n          return false;\n      }\n    };\n  }\n\n  attachUiEvents(params: DataDenHeaderFilterRendererParams) {\n    if (this.input) {\n      const debounceFilter: () => void = debounce(() => params.filterChanged(), params.debounceTime);\n\n      this.input.addEventListener('keyup', () => debounceFilter());\n    }\n  }\n\n  destroy() {}\n}\n","import { createHtmlElement, debounce, isSameDate, parseDate } from '../../../utils';\nimport { DataDenHeaderFilterRendererParams } from './data-den-header-filter-renderer-params.interface';\nimport { DataDenHeaderFilterRenderer } from './data-den-header-filter-renderer.interface';\n\nexport class DataDenHeaderDateFilterRenderer extends DataDenHeaderFilterRenderer {\n  element: HTMLElement;\n  input: HTMLInputElement;\n  params: DataDenHeaderFilterRendererParams;\n  #cssPrefix: string;\n\n  constructor(params: DataDenHeaderFilterRendererParams) {\n    super();\n    this.params = params;\n    this.#cssPrefix = params.cssPrefix;\n\n    const template =\n      /* HTML */\n      `\n        <div class=\"${this.#cssPrefix}header-filter\">\n          <input type=\"date\" class=\"${this.#cssPrefix}header-filter-input\" />\n        </div>\n      `;\n\n    this.element = createHtmlElement(template);\n    this.input = this.element.querySelector(`.${this.#cssPrefix}header-filter-input`);\n\n    this.attachUiEvents(params);\n  }\n\n  getGui(): HTMLElement {\n    return this.element;\n  }\n\n  getType(): string {\n    return 'date';\n  }\n\n  getState(): any {\n    const value = this.input.value;\n\n    return {\n      method: this.params.method,\n      searchTerm: value,\n    };\n  }\n\n  isActive(): boolean {\n    const value = this.input.value;\n\n    return !!value;\n  }\n\n  getFilterFn(): (state: any, value: any) => boolean {\n    const options = this.params.colDef.filterOptions;\n\n    return (state: any, value: any) => {\n      const dateParserFn = options.dateParserFn;\n      const method = state.method;\n      const searchTermAsDate = parseDate(state.searchTerm);\n      const valueAsDate = typeof value === 'string' ? dateParserFn(value) : value;\n\n      switch (method) {\n        case 'equals':\n          return isSameDate(searchTermAsDate, valueAsDate);\n        default:\n          return false;\n      }\n    };\n  }\n\n  attachUiEvents(params: DataDenHeaderFilterRendererParams) {\n    if (this.input) {\n      const debounceFilter: () => void = debounce(() => params.filterChanged(), params.debounceTime);\n\n      this.input.addEventListener('change', () => debounceFilter());\n    }\n  }\n\n  destroy() {}\n}\n","import { createHtmlElement } from '../../../utils';\nimport { DataDenHeaderFilterRendererParams } from './data-den-header-filter-renderer-params.interface';\nimport { DataDenHeaderFilterRenderer } from './data-den-header-filter-renderer.interface';\n\nexport class DataDenHeaderSelectFilterRenderer extends DataDenHeaderFilterRenderer {\n  element: HTMLElement;\n  select: HTMLSelectElement;\n  params: DataDenHeaderFilterRendererParams;\n  #cssPrefix: string;\n\n  constructor(params: DataDenHeaderFilterRendererParams) {\n    super();\n    this.params = params;\n    this.#cssPrefix = params.cssPrefix;\n\n    const template =\n      /* HTML */\n      `\n        <div class=\"${this.#cssPrefix}header-filter\">\n          <select class=\"${this.#cssPrefix}header-filter-select\">\n            <option disabled selected value></option>\n          </select>\n        </div>\n      `;\n\n    this.element = createHtmlElement(template);\n    this.select = this.element.querySelector(`.${this.#cssPrefix}header-filter-select`);\n\n    this.#createSelectOptions(params);\n    this.attachUiEvents(params);\n  }\n\n  #createSelectOptions(params: DataDenHeaderFilterRendererParams) {\n    if (this.select) {\n      const options = params.listOptions;\n      const optionsFragment = document.createDocumentFragment();\n\n      options.forEach((option) => {\n        const optionEl = document.createElement('option');\n        optionEl.label = option.label;\n        optionEl.value = option.value;\n        optionsFragment.appendChild(optionEl);\n      });\n\n      this.select.appendChild(optionsFragment);\n    }\n  }\n\n  getGui(): HTMLElement {\n    return this.element;\n  }\n\n  getType(): string {\n    return 'select';\n  }\n\n  getState() {\n    return {\n      method: this.params.method,\n      searchTerm: this.select.value,\n    };\n  }\n\n  isActive(): boolean {\n    const value = this.select.value;\n\n    return !!value;\n  }\n\n  getFilterFn(): (state: any, value: any) => boolean {\n    return (state: any, value: any) => {\n      const method = state.method;\n      value = value.toString().toLowerCase();\n\n      switch (method) {\n        case 'includes':\n          return value.includes(state.searchTerm);\n        case 'equals':\n          return value === state.searchTerm;\n        default:\n          return false;\n      }\n    };\n  }\n\n  attachUiEvents(params: DataDenHeaderFilterRendererParams) {\n    if (this.select) {\n      this.select.addEventListener('change', () => {\n        params.filterChanged();\n      });\n    }\n  }\n\n  destroy() {}\n}\n","import { DataDenCell } from '../cell/data-den-cell';\nimport { createHtmlElement } from '../../../utils/dom';\nimport { DataDenInternalOptions } from '../../../data-den-options.interface';\n\nexport class DataDenRow {\n  element: HTMLElement;\n  #options: DataDenInternalOptions;\n\n  constructor(public index: number, public cells: DataDenCell[], options: DataDenInternalOptions) {\n    this.#options = options;\n    const template =\n      /* HTML */\n      `<div class=\"${options.cssPrefix}row\" role=\"row\" ref=\"row\" style=\"height: ${options.rowHeight}px;\"></div>`;\n\n    this.element = createHtmlElement(template);\n  }\n\n  render(): HTMLElement {\n    const cells = document.createDocumentFragment();\n\n    const leftCellsWidth = this.cells\n      .filter((cell) => cell.pinned === 'left')\n      .reduce((acc, curr) => acc + curr.width, 0);\n    const rightCellsWidth = this.cells\n      .filter((cell) => cell.pinned === 'right')\n      .reduce((acc, curr) => acc + curr.width, 0);\n\n    const leftCellsWrapper = createHtmlElement(\n      /* HTML */\n      `<div\n        class=\"${this.#options.cssPrefix}left-cells-wrapper\"\n        style=\"height: ${this.#options.rowHeight + 2}px;\"\n      ></div>`\n    );\n    const centerCellsWrapper = createHtmlElement(\n      /* HTML */\n      `<div\n        class=\"${this.#options.cssPrefix}main-cells-wrapper\"\n        style=\"left: ${leftCellsWidth}px; width: calc(100% - ${leftCellsWidth + rightCellsWidth}px); height: ${this\n          .#options.rowHeight}px;\"\n        ref=\"rowMainCellsWrapper\"\n      ></div>`\n    );\n    const rightCellsWrapper = createHtmlElement(\n      /* HTML */\n      `<div\n        class=\"${this.#options.cssPrefix}right-cells-wrapper\"\n        style=\"height: ${this.#options.rowHeight + 2}px\"\n      ></div>`\n    );\n\n    cells.appendChild(leftCellsWrapper);\n    cells.appendChild(centerCellsWrapper);\n    cells.appendChild(rightCellsWrapper);\n\n    this.cells.filter((cell) => cell.pinned === 'left').forEach((cell) => leftCellsWrapper.appendChild(cell.render()));\n    this.cells.filter((cell) => !cell.pinned).forEach((cell) => centerCellsWrapper.appendChild(cell.render()));\n    this.cells\n      .filter((cell) => cell.pinned === 'right')\n      .forEach((cell) => rightCellsWrapper.appendChild(cell.render()));\n\n    this.element.appendChild(cells);\n\n    return this.element;\n  }\n}\n","import { DataDenInternalOptions } from '../../../data-den-options.interface';\nimport { createHtmlElement } from '../../../utils';\nimport { DataDenHeaderCell } from '../cell/data-den-header-cell';\nimport { DataDenRow } from './data-den-row';\n\nexport class DataDenHeaderRow extends DataDenRow {\n  #options: DataDenInternalOptions;\n\n  constructor(public index: number, public cells: DataDenHeaderCell[], options: DataDenInternalOptions) {\n    super(index, cells, options);\n    this.#options = options;\n\n    const template =\n      /* HTML */\n      `<div\n        class=\"${options.cssPrefix}header-row\"\n        role=\"row\"\n        ref=\"headerRow\"\n        style=\"height: ${options.rowHeight}px\"\n      ></div>`;\n\n    this.element = createHtmlElement(template);\n  }\n\n  render(): HTMLElement {\n    const cells = document.createDocumentFragment();\n\n    const leftCellsWidth = this.cells\n      .filter((cell) => cell.pinned === 'left')\n      .reduce((acc, curr) => acc + curr.width, 0);\n    const rightCellsWidth = this.cells\n      .filter((cell) => cell.pinned === 'right')\n      .reduce((acc, curr) => acc + curr.width, 0);\n\n    const leftCellsWrapper = createHtmlElement(\n      /* HTML */\n      `<div ref=\"headerLeftCellsWrapper\" class=\"${this.#options.cssPrefix}header-left-cells-wrapper\"></div>`\n    );\n    const centerCellsWrapper = createHtmlElement(\n      /* HTML */\n      `<div\n        ref=\"headerMainCellsWrapper\"\n        class=\"${this.#options.cssPrefix}header-main-cells-wrapper\"\n        style=\"left: ${leftCellsWidth}px; width: calc(100% - ${leftCellsWidth + rightCellsWidth}px)\"\n      ></div>`\n    );\n    const rightCellsWrapper = createHtmlElement(\n      /* HTML */\n      `<div ref=\"headerRightCellsWrapper\" class=\"${this.#options.cssPrefix}header-right-cells-wrapper\"></div>`\n    );\n\n    cells.appendChild(leftCellsWrapper);\n    cells.appendChild(centerCellsWrapper);\n    cells.appendChild(rightCellsWrapper);\n\n    this.cells.filter((cell) => cell.pinned === 'left').forEach((cell) => leftCellsWrapper.appendChild(cell.render()));\n    this.cells.filter((cell) => !cell.pinned).forEach((cell) => centerCellsWrapper.appendChild(cell.render()));\n    this.cells\n      .filter((cell) => cell.pinned === 'right')\n      .forEach((cell) => rightCellsWrapper.appendChild(cell.render()));\n\n    this.element.appendChild(cells);\n\n    return this.element;\n  }\n}\n","import { createHtmlElement } from '../../../utils';\nimport { DataDenPubSub } from '../../../data-den-pub-sub';\nimport { DataDenPaginationOptions } from '../../../data-den-options.interface';\nimport { Context } from '../../../context';\n\nexport class DataDenPaginationRenderer {\n  element: HTMLElement;\n  options: DataDenPaginationOptions;\n  buttons: Record<string, HTMLButtonElement>;\n\n  constructor(options: DataDenPaginationOptions, private PubSub: DataDenPubSub) {\n    this.options = options;\n\n    const template =\n      /* HTML */\n      `<div class=\"data-den-pagination\">\n        <div class=\"data-den-pagination-content\">\n          <button class=\"data-den-pagination-first-button\"><<</button>\n          <button class=\"data-den-pagination-prev-button\"><</button>\n          <div class=\"data-den-pagination-info\">1-10 ${this.options.ofText || 'of'} 100</div>\n          <button class=\"data-den-pagination-next-button\">></button>\n          <button class=\"data-den-pagination-last-button\">>></button>\n        </div>\n      </div>`;\n\n    this.element = createHtmlElement(template);\n    this.buttons = {\n      first: this.element.querySelector('.data-den-pagination-first-button') as HTMLButtonElement,\n      prev: this.element.querySelector('.data-den-pagination-prev-button') as HTMLButtonElement,\n      next: this.element.querySelector('.data-den-pagination-next-button') as HTMLButtonElement,\n      last: this.element.querySelector('.data-den-pagination-last-button') as HTMLButtonElement,\n    };\n    this.attachUiEvents();\n    this.subscribeToEvents();\n  }\n\n  getGui(): HTMLElement {\n    return this.element;\n  }\n\n  attachUiEvents(): void {\n    this.buttons.first.addEventListener('click', () => {\n      this.PubSub.publish('command:pagination:load-first-page:start', {\n        context: new Context('command:pagination:load-first-page:start'),\n      });\n    });\n    this.buttons.prev.addEventListener('click', () => {\n      this.PubSub.publish('command:pagination:load-prev-page:start', {\n        context: new Context('command:pagination:load-prev-page:start'),\n      });\n    });\n    this.buttons.next.addEventListener('click', () => {\n      this.PubSub.publish('command:pagination:load-next-page:start', {\n        context: new Context('command:pagination:load-next-page:start'),\n      });\n    });\n    this.buttons.last.addEventListener('click', () => {\n      this.PubSub.publish('command:pagination:load-last-page:start', {\n        context: new Context('command:pagination:load-last-page:start'),\n      });\n    });\n  }\n\n  destroy(): void {\n    this.element.innerHTML = '';\n    document.querySelector('.data-den-pagination')?.remove();\n  }\n\n  private subscribeToEvents(): void {\n    this.PubSub.subscribe(\n      'info:pagination:info-change:done',\n      (event: { data: { firstRowIndex: number; lastRowIndex: number; allTotalRows: number; pageSize: number } }) => {\n        this.updateInfo(event.data.firstRowIndex, event.data.lastRowIndex, event.data.allTotalRows);\n        this.updateButtonsState(event.data.firstRowIndex, event.data.lastRowIndex, event.data.allTotalRows);\n      }\n    );\n  }\n\n  private updateButtonsState(firstRowIndex: number, lastRowIndex: number, allTotalRows: number): void {\n    Object.values(this.buttons).forEach((button: HTMLButtonElement) => (button.disabled = false));\n\n    if (firstRowIndex === 0) {\n      this.buttons.first.disabled = true;\n      this.buttons.prev.disabled = true;\n    }\n\n    if (lastRowIndex === allTotalRows) {\n      this.buttons.next.disabled = true;\n      this.buttons.last.disabled = true;\n    }\n  }\n\n  private updateInfo(firstRowIndex: number, lastRowIndex: number, allTotalRows: number): void {\n    const info = this.element.querySelector('.data-den-pagination-info');\n    info!.innerHTML = `${firstRowIndex + 1}-${lastRowIndex} ${this.options.ofText || 'of'} ${allTotalRows}`;\n  }\n\n  public updatePageSize(pageSize: number): void {\n    this.PubSub.publish('info:pagination:page-size-change:done', {\n      pageSize: pageSize,\n      context: new Context('info:pagination:page-size-change:done'),\n    });\n  }\n}\n","import { DataDenColDef } from '../data-den-options.interface';\n\n// Get Elements\nexport const getPinnedLeftColumns = (columns: DataDenColDef[]) => {\n  return columns.filter((col) => col.pinned === 'left');\n};\n\nexport const getMainColumns = (columns: DataDenColDef[]) => {\n  return columns.filter((col) => !col.pinned);\n};\n\nexport const getPinnedRightColumns = (columns: DataDenColDef[]) => {\n  return columns.filter((col) => col.pinned === 'right');\n};\n\nexport const getMainOrderedColumns = (columns: DataDenColDef[]) => {\n  return getMainColumnIndexes(columns).map((index) => columns[index]);\n};\n\n// Get Indexes\nexport const getMainColumnIndexes = (columns: DataDenColDef[]) => {\n  return getMainColumns(columns).map((col) => columns.indexOf(col));\n};\n\n// Get Orders\nexport const getPinnedLeftColumnsOrder = (columns: DataDenColDef[]) => {\n  return getPinnedLeftColumns(columns).map((_, key) => key);\n};\n\nexport const getMainColumnsOrder = (columns: DataDenColDef[]) => {\n  return getMainColumns(columns).map((_, key) => key);\n};\n\nexport const getPinnedRightColumnsOrder = (columns: DataDenColDef[]) => {\n  return getPinnedRightColumns(columns).map((_, key) => key);\n};\n\nexport const getAllColumnsOrder = (columns: DataDenColDef[]) => {\n  return [\n    ...getPinnedLeftColumns(columns).map((col) => columns.indexOf(col)),\n    ...getMainColumns(columns).map((col) => columns.indexOf(col)),\n    ...getPinnedRightColumns(columns).map((col) => columns.indexOf(col)),\n  ];\n};\n","export class DataDenPinningPreviousState {\n  private data: { [key: string]: any } = {};\n\n  constructor(values: { [key: string]: any }) {\n    this.data = { ...this.data, ...values };\n  }\n\n  getValue(key: string): any {\n    return this.data[key];\n  }\n}\n","export class DataDenEventEmitter {\n  static #callbacks: { [key: string]: any[] } = {};\n\n  static on(name: string, callback: any): void {\n    if (!this.#callbacks[name]) {\n      this.#callbacks[name] = [];\n    }\n    this.#callbacks[name].push(callback);\n  }\n\n  static triggerEvent(name: string, args: any): any {\n    const event = {\n      name,\n      preventDefault: () => {\n        event.defaultPrevented = true;\n      },\n      defaultPrevented: false,\n      ...args,\n    };\n\n    this.#callbacks[name]?.forEach((callback) => {\n      callback(event);\n    });\n\n    return event;\n  }\n}\n","import { DataDenColDef, DataDenInternalOptions } from '../../data-den-options.interface';\nimport { DataDenCell, DataDenHeaderCell } from './cell';\nimport { DataDenPaginationRenderer } from './pagination';\nimport { DataDenHeaderRow, DataDenRow } from './row';\nimport { DataDenPubSub } from '../../data-den-pub-sub';\nimport { DataDenEvent } from '../../data-den-event';\nimport { DataDenSortOrder } from '../sorting/data-den-sorting.interface';\nimport { Context } from '../../context';\nimport {\n  getMainColumnIndexes,\n  getMainOrderedColumns,\n  getPinnedLeftColumns,\n  getMainColumns,\n  getPinnedRightColumns,\n  getAllColumnsOrder,\n} from '../../utils/columns-order';\nimport { DataDenPinningPreviousState } from '../pinning/data-den-pinning-previous-state';\nimport { DataDenEventEmitter } from '../../data-den-event-emitter';\n\nexport class DataDenRenderingService {\n  #container: HTMLElement;\n  #options: DataDenInternalOptions;\n  #orderedColumns: DataDenColDef[];\n  #defaultOrderedColumns: DataDenColDef[];\n  #columnsOrder: number[];\n  #headerRow: DataDenHeaderRow;\n  #rows: DataDenRow[] = [];\n  #paginationRenderer: DataDenPaginationRenderer | null = null;\n\n  constructor(container: HTMLElement, options: DataDenInternalOptions, private PubSub: DataDenPubSub) {\n    this.#container = container;\n    this.#options = options;\n\n    if (options.pagination) {\n      this.#paginationRenderer = new DataDenPaginationRenderer(options.paginationOptions, this.PubSub);\n    }\n\n    this.#init();\n    this.#subscribeToEvents();\n    this.#subscribeFetchDone();\n    this.#publishFetchStart();\n  }\n\n  #init() {\n    this.#orderedColumns = getMainOrderedColumns(this.#options.columns);\n    this.#defaultOrderedColumns = getMainOrderedColumns(this.#options.columns);\n    this.#columnsOrder = getMainColumnIndexes(this.#options.columns);\n    this.#headerRow = this.#createHeaderRow(this.#options.columns, '');\n\n    this.renderTable();\n  }\n\n  #createPinnedHeaderCells(\n    pinnedColumnsDefs: DataDenColDef[],\n    rowIndex: number,\n    order: DataDenSortOrder\n  ): DataDenHeaderCell[] {\n    return pinnedColumnsDefs.map((colDef) => {\n      const value = colDef.headerName;\n      const left = 0;\n      const width = colDef.width || 120;\n      const colIndex = this.#options.columns.map((defaultColumn) => defaultColumn.field).indexOf(colDef.field);\n\n      return new DataDenHeaderCell(\n        value,\n        colIndex,\n        rowIndex,\n        left,\n        width,\n        colDef.pinned,\n        this.#options,\n        order,\n        this.PubSub\n      );\n    });\n  }\n\n  #createMainHeaderCells(\n    mainColumnsDefs: DataDenColDef[],\n    rowIndex: number,\n    order: DataDenSortOrder\n  ): DataDenHeaderCell[] {\n    return mainColumnsDefs.map((colDef, index) => {\n      const value = colDef.headerName;\n      const left = this.#orderedColumns.slice(0, index).reduce((acc, curr) => acc + (curr.width || 120), 0);\n      const width = this.#orderedColumns[index].width || 120;\n      const colIndex = this.#options.columns.map((defaultColumn) => defaultColumn.field).indexOf(colDef.field);\n\n      return new DataDenHeaderCell(\n        value,\n        colIndex,\n        rowIndex,\n        left,\n        width,\n        colDef.pinned,\n        this.#options,\n        order,\n        this.PubSub\n      );\n    });\n  }\n\n  #createHeaderRow(colDefs: DataDenColDef[], order: DataDenSortOrder): DataDenHeaderRow {\n    const rowIndex = 0;\n\n    const pinnedHeaderCellsLeft = this.#createPinnedHeaderCells(getPinnedLeftColumns(colDefs), rowIndex, order);\n    const mainHeaderCells = this.#createMainHeaderCells(getMainColumns(colDefs), rowIndex, order);\n    const pinnedHeaderCellsRight = this.#createPinnedHeaderCells(\n      getPinnedRightColumns(colDefs).reverse(),\n      rowIndex,\n      order\n    );\n\n    const headerCells = [...pinnedHeaderCellsLeft, ...mainHeaderCells, ...pinnedHeaderCellsRight];\n\n    return new DataDenHeaderRow(rowIndex, headerCells, this.#options);\n  }\n\n  #createPinnedCellsLeft(key: string, value: any, colIndex: number, rowIndex: number): DataDenCell | undefined {\n    const colDef = this.#options.columns.find((col) => col.field === key)!;\n    if (colDef.pinned !== 'left') {\n      return undefined;\n    }\n\n    const left = 0;\n    const width = this.#options.columns[colIndex].width || 120;\n\n    return new DataDenCell(value, colIndex, rowIndex, left, width, colDef.pinned, this.#options);\n  }\n\n  #createMainCells(key: string, value: any, colIndex: number, rowIndex: number): DataDenCell | undefined {\n    const colDef = this.#options.columns.find((col) => col.field === key)!;\n    if (colDef.pinned) {\n      return undefined;\n    }\n\n    const orderedColIndex = this.#orderedColumns.findIndex((col) => col.field === key);\n    const left = this.#orderedColumns.slice(0, orderedColIndex).reduce((acc, curr) => acc + (curr.width || 120), 0);\n    const width = this.#orderedColumns[orderedColIndex].width || 120;\n\n    return new DataDenCell(value, colIndex, rowIndex, left, width, colDef.pinned, this.#options);\n  }\n\n  #createPinnedCellsRight(key: string, value: any, colIndex: number, rowIndex: number): DataDenCell | undefined {\n    const colDef = this.#options.columns.find((col) => col.field === key)!;\n    if (colDef.pinned !== 'right') {\n      return undefined;\n    }\n\n    const pinnedColIndex = this.#options.columns\n      .filter((col) => col.pinned === 'right')\n      .map((defaultColumn) => defaultColumn.field)\n      .indexOf(key);\n\n    const left = 0;\n    const width = getPinnedRightColumns(this.#options.columns)[pinnedColIndex].width || 120;\n\n    return new DataDenCell(value, colIndex, rowIndex, left, width, colDef.pinned, this.#options);\n  }\n\n  #createDataRows(rowsData: any): DataDenRow[] {\n    return rowsData.map((rowData: any, rowIndex: number) => {\n      const pinnedCellsLeft = Object.entries(rowData).map(([key, value], colIndex) =>\n        this.#createPinnedCellsLeft(key, value, colIndex, rowIndex)\n      );\n      const mainCells = Object.entries(rowData);\n      mainCells.sort(([aField], [bField]) => {\n        // sort based on this.#orderedColumns order\n        const aIndex = this.#orderedColumns.findIndex((col) => col.field === aField);\n        const bIndex = this.#orderedColumns.findIndex((col) => col.field === bField);\n        return aIndex - bIndex;\n      });\n      const mainCellsSorted = mainCells.map<DataDenCell>(([key, value], colIndex) =>\n        this.#createMainCells(key, value, colIndex, rowIndex)\n      );\n\n      const pinnedCellsRight = Object.entries(rowData)\n        .reverse()\n        .map(([key, value], colIndex) => this.#createPinnedCellsRight(key, value, colIndex, rowIndex));\n\n      const cells = [...pinnedCellsLeft, ...mainCellsSorted, ...pinnedCellsRight].filter((cell) => cell !== undefined);\n\n      return new DataDenRow(rowIndex, cells, this.#options);\n    });\n  }\n\n  #publishFetchStart() {\n    this.PubSub.publish('command:fetch:start', {\n      caller: this,\n      context: new Context('command:fetch:start'),\n    });\n  }\n\n  renderTable(): void {\n    const grid = this.#renderGrid();\n\n    const gridMain = document.createElement('div');\n    gridMain.setAttribute('ref', 'gridMain');\n    gridMain.classList.add(`${this.#options.cssPrefix}grid-main`);\n\n    gridMain.appendChild(this.#renderHeader());\n    gridMain.appendChild(this.#renderBody());\n    grid.appendChild(gridMain);\n\n    if (this.#paginationRenderer) {\n      grid.appendChild(this.#paginationRenderer.getGui());\n    }\n\n    this.#container.appendChild(grid);\n    this.#calculateGridSize();\n  }\n\n  rerenderTable(): void {\n    this.#container.innerHTML = '';\n\n    this.#init();\n    this.#publishFetchStart();\n\n    this.PubSub.publish('command:rerendering:done', {\n      caller: this,\n      context: new Context('command:rerendering:done'),\n    });\n    this.PubSub.publish('command:rerendering:done', {\n      caller: this,\n      context: new Context('command:rerendering:done'),\n    });\n  }\n\n  #calculateGridSize(): void {\n    const header = this.#container.querySelector(`.${this.#options.cssPrefix}header`) as HTMLElement;\n    const body = this.#container.querySelector(`.${this.#options.cssPrefix}grid-rows`) as HTMLElement;\n    const headerMainCellsWrapper = this.#container.querySelector('[ref=headerMainCellsWrapper]') as HTMLElement;\n    const rowMainCellsWrappers = this.#container.querySelectorAll('[ref=rowMainCellsWrapper]');\n\n    const allColsWidth = this.#options.columns.reduce((acc, curr) => acc + (curr.width || 120), 0);\n    const leftPinnedColsWidth = this.#options.columns\n      .filter((col) => col.pinned === 'left')\n      .reduce((acc, curr) => acc + (curr.width || 120), 0);\n    const mainColsWidth = this.#options.columns\n      .filter((col) => !col.pinned)\n      .reduce((acc, curr) => acc + (curr.width || 120), 0);\n    const rowsHeight = this.#options.rowHeight * this.#rows.length + 2;\n\n    header.style.width = `${allColsWidth}px`;\n    body.style.width = `${allColsWidth}px`;\n    body.style.height = `${rowsHeight}px`;\n    headerMainCellsWrapper.style.left = `${leftPinnedColsWidth}px`;\n    headerMainCellsWrapper.style.width = `${mainColsWidth}px`;\n\n    if (rowMainCellsWrappers) {\n      rowMainCellsWrappers.forEach((rowMainCellsWrapper: HTMLElement) => {\n        rowMainCellsWrapper.style.left = `${leftPinnedColsWidth}px`;\n        rowMainCellsWrapper.style.width = `${mainColsWidth}px`;\n      });\n    }\n  }\n\n  #renderGrid(): HTMLElement {\n    const grid = document.createElement('div');\n    grid.classList.add(`${this.#options.cssPrefix}grid`);\n\n    return grid;\n  }\n\n  #renderHeader(): HTMLElement {\n    const headerContainer = document.createElement('div');\n    headerContainer.classList.add(`${this.#options.cssPrefix}header`);\n    headerContainer.setAttribute('role', 'rowgroup');\n\n    const headerRow = this.#headerRow.render();\n    headerContainer.appendChild(headerRow);\n\n    return headerContainer;\n  }\n\n  #renderBody(): HTMLElement {\n    const rowContainer = document.createElement('div');\n    rowContainer.classList.add(`${this.#options.cssPrefix}grid-rows`);\n    rowContainer.setAttribute('role', 'rowgroup');\n\n    const rows = document.createDocumentFragment();\n    this.#rows.forEach((row) => rows.appendChild(row.render()));\n    rowContainer.appendChild(rows);\n\n    return rowContainer;\n  }\n\n  #subscribeToEvents(): void {\n    this.PubSub.subscribe('info:dragging:columns-reorder:done', (event: DataDenEvent) => {\n      this.#columnsOrder = event.data.columnsOrder;\n      this.#orderedColumns = this.#columnsOrder.map((columnIndex) => this.#defaultOrderedColumns[columnIndex]);\n    });\n    this.PubSub.subscribe('info:resizing:start', (event: DataDenEvent) => {\n      const currentColIndex = getAllColumnsOrder(this.#options.columns)[event.data.currentColIndex];\n      this.#options.columns[currentColIndex].width = event.data.newCurrentColWidth;\n      this.#calculateGridSize();\n    });\n    this.PubSub.subscribe('command:pin-column:start', (event: DataDenEvent) => {\n      const pinningPreviousState = new DataDenPinningPreviousState({\n        pin: this.#options.columns[event.data.colIndex].pinned,\n      });\n      this.#options.columns[event.data.colIndex].pinned = event.data.pin;\n\n      const pinningStartEvent = DataDenEventEmitter.triggerEvent('pinningStart', {\n        pin: event.data.pin,\n        colIndex: event.data.colIndex,\n        columns: this.#options.columns,\n      });\n\n      if (pinningStartEvent.defaultPrevented) {\n        this.#options.columns[event.data.colIndex].pinned = pinningPreviousState.getValue('pin');\n        return;\n      }\n\n      this.rerenderTable();\n\n      DataDenEventEmitter.triggerEvent('pinningDone', {\n        pin: event.data.pin,\n        colIndex: event.data.colIndex,\n        columns: this.#options.columns,\n      });\n    });\n  }\n\n  #subscribeFetchDone(): void {\n    this.PubSub.subscribe('info:fetch:done', (event: DataDenEvent) => {\n      this.#updateRows(event);\n    });\n  }\n\n  #updateRows(event: DataDenEvent): void {\n    const { rows } = event.data;\n\n    const rowsEl = document.createDocumentFragment();\n    this.#rows = this.#createDataRows(rows);\n    this.#rows.forEach((row) => rowsEl.appendChild(row.render()));\n\n    const rowContainer = this.#container.querySelector(`.${this.#options.cssPrefix}grid-rows`)!;\n    rowContainer.innerHTML = '';\n    rowContainer.appendChild(rowsEl);\n    this.#calculateGridSize();\n  }\n}\n","import { DataDenPubSub } from '../../data-den-pub-sub';\nimport { DataDenInternalOptions, DataDenPaginationOptions } from '../../data-den-options.interface';\nimport { Context } from '../../context';\nimport { DataDenEvent } from '../../data-den-event';\n\nexport class DataDenPaginationService {\n  #options: DataDenPaginationOptions;\n  #currentPage: number;\n  #pageSize: number;\n  #allTotalRows: number;\n\n  constructor(options: DataDenInternalOptions, private PubSub: DataDenPubSub) {\n    this.#options = options.paginationOptions;\n\n    this.#currentPage = 0;\n    this.#allTotalRows = 0;\n    this.#pageSize = this.#options.pageSize || 10;\n\n    this.#subscribeToEvents();\n  }\n\n  #subscribeToEvents() {\n    this.PubSub.subscribe('command:pagination:load-first-page:start', () => {\n      this.#loadFirstPage();\n    });\n    this.PubSub.subscribe('command:pagination:load-prev-page:start', () => {\n      this.#loadPrevPage();\n    });\n    this.PubSub.subscribe('command:pagination:load-next-page:start', () => {\n      this.#loadNextPage();\n    });\n    this.PubSub.subscribe('command:pagination:load-last-page:start', () => {\n      this.#loadLastPage();\n    });\n    this.PubSub.subscribe('info:pagination:page-size-change:done', (event: { data: { pageSize: number } }) => {\n      this.#pageSize = event.data.pageSize;\n      this.#currentPage = 0;\n      this.#updateState();\n    });\n    this.PubSub.subscribe('info:fetch:done', (event: DataDenEvent) => {\n      if (this.#allTotalRows || this.#allTotalRows === event.data.rows.length) {\n        return;\n      }\n      this.#allTotalRows = event.data.rows.length;\n      this.#updateState();\n    });\n  }\n\n  #updateState(): void {\n    const firstRowIndex = this.#currentPage * this.#pageSize;\n    const lastRowIndex = Math.min(this.#allTotalRows, this.#currentPage * this.#pageSize + this.#pageSize);\n\n    this.#publishEvents(firstRowIndex, lastRowIndex, this.#allTotalRows);\n  }\n\n  #publishEvents(firstRowIndex: number, lastRowIndex: number, allTotalRows: number) {\n    this.PubSub.publish('info:pagination:info-change:done', {\n      firstRowIndex,\n      lastRowIndex,\n      allTotalRows,\n      pageSize: this.#pageSize,\n      context: new Context('info:pagination:info-change:done'),\n    });\n  }\n\n  #loadFirstPage() {\n    this.#currentPage = 0;\n    this.#updateState();\n  }\n\n  #loadPrevPage() {\n    if (this.#currentPage === 0) {\n      return;\n    }\n\n    this.#currentPage--;\n    this.#updateState();\n  }\n\n  #loadNextPage() {\n    if (this.#currentPage * this.#pageSize + this.#pageSize >= this.#allTotalRows) {\n      return;\n    }\n\n    this.#currentPage++;\n    this.#updateState();\n  }\n\n  #loadLastPage() {\n    if (this.#allTotalRows / this.#pageSize - 1 >= this.#allTotalRows) {\n      return;\n    }\n\n    this.#currentPage = Math.ceil(this.#allTotalRows / this.#pageSize - 1);\n    this.#updateState();\n  }\n}\n","import { DataDenInternalOptions } from '../../data-den-options.interface';\nimport { DataDenPubSub } from '../../data-den-pub-sub';\nimport { Context } from '../../context';\nimport { getMainColumnsOrder } from '../../utils/columns-order';\n\nexport class DataDenDraggingService {\n  #container: HTMLElement;\n  #gridMain: HTMLElement;\n  #options: DataDenInternalOptions;\n  #isInitiated: boolean;\n  #isDragging: boolean;\n  #headerMainCellsWrapper: HTMLElement | null;\n  #headers: HTMLElement[];\n  #currentIndex: number;\n  #targetIndex: number;\n  #prevTargetIndex: number;\n  #columns: HTMLElement[][];\n  #columnPositions: { left: string; width: number }[];\n  #breakpoints: number[];\n  #mainColumnsOrder: number[];\n  #defaultGridOffsetLeft: number;\n  #cssPrefix: string;\n\n  #handleGridMouseMove: (e: MouseEvent) => void;\n  #handleDocumentMouseUp: (e: MouseEvent) => void;\n  #handleHeaderMouseDown: (e: MouseEvent) => void;\n\n  constructor(container: HTMLElement, options: DataDenInternalOptions, private PubSub: DataDenPubSub) {\n    this.#container = container;\n    this.#gridMain = container.querySelector('[ref=\"gridMain\"]')!;\n    this.#options = options;\n    this.#isInitiated = false;\n    this.#isDragging = false;\n    this.#headerMainCellsWrapper = null;\n    this.#headers = [];\n    this.#currentIndex = -1;\n    this.#targetIndex = -1;\n    this.#prevTargetIndex = -1;\n    this.#columns = [];\n    this.#columnPositions = [];\n    this.#breakpoints = [];\n    this.#mainColumnsOrder = [];\n    this.#defaultGridOffsetLeft = 0;\n    this.#cssPrefix = options.cssPrefix;\n\n    this.#handleGridMouseMove = () => {};\n    this.#handleDocumentMouseUp = () => {};\n    this.#handleHeaderMouseDown = () => {};\n\n    this.#subscribeFetchDone();\n    this.#subscribeRerenderingDone();\n  }\n\n  init() {\n    this.#setDefaultColumnsOrder();\n    this.#setHeaderElements();\n    this.update();\n    this.#setColumnParams();\n    this.#addColumnDragEventHandlers();\n    this.#subscribeResizingDone();\n\n    this.#isInitiated = true;\n  }\n\n  dispose() {\n    this.#removeDraggableClass();\n    this.#removeDocumentEventListeners();\n  }\n\n  update() {\n    const tempColumns = [...this.#getAllColumnElements()];\n    this.#columns = this.#mainColumnsOrder.map((columnIndex) => tempColumns[columnIndex]);\n  }\n\n  #subscribeFetchDone() {\n    this.PubSub.subscribe('info:fetch:done', () => {\n      if (this.#isInitiated) {\n        this.update();\n      } else {\n        this.init();\n      }\n    });\n  }\n\n  #subscribeRerenderingDone() {\n    this.PubSub.subscribe('command:rerendering:done', () => {\n      this.#setDefaultColumnsOrder();\n      this.#setHeaderElements();\n\n      setTimeout(() => {\n        this.#gridMain = this.#container.querySelector('[ref=\"gridMain\"]')!;\n        this.update();\n        this.#setColumnParams();\n        this.#addColumnDragEventHandlers();\n      }, 0);\n    });\n  }\n\n  #setHeaderElements() {\n    this.#headerMainCellsWrapper = this.#container.querySelector('[ref=\"headerMainCellsWrapper\"]')!;\n    this.#headers = Array.from(this.#headerMainCellsWrapper.querySelectorAll('[ref=\"headerCell\"]'))!;\n  }\n\n  #setColumnParams() {\n    this.#columnPositions = [...this.#getAllColumnPositions()];\n    this.#setBreakpoints();\n    this.#defaultGridOffsetLeft =\n      this.#gridMain!.getBoundingClientRect().left + parseFloat(this.#headerMainCellsWrapper!.style.left);\n  }\n\n  #setBreakpoints() {\n    this.#breakpoints = [];\n    this.#columnPositions.forEach((column) => {\n      if (column.left === 'auto') {\n        return;\n      }\n\n      this.#breakpoints.push(parseFloat(column.left));\n    });\n    this.#breakpoints.sort((a, b) => a - b);\n  }\n\n  #getOffsetX(pageX: number) {\n    return pageX - this.#defaultGridOffsetLeft + this.#gridMain.scrollLeft;\n  }\n\n  #getAllColumnPositions() {\n    return this.#headers.map((column: HTMLElement) => ({\n      left: column.style.left,\n      width: parseFloat(column.style.width),\n    }));\n  }\n\n  #getAllColumnElements() {\n    return this.#headers.map((_: HTMLElement, key: number) => [...this.#getColumnElements(key)]);\n  }\n\n  #getColumnElements(index: number) {\n    const colHeader = this.#headers[index];\n    const rows = this.#container.querySelectorAll('[ref=\"row\"]');\n    const cells = Array.from(rows).map(\n      (row) => row.querySelectorAll('.data-den-main-cells-wrapper [ref=\"cell\"]')[index] as HTMLElement\n    );\n\n    return [colHeader, ...cells];\n  }\n\n  #addColumnDragEventHandlers() {\n    this.#handleHeaderMouseDown = this.#onHeaderMouseDown.bind(this);\n    this.#handleGridMouseMove = this.#onGridMouseMove.bind(this);\n    this.#handleDocumentMouseUp = this.#onDocumentMouseUp.bind(this);\n\n    this.#headerMainCellsWrapper!.addEventListener('mousedown', this.#handleHeaderMouseDown);\n    this.#container.addEventListener('mousemove', this.#handleGridMouseMove);\n    document.addEventListener('mouseup', this.#handleDocumentMouseUp);\n  }\n\n  #setDefaultColumnsOrder() {\n    this.#mainColumnsOrder = getMainColumnsOrder(this.#options.columns);\n  }\n\n  #subscribeResizingDone() {\n    this.PubSub.subscribe('info:resizing:done', () => {\n      const orderedColumnPositions = [...this.#getAllColumnPositions()];\n      this.#columnPositions = this.#mainColumnsOrder.map((columnIndex) => orderedColumnPositions[columnIndex]);\n      this.#setBreakpoints();\n      this.#defaultGridOffsetLeft =\n        this.#gridMain!.getBoundingClientRect().left + parseFloat(this.#headerMainCellsWrapper!.style.left);\n    });\n  }\n\n  #onHeaderMouseDown(event: MouseEvent) {\n    event.stopPropagation();\n    const target = event.target as HTMLElement;\n\n    if (event.button !== 0 || target.getAttribute('ref') !== 'headerCell') {\n      return;\n    }\n\n    this.#onMouseDown(this.#getOffsetX(event.pageX));\n  }\n\n  #onMouseDown(offsetX: number) {\n    this.#getCurrentIndex(offsetX);\n    this.#isDragging = true;\n    this.#enableTransition();\n    this.#setActiveStyle();\n  }\n\n  #getCurrentIndex(offsetX: number) {\n    this.#currentIndex = this.#getMinBreakpointIndex(this.#breakpoints, offsetX);\n  }\n\n  #onGridMouseMove(event: MouseEvent) {\n    if (!this.#isDragging) {\n      return;\n    }\n\n    const offsetX = this.#getOffsetX(event.pageX);\n    this.#targetIndex = this.#getMinBreakpointIndex(this.#breakpoints, offsetX);\n\n    const currentColumnWidth = this.#columnPositions[this.#currentIndex].width;\n    const gap = this.#getColumnsGap(this.#currentIndex);\n\n    // prevent swapping if there is no space for it (current column is wider than target column)\n    if (\n      (this.#getDirection() === 'right' && this.#breakpoints[this.#targetIndex] + gap > offsetX) ||\n      (this.#getDirection() === 'left' && this.#breakpoints[this.#targetIndex] + currentColumnWidth < offsetX)\n    ) {\n      this.#targetIndex = this.#currentIndex;\n      return;\n    }\n\n    if (this.#prevTargetIndex !== this.#targetIndex && this.#targetIndex !== -1) {\n      this.#updateColumnPositions();\n      this.#prevTargetIndex = this.#targetIndex;\n    }\n  }\n\n  #onDocumentMouseUp() {\n    if (!this.#isDragging) {\n      return;\n    }\n\n    this.#finalizeDragging();\n  }\n\n  #enableTransition() {\n    this.#columns.forEach((column) => {\n      column.forEach((cell) => {\n        cell.classList.add(`${this.#cssPrefix}dragging`);\n      });\n    });\n  }\n\n  #setActiveStyle() {\n    this.#container.children[0].classList.add(`${this.#options.cssPrefix}dragging`);\n    this.#columns[this.#currentIndex].forEach((cell) => {\n      cell.classList.add(`${this.#cssPrefix}active`);\n    });\n  }\n\n  #unsetActiveStyle() {\n    this.#container.children[0].classList.remove(`${this.#options.cssPrefix}dragging`);\n    this.#columns.forEach((column) => {\n      column.forEach((cell) => {\n        cell.classList.remove(`${this.#cssPrefix}active`);\n      });\n    });\n  }\n\n  #disableTransition() {\n    this.#columns.forEach((column) => {\n      column.forEach((cell) => {\n        cell.classList.remove(`${this.#cssPrefix}dragging`);\n      });\n    });\n  }\n\n  #getMinBreakpointIndex(array: number[], value: number): number {\n    for (let i = 0; i < array.length - 1; i++) {\n      if (array[i] < value && array[i + 1] >= value) {\n        return i;\n      }\n    }\n    return array.length - 1;\n  }\n\n  #updateColumnPositions() {\n    if (this.#currentIndex === this.#targetIndex && this.#prevTargetIndex === -1) {\n      return;\n    }\n\n    const direction = this.#getDirection();\n    const currentOrderedIndex = direction === 'right' ? this.#targetIndex - 1 : this.#targetIndex + 1;\n    const gap = this.#getColumnsGap(currentOrderedIndex);\n\n    if (direction === 'right') {\n      this.#breakpoints[this.#targetIndex] = this.#breakpoints[this.#targetIndex] + gap;\n    } else {\n      this.#breakpoints[this.#targetIndex + 1] = this.#breakpoints[this.#targetIndex + 1] - gap;\n    }\n\n    this.#swapArrayElements(this.#columnPositions, currentOrderedIndex, this.#targetIndex);\n    this.#swapArrayElements(this.#columns, currentOrderedIndex, this.#targetIndex);\n    this.#swapArrayElements(this.#mainColumnsOrder, currentOrderedIndex, this.#targetIndex);\n\n    this.#columns.forEach((column, index) => {\n      column.forEach((cell) => {\n        cell.style.left = `${this.#breakpoints[index]}px`;\n      });\n    });\n\n    this.#publishColumnsOrder();\n  }\n\n  #getDirection() {\n    return this.#prevTargetIndex > this.#targetIndex ? 'left' : 'right';\n  }\n\n  #getColumnsGap(sourceIndex: number) {\n    const sourceColumnWidth = this.#columnPositions[sourceIndex].width;\n    const targetColumnWidth = this.#columnPositions[this.#targetIndex].width;\n    return targetColumnWidth - sourceColumnWidth;\n  }\n\n  #swapArrayElements(array: HTMLElement[][] | any[], sourceIndex: number, targetIndex: number) {\n    if (sourceIndex === -1) {\n      return;\n    }\n\n    const temp = array[sourceIndex];\n    array[sourceIndex] = array[targetIndex];\n    array[targetIndex] = temp;\n  }\n\n  #finalizeDragging() {\n    this.#isDragging = false;\n    this.#disableTransition();\n    this.#unsetActiveStyle();\n    this.#resetIndexes();\n  }\n\n  #resetIndexes() {\n    this.#currentIndex = -1;\n    this.#targetIndex = -1;\n    this.#prevTargetIndex = -1;\n  }\n\n  #removeDraggableClass() {\n    this.#headers.forEach((header) => {\n      header.classList.remove('data-den-header-cell-draggable');\n    });\n  }\n\n  #removeDocumentEventListeners() {\n    this.#headerMainCellsWrapper!.removeEventListener('mousedown', this.#handleHeaderMouseDown);\n    this.#container.removeEventListener('mousemove', this.#handleGridMouseMove);\n    document.removeEventListener('mouseup', this.#handleDocumentMouseUp);\n  }\n\n  #publishColumnsOrder() {\n    this.PubSub.publish('info:dragging:columns-reorder:done', {\n      columnsOrder: this.#mainColumnsOrder,\n      context: new Context('info:dragging:columns-reorder:done'),\n    });\n  }\n}\n","import { Context } from '../../context';\nimport { DataDenEvent } from '../../data-den-event';\nimport { DataDenInternalOptions } from '../../data-den-options.interface';\nimport { DataDenPubSub } from '../../data-den-pub-sub';\nimport { getAllColumnsOrder } from '../../utils/columns-order';\n\nexport class DataDenResizingService {\n  #container: HTMLElement;\n  #options: DataDenInternalOptions;\n  #isInitiated: boolean;\n  #isResizing: boolean;\n  #headers: HTMLElement[];\n  #headersMain: HTMLElement[];\n  #rows: HTMLElement[];\n  #currentHeader: HTMLElement | null;\n  #currentCol: HTMLElement[] | null;\n  #headersOnTheRight: HTMLElement[];\n  #columnsOrder: number[];\n  #isResizingPinnedRightColumn: boolean;\n\n  constructor(container: HTMLElement, options: DataDenInternalOptions, private PubSub: DataDenPubSub) {\n    this.#container = container;\n    this.#options = options;\n    this.#isInitiated = false;\n    this.#isResizing = false;\n    this.#headers = [];\n    this.#headersMain = [];\n    this.#columnsOrder = [];\n    this.#rows = [];\n    this.#currentHeader = null;\n    this.#currentCol = null;\n    this.#headersOnTheRight = [];\n    this.#isResizingPinnedRightColumn;\n\n    this.#subscribeFetchDone();\n    this.#subscribeRerenderingDone();\n  }\n\n  init() {\n    this.#headers = Array.from(this.#container.querySelectorAll('[ref=\"headerCell\"]'))!;\n    this.#headersMain = Array.from(\n      this.#container.querySelector('[ref=\"headerMainCellsWrapper\"]').querySelectorAll('[ref=\"headerCell\"]')\n    )!;\n    this.#columnsOrder = getAllColumnsOrder(this.#options.columns);\n\n    this.#subscribeResizingEvents();\n    this.#subscribeDraggingEvent();\n\n    this.#isInitiated = true;\n  }\n\n  #subscribeFetchDone(): void {\n    this.PubSub.subscribe('info:fetch:done', () => {\n      if (!this.#isInitiated) {\n        this.init();\n      }\n\n      setTimeout(() => {\n        this.#rows = Array.from(this.#container.querySelectorAll('[ref=\"row\"]'));\n      }, 0);\n    });\n  }\n\n  #subscribeRerenderingDone(): void {\n    this.PubSub.subscribe('command:rerendering:done', () => {\n      this.#headers = Array.from(this.#container.querySelectorAll('[ref=\"headerCell\"]'))!;\n      this.#headersMain = Array.from(\n        this.#container.querySelector('[ref=\"headerMainCellsWrapper\"]').querySelectorAll('[ref=\"headerCell\"]')\n      )!;\n      this.#columnsOrder = getAllColumnsOrder(this.#options.columns);\n    });\n  }\n\n  #subscribeResizingEvents() {\n    this.PubSub.subscribe('info:resizing:mousedown', this.#onMousedown.bind(this));\n    document.addEventListener('mousemove', this.#onMousemove.bind(this));\n    document.addEventListener('mouseup', this.#onMouseup.bind(this));\n  }\n\n  #subscribeDraggingEvent() {\n    this.PubSub.subscribe('info:dragging:columns-reorder:done', (event: DataDenEvent) => {\n      this.#columnsOrder = event.data.columnsOrder;\n    });\n  }\n\n  #onMousedown(event: DataDenEvent) {\n    this.#container.children[0].classList.add(`${this.#options.cssPrefix}resizing`);\n    this.#currentHeader = event.data.target.parentElement;\n    this.#currentCol = this.#getColumnElements(this.#currentHeader);\n    this.#isResizingPinnedRightColumn = event.data.isPinnedRight;\n\n    if (!this.#currentHeader || !this.#currentHeader.parentElement) {\n      return;\n    }\n\n    this.#isResizing = true;\n    this.#headersOnTheRight = this.#getHeadersOnTheRight();\n  }\n\n  #onMouseup() {\n    this.#container.children[0].classList.remove(`${this.#options.cssPrefix}resizing`);\n    if (!this.#isResizing) {\n      return;\n    }\n\n    this.#isResizing = false;\n\n    this.PubSub.publish('info:resizing:done', {\n      context: new Context('info:resizing:done'),\n    });\n  }\n\n  #onMousemove(event: MouseEvent) {\n    if (!this.#isResizing || !this.#currentHeader || this.#currentCol.some((cell) => cell === undefined)) {\n      this.#isResizing = false;\n      return;\n    }\n\n    const movementX = this.#isResizingPinnedRightColumn ? -event.movementX : event.movementX;\n\n    this.#resizeCurrentColumn(movementX);\n    this.#updateRemainingColumnsPosition(movementX);\n    this.PubSub.publish('info:resizing:start', {\n      currentColIndex: this.#headers.indexOf(this.#currentHeader),\n      newCurrentColWidth: parseInt(this.#currentHeader.style.width, 10),\n      context: new Context('info:resizing:start'),\n    });\n  }\n\n  #resizeCurrentColumn(movementX: number) {\n    const currentWidth = this.#currentHeader?.style.width;\n    const newWidth = parseInt(currentWidth || '0') + movementX;\n\n    this.#currentCol.forEach((cell) => (cell.style.width = `${newWidth}px`));\n  }\n\n  #updateRemainingColumnsPosition(movementX: number) {\n    if (!this.#currentHeader) {\n      return;\n    }\n\n    this.#headersOnTheRight.forEach((header) => {\n      const currentLeft = header.style.left;\n      // prevent right pinned columns from moving\n      if (currentLeft === 'auto') {\n        return;\n      }\n      const newLeft = parseInt(currentLeft || '0') + movementX;\n      const col = this.#getColumnElements(header);\n      col.forEach((cell: HTMLElement) => (cell.style.left = `${newLeft}px`));\n    });\n  }\n\n  #getHeadersOnTheRight(): HTMLElement[] {\n    const currentHeaderLeft = parseInt(this.#currentHeader?.style.left || '0', 10);\n    return this.#headersMain.filter((header) => parseInt(header.style.left || '0', 10) > currentHeaderLeft);\n  }\n\n  #getColumnElements(colHeader: HTMLElement | null): HTMLElement[] {\n    if (!colHeader || !colHeader.parentElement) {\n      return [];\n    }\n\n    const colHeaderIndex = this.#headers.indexOf(colHeader);\n    const colCells = this.#rows.map(\n      (row: HTMLElement) => row.querySelectorAll('[ref=\"cell\"]')[colHeaderIndex] as HTMLElement\n    );\n\n    return [colHeader, ...colCells];\n  }\n}\n","import { Context } from '../../context';\nimport { DataDenEvent } from '../../data-den-event';\nimport { DataDenInternalOptions } from '../../data-den-options.interface';\nimport { DataDenPubSub } from '../../data-den-pub-sub';\nimport { DataDenActiveFiltersChangeEvent } from './data-den-active-filter-change-event.interface';\nimport { DataDenActiveHeaderFilter } from './data-den-active-header-filter.interface';\nimport { DataDenActiveQuickFilterChangeEvent } from './data-den-active-quick-filter-change-event.interface';\nimport { DataDenActiveQuickFilter } from './data-den-active-quick-filter.interface';\n\nexport class DataDenFilteringService {\n  activeHeaderFilters: { [key: string]: DataDenActiveHeaderFilter } = {};\n  activeQuickFilter: DataDenActiveQuickFilter;\n  options: DataDenInternalOptions;\n\n  constructor(options: DataDenInternalOptions, private PubSub: DataDenPubSub) {\n    this.options = options;\n    this.activeQuickFilter = { searchTerm: '', filterFn: options.quickFilterOptions.filterFn };\n\n    this.PubSub.subscribe('info:filtering:header-filter-changed', this.#handleHeaderFilterChange.bind(this));\n    this.PubSub.subscribe('info:filtering:quick-filter-changed', this.#handleQuickFilterChange.bind(this));\n  }\n\n  #handleHeaderFilterChange(event: DataDenEvent) {\n    const { field, type, state, isActive, filterFn } = event.data;\n    const filter: DataDenActiveHeaderFilter = { type, state, filterFn };\n\n    this.#updateActiveHeaderFilters(field, filter, isActive);\n\n    const activeFiltersChangeEvent: DataDenActiveFiltersChangeEvent = {\n      context: new Context('info:filtering:active-filters-changed'),\n      filters: this.activeHeaderFilters,\n    };\n\n    this.PubSub.publish('info:filtering:active-filters-changed', activeFiltersChangeEvent);\n  }\n\n  #updateActiveHeaderFilters(field: string, filter: DataDenActiveHeaderFilter, isActive: boolean) {\n    if (isActive) {\n      this.activeHeaderFilters[field] = filter;\n    } else {\n      delete this.activeHeaderFilters[field];\n    }\n  }\n\n  #handleQuickFilterChange(event: DataDenEvent) {\n    const { searchTerm } = event.data;\n\n    this.activeQuickFilter.searchTerm = searchTerm;\n\n    const activeQuickFilterChangeEvent: DataDenActiveQuickFilterChangeEvent = {\n      context: new Context('info:filtering:active-quick-filter-changed'),\n      filter: this.activeQuickFilter,\n    };\n\n    this.PubSub.publish('info:filtering:active-quick-filter-changed', activeQuickFilterChangeEvent);\n  }\n}\n","export class DataDenSortingPreviousState {\n  private data: { [key: string]: any } = {};\n\n  constructor(values: { [key: string]: any }) {\n    this.data = { ...this.data, ...values };\n  }\n\n  getValue(key: string): any {\n    return this.data[key];\n  }\n}\n","import { DataDenSortOrder } from './data-den-sorting.interface';\nimport { DataDenPubSub } from '../../data-den-pub-sub';\nimport { DataDenEvent } from '../../data-den-event';\nimport { DataDenEventEmitter } from '../../data-den-event-emitter';\nimport { DataDenSortingPreviousState } from './data-den-sorting-previous-state';\nimport { DataDenInternalOptions, DataDenSortComparator } from '../../data-den-options.interface';\n\nexport interface DataDenActiveSorter {\n  field: string;\n  order: DataDenSortOrder;\n  comparator: DataDenSortComparator;\n  sortIndex: number;\n}\n\nexport class DataDenSortingService {\n  #field: string;\n  #order: DataDenSortOrder;\n  #options: DataDenInternalOptions;\n  activeSortersMap: Map<string, DataDenActiveSorter>;\n\n  constructor(options: DataDenInternalOptions, private PubSub: DataDenPubSub) {\n    this.#field = '';\n    this.#order = 'asc';\n    this.#options = options;\n\n    this.activeSortersMap = new Map();\n\n    this.PubSub.subscribe('command:sorting:start', (event: DataDenEvent) => {\n      const sortingPreviousState = new DataDenSortingPreviousState({ field: this.#field, order: this.#order });\n\n      const { field, isMultiSort } = event.data;\n      const isCurrentSorterActive = this.activeSortersMap.has(field);\n      const currentSorterOrder = isCurrentSorterActive ? this.activeSortersMap.get(field).order : '';\n\n      let nextOrder: DataDenSortOrder;\n\n      if (isCurrentSorterActive) {\n        switch (currentSorterOrder) {\n          case 'asc':\n            nextOrder = 'desc';\n            break;\n          case 'desc':\n            nextOrder = '';\n            break;\n          default:\n            nextOrder = 'asc';\n            break;\n        }\n      } else {\n        nextOrder = 'asc';\n      }\n\n      if (event.data.order) {\n        nextOrder = event.data.order;\n      }\n\n      this.#field = event.data.field;\n      const colDef = this.#options.columns.find((column) => column.field === this.#field);\n      const comparator = colDef.sortOptions.comparator;\n\n      const sortingStartEvent = DataDenEventEmitter.triggerEvent('sortingStart', {\n        field: field,\n        order: nextOrder,\n        comparator,\n        sortFn: this.sort,\n      });\n\n      if (sortingStartEvent.defaultPrevented) {\n        this.#field = sortingPreviousState.getValue('field');\n        this.#order = sortingPreviousState.getValue('order');\n        return;\n      }\n\n      if (isMultiSort) {\n        this.updateActiveSortersMap(field, nextOrder, comparator);\n      } else {\n        this.activeSortersMap.clear();\n        this.updateActiveSortersMap(field, nextOrder, comparator);\n      }\n\n      this.PubSub.publish('command:fetch:sort-start', {\n        caller: this,\n        context: event.context,\n        field: field,\n        order: nextOrder,\n        comparator,\n        sortFn: this.sort,\n        activeSorters: this.getActiveSortersArray(),\n        isMultiSort,\n      });\n    });\n  }\n\n  updateActiveSortersMap(field: string, order: DataDenSortOrder, comparator: DataDenSortComparator) {\n    const sorterExist = this.activeSortersMap.has(field);\n\n    if (order === '' && sorterExist) {\n      this.activeSortersMap.delete(field);\n      this.updateSortIndexes();\n      return;\n    }\n\n    if (sorterExist && order !== '') {\n      const sort = this.activeSortersMap.get(field);\n      sort.order = order;\n    } else if (!sorterExist && order !== '') {\n      const sortIndex = this.activeSortersMap.size;\n      this.activeSortersMap.set(this.#field, { field, order, comparator, sortIndex });\n    }\n  }\n\n  updateSortIndexes() {\n    let currentIndex = 0;\n\n    for (const sorter of this.activeSortersMap.values()) {\n      sorter.sortIndex = currentIndex++;\n    }\n  }\n\n  getActiveSortersArray(): DataDenActiveSorter[] {\n    return Array.from(this.activeSortersMap.values()).sort((a, b) => a.sortIndex - b.sortIndex);\n  }\n\n  sort(rows: any, activeSorters: DataDenActiveSorter[]): any[] {\n    rows.sort((a: any, b: any) => {\n      let sortResult = 0;\n\n      for (const sorter of activeSorters) {\n        const { order, field, comparator } = sorter;\n\n        if (sortResult === 0) {\n          const isAscending = order === 'asc';\n          const fieldA = a[field];\n          const fieldB = b[field];\n\n          const result = comparator(fieldA, fieldB);\n\n          sortResult = isAscending ? result : result * -1;\n        } else {\n          break;\n        }\n      }\n\n      return sortResult;\n    });\n\n    return rows;\n  }\n}\n","import {\n  DataDenFetchOptions,\n  DataDenFiltersOptions,\n  DataDenPaginationOptions,\n  DataDenQuickFilterOptions,\n  DataDenSortOptions,\n} from '../data-den-fetch-options.interface';\n\nexport abstract class DataDenDataLoaderStrategy {\n  abstract getData(options: DataDenFetchOptions): Promise<any[]>;\n  abstract filterData(data: any[], params: DataDenFiltersOptions): Promise<any[]>;\n  abstract sortData(data: any[], params: DataDenSortOptions): Promise<any[]>;\n  abstract quickFilterData(data: any[], params: DataDenQuickFilterOptions): Promise<any[]>;\n  abstract paginateData(data: any[], params: DataDenPaginationOptions): Promise<any[]>;\n}\n","import { DataDenDataLoaderStrategy } from './data-den-data-loader-strategy';\nimport {\n  DataDenFetchOptions,\n  DataDenFiltersOptions,\n  DataDenPaginationOptions,\n  DataDenQuickFilterOptions,\n  DataDenSortOptions,\n} from '../data-den-fetch-options.interface';\nimport { deepCopy } from '../../../utils';\n\nexport class DataDenClientDataLoaderStrategy extends DataDenDataLoaderStrategy {\n  #data: any[];\n\n  constructor(data: any[]) {\n    super();\n\n    this.#data = data;\n  }\n\n  getData(options: DataDenFetchOptions): Promise<any[]> {\n    return this.filterData(deepCopy(this.#data), options.filtersOptions)\n      .then((filtered) => this.quickFilterData(filtered, options.quickFilterOptions))\n      .then((quickFiltered) => this.sortData(quickFiltered, options.sortingOptions))\n      .then((sorted) => this.paginateData(sorted, options.paginationOptions));\n  }\n\n  filterData(rows: any[], filtersOptions: DataDenFiltersOptions | undefined): Promise<any[]> {\n    if (!filtersOptions) {\n      return Promise.resolve(rows);\n    }\n\n    const headers = Object.keys(filtersOptions.filters);\n    const filtered = headers.reduce((res, header) => {\n      return res.filter((row: any) => {\n        const filterFn = filtersOptions.filters[header].filterFn;\n        const state = filtersOptions.filters[header].state;\n        const value = row[header];\n\n        return filterFn(state, value);\n      });\n    }, rows);\n\n    return Promise.resolve(filtered);\n  }\n\n  paginateData(rows: any[], paginationOptions: DataDenPaginationOptions | undefined): Promise<any[]> {\n    if (!paginationOptions) {\n      return Promise.resolve(rows);\n    }\n\n    const { firstRowIndex, lastRowIndex } = paginationOptions;\n\n    const paginated = rows.slice(firstRowIndex, lastRowIndex);\n\n    return Promise.resolve(paginated);\n  }\n\n  sortData(rows: any[], sortOptions: DataDenSortOptions | undefined): Promise<any[]> {\n    if (!sortOptions) {\n      return Promise.resolve(rows);\n    }\n\n    const { sortFn, activeSorters } = sortOptions;\n\n    const sorted = sortFn(rows, activeSorters);\n\n    return Promise.resolve(sorted);\n  }\n\n  quickFilterData(rows: any[], quickFilterOptions: DataDenQuickFilterOptions | undefined): Promise<any[]> {\n    if (!quickFilterOptions) {\n      return Promise.resolve(rows);\n    }\n\n    const { searchTerm, filterFn } = quickFilterOptions;\n\n    const filtered = rows.filter((row) => {\n      return filterFn(searchTerm, Object.values(row));\n    });\n\n    return Promise.resolve(filtered);\n  }\n}\n","import { DataDenDataLoaderStrategy } from './data-den-data-loader-strategy';\nimport {\n  DataDenFetchOptions,\n  DataDenFiltersOptions,\n  DataDenPaginationOptions,\n  DataDenQuickFilterOptions,\n  DataDenSortOptions,\n} from '../data-den-fetch-options.interface';\n\nexport class DataDenServerDataLoaderStrategy extends DataDenDataLoaderStrategy {\n  getData(options: DataDenFetchOptions): Promise<any[]> {\n    return fetch('url' + new URLSearchParams(options as any)).then((res) => res.json());\n  }\n  sortData(data: any[], sortOptions: DataDenSortOptions): Promise<any[]> {\n    return fetch('url' + new URLSearchParams(sortOptions as any)).then((res) => res.json());\n  }\n  filterData(data: any[], filtersOptions: DataDenFiltersOptions): Promise<any[]> {\n    return fetch('url' + new URLSearchParams(filtersOptions as any)).then((res) => res.json());\n  }\n  quickFilterData(data: any[], quickFilterOptions: DataDenQuickFilterOptions): Promise<any[]> {\n    return fetch('url' + new URLSearchParams(quickFilterOptions as any)).then((res) => res.json());\n  }\n  paginateData(data: any[], paginationOptions: DataDenPaginationOptions): Promise<any[]> {\n    return fetch('url' + new URLSearchParams(paginationOptions as any)).then((res) => res.json());\n  }\n}\n","import { Context } from '../../context';\nimport { DataDenEvent } from '../../data-den-event';\nimport { DataDenPubSub } from '../../data-den-pub-sub';\nimport { DataDenFetchDoneEvent } from './data-den-fetch-done.event.interface';\nimport { DataDenFetchOptions } from './data-den-fetch-options.interface';\nimport { DataDenDataLoaderStrategy } from './strategy/data-den-data-loader-strategy';\nimport { DataDenEventEmitter } from '../../data-den-event-emitter';\n\nexport class DataDenFetchService {\n  #loader: DataDenDataLoaderStrategy;\n  #fetchOptions: DataDenFetchOptions;\n\n  constructor(loader: DataDenDataLoaderStrategy, private PubSub: DataDenPubSub) {\n    this.#loader = loader;\n    this.#fetchOptions = {};\n    this.#subscribeFetchStart();\n    this.#subscribeSortingDone();\n    this.#subscribeQuickFilterChanged();\n    this.#subscribeFilterChange();\n    this.#subscribePaginationChange();\n  }\n\n  #getData(fetchOptions: DataDenFetchOptions): Promise<any[]> {\n    return this.#loader.getData(fetchOptions);\n  }\n\n  #publishFetchDone(context: Context, data: any[]): void {\n    const EventData: DataDenFetchDoneEvent = {\n      caller: this,\n      context,\n      rows: data,\n    };\n    this.PubSub.publish('info:fetch:done', EventData);\n  }\n\n  #subscribeFetchStart(): void {\n    this.PubSub.subscribe('command:fetch:start', (event: DataDenEvent) => {\n      this.#getData(this.#fetchOptions).then((data: any[]) => {\n        this.#publishFetchDone(event.context, data);\n      });\n    });\n  }\n\n  #subscribeSortingDone(): void {\n    this.PubSub.subscribe('command:fetch:sort-start', (event: DataDenEvent) => {\n      this.#fetchOptions.sortingOptions = {\n        field: event.data.field,\n        order: event.data.order,\n        comparator: event.data.comparator,\n        sortFn: event.data.sortFn,\n        activeSorters: event.data.activeSorters,\n      };\n      this.#getData(this.#fetchOptions).then((data: any[]) => {\n        this.#publishFetchDone(event.context, data);\n        DataDenEventEmitter.triggerEvent('sortingDone', this.#fetchOptions.sortingOptions);\n      });\n    });\n  }\n\n  #subscribeQuickFilterChanged(): void {\n    this.PubSub.subscribe('info:filtering:active-quick-filter-changed', (event: DataDenEvent) => {\n      this.#fetchOptions.quickFilterOptions = {\n        searchTerm: event.data.filter.searchTerm,\n        filterFn: event.data.filter.filterFn,\n      };\n      this.#getData(this.#fetchOptions).then((data: any[]) => {\n        this.#publishFetchDone(event.context, data);\n      });\n    });\n  }\n\n  #subscribeFilterChange(): void {\n    this.PubSub.subscribe('info:filtering:active-filters-changed', (event: DataDenEvent) => {\n      this.#fetchOptions.filtersOptions = {\n        filters: event.data.filters,\n      };\n      this.#getData(this.#fetchOptions).then((data: any[]) => {\n        this.#publishFetchDone(event.context, data);\n      });\n    });\n  }\n\n  #subscribePaginationChange(): void {\n    this.PubSub.subscribe('info:pagination:info-change:done', (event: DataDenEvent) => {\n      this.#fetchOptions.paginationOptions = {\n        firstRowIndex: event.data.firstRowIndex,\n        lastRowIndex: event.data.lastRowIndex,\n      };\n      this.#getData(this.#fetchOptions).then((data: any[]) => {\n        this.#publishFetchDone(event.context, data);\n      });\n    });\n  }\n}\n","import { Context } from './context';\n\nexport class DataDenEvent {\n  public key: string;\n\n  constructor(public name: string, public data: any, public context: Context) {\n    this.key = '' + Math.random();\n  }\n}\n","import { DataDenPublishedEvent } from './data-den-published-event';\nimport { DataDenEvent } from './data-den-event';\n\ntype DataDenEventCallback = (event: DataDenEvent) => void;\n\nexport class DataDenPubSub {\n  #listeners: { [key: string]: DataDenEventCallback[] } = {\n    'command:pagination:load-first-page:start': [],\n    'command:pagination:load-prev-page:start': [],\n    'command:pagination:load-next-page:start': [],\n    'command:pagination:load-last-page:start': [],\n    'info:pagination:data-change:done': [],\n    'info:pagination:info-change:done': [],\n    'info:pagination:page-size-change:done': [],\n    'info:dragging:columns-reorder:done': [],\n    'command:sorting:start': [],\n    'info:filtering:get-active-quick-filter:done': [],\n    'info:filtering:header-filter-changed': [],\n    'info:filtering:active-filters-changed': [],\n    'info:filtering:quick-filter-changed': [],\n    'info:filtering:active-quick-filter-changed': [],\n    'info:resizing:mousedown': [],\n    'info:resizing:start': [],\n    'info:resizing:done': [],\n    'command:fetch:start': [],\n    'command:fetch:sort-start': [],\n    'info:fetch:done': [],\n    'command:pin-column:start': [],\n    'command:rerendering:done': [],\n  };\n\n  publish(name: string, data: DataDenPublishedEvent) {\n    if (!this.#listeners[name]) {\n      return;\n    }\n\n    const event = new DataDenEvent(name, data, data.context);\n    this.#listeners[name].forEach((callback) => {\n      callback(event);\n    });\n  }\n\n  subscribe(name: string, callback: DataDenEventCallback) {\n    if (!this.#listeners[name]) {\n      throw new Error(`Could not subscribe: Unsupported event: ${name}`);\n    }\n    this.#listeners[name].push(callback);\n\n    return () => {\n      this.#unsubscribe(name, callback);\n    };\n  }\n\n  #unsubscribe(name: string, callback: DataDenEventCallback) {\n    if (!this.#listeners[name]) {\n      return;\n    }\n    this.#listeners[name] = this.#listeners[name].filter((cb) => cb !== callback);\n  }\n}\n","import {\n  DataDenDateFilterParserFn,\n  DataDenInternalOptions,\n  DataDenPaginationOptions,\n  DataDenQuickFilterOptions,\n  DataDenSortComparator,\n  DataDenSortOptions,\n} from './data-den-options.interface';\nimport { DataDenHeaderTextFilterRenderer } from './modules/rendering';\nimport { DataDenDefaultCellRenderer } from './modules/rendering/cell';\n\nconst defaultPaginationOptions: Required<DataDenPaginationOptions> = {\n  pageSize: 10,\n  pageSizeOptions: [5, 10, 25],\n  ofText: 'of',\n};\n\nconst defaultQuickFilterFn = (searchTerm: any, value: any) => {\n  searchTerm = searchTerm.toString().toLowerCase();\n  value = value.toString().toLowerCase();\n\n  return value.includes(searchTerm);\n};\n\nconst defaultQuickFilterOptions: Required<DataDenQuickFilterOptions> = {\n  filterFn: defaultQuickFilterFn,\n};\n\nconst defaultDateParserFn: DataDenDateFilterParserFn = (dateString: string) => {\n  const dateParts = dateString.split('/').map((part) => Number(part));\n  const [day, month, year] = dateParts;\n\n  return new Date(year, month - 1, day);\n};\n\nconst defaultSortComparator: DataDenSortComparator = (fieldA, fieldB) => {\n  if (typeof fieldA === 'string') {\n    fieldA = fieldA.toLowerCase();\n  }\n\n  if (typeof fieldB === 'string') {\n    fieldB = fieldB.toLowerCase();\n  }\n\n  if (fieldA === fieldB) {\n    return 0;\n  }\n\n  return fieldA > fieldB ? 1 : -1;\n};\n\nconst defaultSortOptions: Required<DataDenSortOptions> = {\n  comparator: defaultSortComparator,\n};\n\nexport const defaultOptions: DataDenInternalOptions = {\n  cssPrefix: 'data-den-',\n  mode: 'client',\n  columns: [],\n  defaultColDef: {\n    sort: false,\n    sortOptions: defaultSortOptions,\n    filter: false,\n    filterRenderer: DataDenHeaderTextFilterRenderer,\n    filterOptions: {\n      method: 'includes',\n      debounceTime: 500,\n      caseSensitive: false,\n      dateParserFn: defaultDateParserFn,\n      listOptions: [],\n    },\n    resize: false,\n    width: 200,\n    cellRenderer: DataDenDefaultCellRenderer,\n  },\n  rows: [],\n  draggable: false,\n  pagination: false,\n  paginationOptions: defaultPaginationOptions,\n  quickFilterOptions: defaultQuickFilterOptions,\n  resizable: false,\n  rowHeight: 26,\n  multiSortKey: 'shift',\n};\n","export const isObject = (obj: any) => obj && typeof obj === 'object';\n","import { isObject } from './object';\n\nexport const deepMerge = (object: any, source: any) => {\n  if (!isObject(object) || !isObject(source)) {\n    return source;\n  }\n\n  Object.keys(source).forEach((key) => {\n    const objValue = object[key];\n    const srcValue = source[key];\n\n    if (Array.isArray(objValue) && Array.isArray(srcValue)) {\n      object[key] = objValue.concat(srcValue);\n    } else if (isObject(objValue) && isObject(srcValue)) {\n      object[key] = deepMerge(Object.assign({}, objValue), srcValue);\n    } else {\n      object[key] = srcValue;\n    }\n  });\n\n  return object;\n};\n","import './scss/index.scss';\n\nimport {\n  DataDenHeaderDateFilterRenderer,\n  DataDenHeaderNumberFilterRenderer,\n  DataDenHeaderSelectFilterRenderer,\n  DataDenHeaderTextFilterRenderer,\n  DataDenRenderingService,\n} from './modules/rendering';\nimport { DataDenPaginationService } from './modules/pagination';\nimport { DataDenDraggingService } from './modules/dragging';\nimport { DataDenResizingService } from './modules/resizing';\nimport { DataDenFilteringService } from './modules/filtering';\nimport { DataDenSortingService, DataDenSortingEvent } from './modules/sorting';\nimport { DataDenPinningEvent } from './modules/pinning';\nimport { DataDenFetchService } from './modules/fetch';\nimport { DataDenDefaultCellRenderer } from './modules/rendering/cell/data-den-default-cell-renderer';\nimport {\n  DataDenClientDataLoaderStrategy,\n  DataDenServerDataLoaderStrategy,\n  DataDenDataLoaderStrategy,\n} from './modules/fetch';\nimport { DataDenPubSub } from './data-den-pub-sub';\nimport { DataDenEventEmitter } from './data-den-event-emitter';\nimport { Context } from './context';\nimport { DataDenColDef, DataDenInternalOptions, DataDenOptions } from './data-den-options.interface';\nimport { defaultOptions } from './default-options.interface';\nimport { deepMerge } from './utils/deep-merge';\nimport { deepCopy } from './utils';\nimport { DataDenQuickFilterChangeEvent } from './modules/rendering/filter/data-den-quick-filter-change-event.interface';\n\nexport class DataDen {\n  #rendering: DataDenRenderingService;\n  #sorting: DataDenSortingService;\n  #filtering: DataDenFilteringService;\n  #pagination: DataDenPaginationService;\n  #dragging: DataDenDraggingService | null;\n  #resizing: DataDenResizingService | null;\n  #dataLoaderStrategy: DataDenDataLoaderStrategy | null = null;\n  #fetch: DataDenFetchService | null = null;\n\n  private PubSub: DataDenPubSub = new DataDenPubSub();\n\n  constructor(container: HTMLElement, options: DataDenOptions) {\n    const gridOptions = this.#createOptions(defaultOptions, options);\n    this.#dataLoaderStrategy = this.#getDataLoaderStrategy(gridOptions);\n\n    if (this.#dataLoaderStrategy) {\n      this.#fetch = new DataDenFetchService(this.#dataLoaderStrategy, this.PubSub);\n    }\n\n    this.#rendering = new DataDenRenderingService(container, gridOptions, this.PubSub);\n    this.#sorting = new DataDenSortingService(gridOptions, this.PubSub);\n    this.#filtering = new DataDenFilteringService(gridOptions, this.PubSub);\n    this.#pagination = new DataDenPaginationService(gridOptions, this.PubSub);\n    this.#dragging = options.draggable ? new DataDenDraggingService(container, gridOptions, this.PubSub) : null;\n    this.#resizing = options.columns.some((column) => column.resize)\n      ? new DataDenResizingService(container, gridOptions, this.PubSub)\n      : null;\n  }\n\n  on(name: string, callback: any) {\n    DataDenEventEmitter.on(name, callback);\n  }\n\n  #createOptions(defaultOptions: DataDenInternalOptions, userOptions: DataDenOptions): DataDenInternalOptions {\n    const options = deepMerge(deepCopy(defaultOptions), userOptions);\n\n    options.columns.forEach((colDef: DataDenColDef, index: number) => {\n      options.columns[index] = deepMerge(deepCopy(options.defaultColDef), colDef);\n    });\n\n    return options;\n  }\n\n  #getDataLoaderStrategy(options: DataDenOptions): DataDenDataLoaderStrategy | null {\n    const { mode, rows } = options;\n\n    if (mode === 'client' && rows.length) {\n      return new DataDenClientDataLoaderStrategy(options.rows);\n    }\n\n    if (mode === 'server') {\n      return new DataDenServerDataLoaderStrategy();\n    }\n\n    return null;\n  }\n\n  sort(field: string, order: string): void {\n    const command = 'command:sorting:start';\n    this.PubSub.publish(command, {\n      context: new Context(command),\n      field,\n      order,\n    });\n  }\n\n  quickFilter(searchTerm: any) {\n    const context = new Context('info:filtering:quick-filter-changed');\n    const event: DataDenQuickFilterChangeEvent = {\n      context,\n      searchTerm,\n    };\n\n    this.PubSub.publish('info:filtering:quick-filter-changed', event);\n  }\n\n  pinColumn(pin: string | boolean, colIndex: number) {\n    const command = 'command:pin-column:start';\n    this.PubSub.publish(command, {\n      context: new Context(command),\n      pin,\n      colIndex,\n    });\n  }\n}\n\nexport {\n  DataDenDefaultCellRenderer,\n  DataDenClientDataLoaderStrategy,\n  DataDenServerDataLoaderStrategy,\n  DataDenDataLoaderStrategy,\n  DataDenHeaderDateFilterRenderer,\n  DataDenHeaderNumberFilterRenderer,\n  DataDenHeaderSelectFilterRenderer,\n  DataDenHeaderTextFilterRenderer,\n};\n\nexport type { DataDenOptions, DataDenSortingEvent, DataDenPinningEvent };\n"],"names":["createHtmlElement","template","elementName","placeholder","debounce","callback","debounceTime","timeout","args","debounceFn","deepCopy","obj","arr","item","i","newObj","key","parseDate","dateString","dateParts","part","year","month","day","isSameDate","date1","date2","DataDenDefaultCellEditor","params","__privateAdd","_cssPrefix","__privateSet","__privateGet","DataDenCell","value","colIndex","rowIndex","left","width","pinned","options","_initRenderers","_getCellRendererParams","_getCellEditorParams","_value","_options","_renderer","_editor","_left","__privateMethod","initRenderers_fn","cellElement","cellRenderer","cellRendererParams","getCellRendererParams_fn","cellEditorParams","getCellEditorParams_fn","DataDenDefaultCellRenderer","DataDenDefaultHeaderCellRenderer","DataDenHeaderSorterRenderer","Context","action","DataDenHeaderDefaultSorterRenderer","field","order","cssPrefix","PubSub","multiSortKey","_subscribeSortingStartEvent","_updateArrowDirectionAfterSort","_updateSortIndexOrder","_field","_multiSortKey","event","isMultiSort","subscribeSortingStartEvent_fn","command","activeSorters","updateArrowDirectionAfterSort_fn","updateSortIndexOrder_fn","arrowElement","indexElement","activeSorter","sorter","sortIndexNumber","DataDenHeaderResizerRenderer","DataDenHeaderDefaultResizerRenderer","colDef","_onMouseDown","_isPinnedRight","onMouseDown_fn","DataDenHeaderMenuRenderer","_initDropdown","dropdownTemplate","initDropdown_fn","unPinTrigger","pinLeftTrigger","pinRightTrigger","DataDenHeaderCell","_getHeaderFilterParams","_onFilterChange","_renderDropdown","_filterRenderer","_sorterRenderer","_resizerRenderer","_headerMenuRenderer","_order","_isDropdownInitiated","renderDropdown_fn","filter","sort","resize","filterRenderer","filterParams","getHeaderFilterParams_fn","method","listOptions","onFilterChange_fn","context","type","state","isActive","filterFn","filterChangeEvent","_a","DataDenHeaderFilterRenderer","DataDenHeaderTextFilterRenderer","searchTerm","caseSensitive","debounceFilter","DataDenHeaderNumberFilterRenderer","searchTermAsNumber","valueAsNumber","DataDenHeaderDateFilterRenderer","dateParserFn","searchTermAsDate","valueAsDate","DataDenHeaderSelectFilterRenderer","_createSelectOptions","createSelectOptions_fn","optionsFragment","option","optionEl","DataDenRow","index","cells","leftCellsWidth","cell","acc","curr","rightCellsWidth","leftCellsWrapper","centerCellsWrapper","rightCellsWrapper","DataDenHeaderRow","DataDenPaginationRenderer","firstRowIndex","lastRowIndex","allTotalRows","button","info","pageSize","getPinnedLeftColumns","columns","col","getMainColumns","getPinnedRightColumns","getMainOrderedColumns","getMainColumnIndexes","getMainColumnsOrder","_","getAllColumnsOrder","DataDenPinningPreviousState","values","DataDenEventEmitter","name","_callbacks","DataDenRenderingService","container","_init","_createPinnedHeaderCells","_createMainHeaderCells","_createHeaderRow","_createPinnedCellsLeft","_createMainCells","_createPinnedCellsRight","_createDataRows","_publishFetchStart","_calculateGridSize","_renderGrid","_renderHeader","_renderBody","_subscribeToEvents","_subscribeFetchDone","_updateRows","_container","_orderedColumns","_defaultOrderedColumns","_columnsOrder","_headerRow","_rows","_paginationRenderer","init_fn","subscribeToEvents_fn","subscribeFetchDone_fn","publishFetchStart_fn","grid","renderGrid_fn","gridMain","renderHeader_fn","renderBody_fn","calculateGridSize_fn","createHeaderRow_fn","createPinnedHeaderCells_fn","pinnedColumnsDefs","defaultColumn","createMainHeaderCells_fn","mainColumnsDefs","colDefs","pinnedHeaderCellsLeft","mainHeaderCells","pinnedHeaderCellsRight","headerCells","createPinnedCellsLeft_fn","createMainCells_fn","orderedColIndex","createPinnedCellsRight_fn","pinnedColIndex","createDataRows_fn","rowsData","rowData","pinnedCellsLeft","mainCells","aField","bField","aIndex","bIndex","mainCellsSorted","pinnedCellsRight","header","body","headerMainCellsWrapper","rowMainCellsWrappers","allColsWidth","leftPinnedColsWidth","mainColsWidth","rowsHeight","rowMainCellsWrapper","headerContainer","headerRow","rowContainer","rows","row","columnIndex","currentColIndex","pinningPreviousState","updateRows_fn","rowsEl","DataDenPaginationService","_updateState","_publishEvents","_loadFirstPage","_loadPrevPage","_loadNextPage","_loadLastPage","_currentPage","_pageSize","_allTotalRows","loadFirstPage_fn","loadPrevPage_fn","loadNextPage_fn","loadLastPage_fn","updateState_fn","publishEvents_fn","__privateWrapper","DataDenDraggingService","_subscribeRerenderingDone","_setHeaderElements","_setColumnParams","_setBreakpoints","_getOffsetX","_getAllColumnPositions","_getAllColumnElements","_getColumnElements","_addColumnDragEventHandlers","_setDefaultColumnsOrder","_subscribeResizingDone","_onHeaderMouseDown","_getCurrentIndex","_onGridMouseMove","_onDocumentMouseUp","_enableTransition","_setActiveStyle","_unsetActiveStyle","_disableTransition","_getMinBreakpointIndex","_updateColumnPositions","_getDirection","_getColumnsGap","_swapArrayElements","_finalizeDragging","_resetIndexes","_removeDraggableClass","_removeDocumentEventListeners","_publishColumnsOrder","_gridMain","_isInitiated","_isDragging","_headerMainCellsWrapper","_headers","_currentIndex","_targetIndex","_prevTargetIndex","_columns","_columnPositions","_breakpoints","_mainColumnsOrder","_defaultGridOffsetLeft","_handleGridMouseMove","_handleDocumentMouseUp","_handleHeaderMouseDown","subscribeRerenderingDone_fn","setDefaultColumnsOrder_fn","setHeaderElements_fn","setColumnParams_fn","addColumnDragEventHandlers_fn","subscribeResizingDone_fn","removeDraggableClass_fn","removeDocumentEventListeners_fn","tempColumns","getAllColumnElements_fn","getAllColumnPositions_fn","setBreakpoints_fn","column","a","b","getOffsetX_fn","pageX","getColumnElements_fn","colHeader","onHeaderMouseDown_fn","onGridMouseMove_fn","onDocumentMouseUp_fn","orderedColumnPositions","target","offsetX","getCurrentIndex_fn","enableTransition_fn","setActiveStyle_fn","getMinBreakpointIndex_fn","currentColumnWidth","gap","getColumnsGap_fn","getDirection_fn","updateColumnPositions_fn","finalizeDragging_fn","unsetActiveStyle_fn","disableTransition_fn","array","direction","currentOrderedIndex","swapArrayElements_fn","publishColumnsOrder_fn","sourceIndex","sourceColumnWidth","targetIndex","temp","resetIndexes_fn","DataDenResizingService","_subscribeResizingEvents","_subscribeDraggingEvent","_onMousedown","_onMouseup","_onMousemove","_resizeCurrentColumn","_updateRemainingColumnsPosition","_getHeadersOnTheRight","_isResizing","_headersMain","_currentHeader","_currentCol","_headersOnTheRight","_isResizingPinnedRightColumn","subscribeResizingEvents_fn","subscribeDraggingEvent_fn","onMousedown_fn","onMousemove_fn","onMouseup_fn","getHeadersOnTheRight_fn","movementX","resizeCurrentColumn_fn","updateRemainingColumnsPosition_fn","currentWidth","newWidth","currentLeft","newLeft","currentHeaderLeft","colHeaderIndex","colCells","DataDenFilteringService","_handleHeaderFilterChange","_updateActiveHeaderFilters","_handleQuickFilterChange","handleHeaderFilterChange_fn","handleQuickFilterChange_fn","updateActiveHeaderFilters_fn","activeFiltersChangeEvent","activeQuickFilterChangeEvent","DataDenSortingPreviousState","DataDenSortingService","sortingPreviousState","isCurrentSorterActive","currentSorterOrder","nextOrder","comparator","sorterExist","sortIndex","currentIndex","sortResult","isAscending","fieldA","fieldB","result","DataDenDataLoaderStrategy","DataDenClientDataLoaderStrategy","data","_data","filtered","quickFiltered","sorted","filtersOptions","res","paginationOptions","paginated","sortOptions","sortFn","quickFilterOptions","DataDenServerDataLoaderStrategy","DataDenFetchService","loader","_getData","_publishFetchDone","_subscribeFetchStart","_subscribeSortingDone","_subscribeQuickFilterChanged","_subscribeFilterChange","_subscribePaginationChange","_loader","_fetchOptions","subscribeFetchStart_fn","subscribeSortingDone_fn","subscribeQuickFilterChanged_fn","subscribeFilterChange_fn","subscribePaginationChange_fn","getData_fn","fetchOptions","publishFetchDone_fn","EventData","DataDenEvent","DataDenPubSub","_unsubscribe","_listeners","unsubscribe_fn","cb","defaultPaginationOptions","defaultQuickFilterFn","defaultQuickFilterOptions","defaultDateParserFn","defaultSortComparator","defaultSortOptions","defaultOptions","isObject","deepMerge","object","source","objValue","srcValue","DataDen","_createOptions","_getDataLoaderStrategy","_rendering","_sorting","_filtering","_pagination","_dragging","_resizing","_dataLoaderStrategy","_fetch","gridOptions","createOptions_fn","getDataLoaderStrategy_fn","pin","userOptions","mode"],"mappings":"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"}