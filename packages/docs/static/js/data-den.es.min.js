var Zs = (h, t, e) => {
  if (!t.has(h)) throw TypeError('Cannot ' + e);
};
var s = (h, t, e) => (Zs(h, t, 'read from private field'), e ? e.call(h) : t.get(h)),
  r = (h, t, e) => {
    if (t.has(h)) throw TypeError('Cannot add the same private member more than once');
    t instanceof WeakSet ? t.add(h) : t.set(h, e);
  },
  a = (h, t, e, i) => (Zs(h, t, 'write to private field'), i ? i.call(h, e) : t.set(h, e), e);
var ti = (h, t, e, i) => ({
    set _(n) {
      a(h, t, n, e);
    },
    get _() {
      return s(h, t, i);
    },
  }),
  o = (h, t, e) => (Zs(h, t, 'access private method'), e);
function v(h, t = 'div') {
  const e = document.createElement(t);
  return (e.innerHTML = h), e.firstElementChild;
}
function bi(h, t) {
  let e;
  return (...i) => {
    const n = () => {
      clearTimeout(e), h(...i);
    };
    clearTimeout(e), (e = setTimeout(n, t));
  };
}
const Gt = (h) => {
  if (typeof h != 'object' || h === null) return h;
  if (h instanceof Date) return new Date(h.getTime());
  if (h instanceof Array) return h.reduce((t, e, i) => ((t[i] = Gt(e)), t), []);
  if (h instanceof Object) return Object.keys(h).reduce((t, e) => ((t[e] = Gt(h[e])), t), {});
};
function Vr(h) {
  const t = h.split('-').map((l) => Number(l)),
    [e, i, n] = t;
  return new Date(e, i - 1, n);
}
function Nr(h, t) {
  return h.setHours(0, 0, 0, 0), t.setHours(0, 0, 0, 0), h.getTime() === t.getTime();
}
var Ut;
class Br {
  constructor(t) {
    r(this, Ut, void 0);
    a(this, Ut, t.cssPrefix);
    const e = `
      <div class="${s(this, Ut)}cell-editor-container"><input type="text" value="${t.value}"></div>
    `;
    this.element = v(e);
  }
  getGui() {
    return this.element;
  }
  setValue() {}
  parseValue() {}
}
Ut = new WeakMap();
var Et, F, Vt, De, Nt, Ee, xi, $e, Si, ye, Pi;
class xe {
  constructor(t, e, i, n, l, c, d) {
    r(this, Ee);
    r(this, $e);
    r(this, ye);
    r(this, Et, void 0);
    r(this, F, void 0);
    r(this, Vt, void 0);
    r(this, De, void 0);
    r(this, Nt, void 0);
    (this.colIndex = e),
      (this.rowIndex = i),
      (this.width = l),
      a(this, Et, t),
      a(this, F, d),
      a(this, Nt, c ? 'auto' : `${n}px`),
      (this.pinned = c),
      o(this, Ee, xi).call(this);
  }
  render() {
    const t =
        /* HTML */
        `
          <div
            class="${s(this, F).cssPrefix}cell ${s(this, F).draggable && !this.pinned
              ? `${s(this, F).cssPrefix}cell-draggable`
              : ''} ${this.pinned === 'left' ? `${s(this, F).cssPrefix}cell-pinned-left` : ''} ${this.pinned === 'right'
              ? `${s(this, F).cssPrefix}cell-pinned-right`
              : ''}"
            role="gridcell"
            ref="cell"
            style="left: ${s(this, Nt)}; width: ${this.width}px;"
          ></div>
        `,
      e = v(t);
    return e.appendChild(s(this, Vt).getGui()), e;
  }
}
(Et = new WeakMap()),
  (F = new WeakMap()),
  (Vt = new WeakMap()),
  (De = new WeakMap()),
  (Nt = new WeakMap()),
  (Ee = new WeakSet()),
  (xi = function () {
    const e = s(this, F).columns[this.colIndex].cellRenderer,
      i = o(this, $e, Si).call(this),
      n = o(this, ye, Pi).call(this);
    a(this, Vt, new e(i)), a(this, De, new Br(n));
  }),
  ($e = new WeakSet()),
  (Si = function () {
    return {
      value: s(this, Et),
      cssPrefix: s(this, F).cssPrefix,
    };
  }),
  (ye = new WeakSet()),
  (Pi = function () {
    return {
      value: s(this, Et),
      cssPrefix: s(this, F).cssPrefix,
    };
  });
class jr {
  constructor(t) {
    this.element = v(`<span>${t.value}</span>`);
  }
  getGui() {
    return this.element;
  }
}
var Bt;
class Qr {
  constructor(t) {
    r(this, Bt, void 0);
    a(this, Bt, t.cssPrefix);
    const e = `<div class="${s(this, Bt)}header-cell-value">${t.value}</div>`;
    this.element = v(e);
  }
  getGui() {
    return this.element;
  }
}
Bt = new WeakMap();
class Xr {}
class b {
  constructor(t) {
    this.action = t;
  }
}
var rt, D, jt, Qt, Re, Ci, Fe, Di, Le, Ei;
class Kr extends Xr {
  constructor(e, i, n, l) {
    super();
    r(this, Re);
    r(this, Fe);
    r(this, Le);
    r(this, rt, void 0);
    r(this, D, void 0);
    r(this, jt, void 0);
    r(this, Qt, void 0);
    (this.PubSub = n), a(this, D, l.cssPrefix);
    const c = `
      <div class="${s(this, D)}header-sorter">
        <div
          ref="sorterArrow"
          class="${s(this, D)}header-sorter-arrow ${s(this, D)}header-sorter-arrow-${i}"
        >
          <svg 
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            class="${s(this, D)}header-sorter-arrow-svg"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M7.25 9.75 12 3m0 0 4.75 6.75M12 3v18"
            />
          </svg>
        </div>
        <div ref="sorterIndex" class="${s(this, D)}header-sorter-index"></div>
      </div>
    `;
    a(this, rt, e),
      a(this, Qt, l.multiSort),
      a(this, jt, l.multiSortKey),
      (this.element = v(c)),
      (this.arrowElement = this.element.querySelector('[ref="sorterArrow"]')),
      this.element.addEventListener('click', (d) => {
        const f = s(this, jt) === 'shift' ? d.shiftKey : d.ctrlKey,
          u = s(this, Qt) && f;
        window.getSelection().removeAllRanges(), this.sort(u);
      }),
      o(this, Re, Ci).call(this);
  }
  destroy() {
    throw new Error('Method not implemented.');
  }
  getGui() {
    return this.element;
  }
  sort(e) {
    const i = 'command:sorting:start';
    this.PubSub.publish(i, {
      caller: this,
      context: new b(i),
      field: s(this, rt),
      isMultiSort: e,
    });
  }
}
(rt = new WeakMap()),
  (D = new WeakMap()),
  (jt = new WeakMap()),
  (Qt = new WeakMap()),
  (Re = new WeakSet()),
  (Ci = function () {
    this.PubSub.subscribe('command:fetch:sort-start', (e) => {
      const { field: i, order: n, isMultiSort: l, activeSorters: c } = e.data;
      s(this, rt) === i && o(this, Fe, Di).call(this, n, l), o(this, Le, Ei).call(this, c);
    });
  }),
  (Fe = new WeakSet()),
  (Di = function (e, i) {
    i ||
      document.querySelectorAll('[ref="sorterArrow"]').forEach((l) => {
        l.classList.remove(`${s(this, D)}header-sorter-arrow-asc`, `${s(this, D)}header-sorter-arrow-desc`);
      }),
      e === '' &&
        i &&
        this.arrowElement.classList.remove(
          `${s(this, D)}header-sorter-arrow-asc`,
          `${s(this, D)}header-sorter-arrow-desc`
        ),
      this.arrowElement.classList.add(`${s(this, D)}header-sorter-arrow-${e}`);
  }),
  (Le = new WeakSet()),
  (Ei = function (e) {
    const i = this.element.querySelector('[ref="sorterIndex"]'),
      n = e.find((l) => l.field === s(this, rt));
    if (e.length > 1 && n) {
      const l = n.sortIndex + 1;
      i.textContent = l.toString();
    } else i.textContent = '';
  });
class _r {}
var $t, yt, Me, $i;
class Jr extends _r {
  constructor(e, i, n) {
    super();
    r(this, Me);
    r(this, $t, void 0);
    r(this, yt, void 0);
    (this.PubSub = n), a(this, $t, e), a(this, yt, i.pinned === 'right');
    const l = `<div class="${s(this, $t)}header-resizer ${
      s(this, yt) ? s(this, $t) + 'header-resizer-left' : ''
    }"></div>`;
    (this.element = v(l)), this.element.addEventListener('mousedown', o(this, Me, $i).bind(this));
  }
  getGui() {
    return this.element;
  }
  destroy() {}
}
($t = new WeakMap()),
  (yt = new WeakMap()),
  (Me = new WeakSet()),
  ($i = function (e) {
    e.stopPropagation(),
      this.PubSub.publish('info:resizing:mousedown', {
        target: e.target,
        isPinnedRight: s(this, yt),
        context: new b('info:resizing:mousedown'),
      });
  });
var q, Ie, yi;
class Yr {
  constructor(t, e, i, n) {
    r(this, Ie);
    r(this, q, void 0);
    (this.PubSub = n), a(this, q, t), (this.colDef = e), (this.colIndex = i);
    const l = `<button class="${s(this, q)}header-menu-toggler">
      <svg xmlns="http://www.w3.org/2000/svg" width="16px" height="100%" viewBox="0 0 16 16" fill="currenColor" class="${s(
        this,
        q
      )}header-menu-toggler-icon">
        <path stroke="currentColor" fill="currentColor" d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>
      </svg>
    </button>
    `,
      c = `<div class="${s(this, q)}header-menu-dropdown">
      ${
        this.colDef.pinned
          ? `<a href="#" class="${s(this, q)}header-menu-dropdown-item" ref="unPinColTrigger">Unpin</a>`
          : ''
      }
      ${
        this.colDef.pinned === 'right' || !this.colDef.pinned
          ? `<a href="#" class="${s(this, q)}header-menu-dropdown-item" ref="pinLeftPinColTrigger">Pin to the left</a>`
          : ''
      }
      ${
        this.colDef.pinned === 'left' || !this.colDef.pinned
          ? `<a href="#" class="${s(
              this,
              q
            )}header-menu-dropdown-item" ref="pinRightPinColTrigger">Pin to the right</a>`
          : ''
      }
    </div>`;
    (this.toggler = v(l)), (this.dropdown = v(c)), o(this, Ie, yi).call(this);
  }
  getGui() {
    return this.toggler;
  }
  getDropdownGui() {
    return this.dropdown;
  }
  destroy() {}
}
(q = new WeakMap()),
  (Ie = new WeakSet()),
  (yi = function () {
    this.toggler.addEventListener('click', () => {
      this.dropdown.classList.toggle('active');
    });
    const t = this.dropdown.querySelector('[ref="unPinColTrigger"]'),
      e = this.dropdown.querySelector('[ref="pinLeftPinColTrigger"]'),
      i = this.dropdown.querySelector('[ref="pinRightPinColTrigger"]');
    t == null ||
      t.addEventListener('click', (n) => {
        n.preventDefault(),
          this.PubSub.publish('command:pin-column:start', {
            pin: !1,
            colIndex: this.colIndex,
            context: new b('command:pin-column:start'),
          });
      }),
      e == null ||
        e.addEventListener('click', (n) => {
          n.preventDefault(),
            this.PubSub.publish('command:pin-column:start', {
              pin: 'left',
              colIndex: this.colIndex,
              context: new b('command:pin-column:start'),
            });
        }),
      i == null ||
        i.addEventListener('click', (n) => {
          n.preventDefault(),
            this.PubSub.publish('command:pin-column:start', {
              pin: 'right',
              colIndex: this.colIndex,
              context: new b('command:pin-column:start'),
            });
        }),
      document.addEventListener('click', (n) => {
        this.toggler.contains(n.target) || this.dropdown.classList.remove('active');
      }),
      document.addEventListener('keydown', (n) => {
        n.key === 'Escape' && this.dropdown.classList.remove('active');
      });
  });
var Xt, Kt, K, nt, at, ot, _t, w, Jt, Rt, Ae, Ri, Oe, Fi, ke, Li, Te, Mi, qe, Ii;
class vi extends xe {
  constructor(e, i, n, l, c, d, f, u, g) {
    super(e, n, i, l, c, d, f);
    r(this, Ae);
    r(this, Oe);
    r(this, ke);
    r(this, Te);
    r(this, qe);
    r(this, Xt, void 0);
    r(this, Kt, void 0);
    r(this, K, void 0);
    r(this, nt, void 0);
    r(this, at, void 0);
    r(this, ot, void 0);
    r(this, _t, void 0);
    r(this, w, void 0);
    r(this, Jt, void 0);
    r(this, Rt, void 0);
    (this.PubSub = g),
      a(this, K, null),
      a(this, nt, null),
      a(this, at, null),
      a(this, ot, null),
      a(this, Xt, e),
      a(this, Kt, d ? 'auto' : `${l}px`),
      (this.width = c),
      (this.pinned = d),
      (this.colIndex = i),
      (this.rowIndex = n),
      a(this, w, f),
      a(this, Jt, u),
      a(this, Rt, !1),
      o(this, Ae, Ri).call(this);
  }
  render() {
    const e = s(this, w).columns.some((d) => d.filter),
      i =
        /* HTML */
        `<div
          class="${s(this, w).cssPrefix}header-cell ${s(this, w).draggable && !this.pinned
            ? `${s(this, w).cssPrefix}header-cell-draggable`
            : ''} ${this.pinned === 'left' ? `${s(this, w).cssPrefix}header-cell-pinned-left` : ''} ${this.pinned ===
          'right'
            ? `${s(this, w).cssPrefix}header-cell-pinned-right`
            : ''} ${e ? `${s(this, w).cssPrefix}header-cell-filterable` : ''}"
          role="columnheader"
          ref="headerCell"
          style="left: ${s(this, Kt)}; width: ${this.width}px;"
        >
          <div ref="headerCellMain" class="${s(this, w).cssPrefix}header-cell-main">
            <div ref="headerValueAndSorter" class="${s(this, w).cssPrefix}header-value-and-sorter"></div>
          </div>
        </div>`,
      n = v(i),
      l = n.querySelector('[ref="headerCellMain"]'),
      c = n.querySelector('[ref="headerValueAndSorter"]');
    return (
      c.appendChild(s(this, _t).getGui()),
      s(this, nt) && c.appendChild(s(this, nt).getGui()),
      s(this, K) && n.appendChild(s(this, K).getGui()),
      l.appendChild(s(this, ot).getGui()),
      o(this, qe, Ii).call(this, n),
      s(this, at) && n.appendChild(s(this, at).getGui()),
      n
    );
  }
}
(Xt = new WeakMap()),
  (Kt = new WeakMap()),
  (K = new WeakMap()),
  (nt = new WeakMap()),
  (at = new WeakMap()),
  (ot = new WeakMap()),
  (_t = new WeakMap()),
  (w = new WeakMap()),
  (Jt = new WeakMap()),
  (Rt = new WeakMap()),
  (Ae = new WeakSet()),
  (Ri = function () {
    const e = s(this, w).columns[this.colIndex],
      i = s(this, w).cssPrefix,
      { field: n, filter: l, sort: c, resize: d } = e,
      f = s(this, Jt);
    if ((a(this, _t, new Qr(o(this, Oe, Fi).call(this))), a(this, ot, new Yr(i, e, this.colIndex, this.PubSub)), l)) {
      const u = e.filterRenderer,
        g = o(this, ke, Li).call(this, e);
      a(this, K, new u(g));
    }
    c && a(this, nt, new Kr(n, f, this.PubSub, s(this, w))), d && a(this, at, new Jr(i, e, this.PubSub));
  }),
  (Oe = new WeakSet()),
  (Fi = function () {
    return {
      value: s(this, Xt),
      cssPrefix: s(this, w).cssPrefix,
    };
  }),
  (ke = new WeakSet()),
  (Li = function (e) {
    const i = e.field,
      { method: n, debounceTime: l, listOptions: c } = e.filterOptions;
    return {
      colDef: e,
      field: i,
      method: n,
      debounceTime: l,
      cssPrefix: s(this, w).cssPrefix,
      listOptions: c,
      filterChanged: () => o(this, Te, Mi).call(this),
    };
  }),
  (Te = new WeakSet()),
  (Mi = function () {
    const i = s(this, w).columns[this.colIndex].field,
      n = s(this, K),
      l = new b('info:filtering:header-filter-changed'),
      c = n.getType(),
      d = n.getState(),
      f = n.isActive(),
      u = n.getFilterFn(),
      g = {
        context: l,
        field: i,
        type: c,
        state: d,
        isActive: f,
        filterFn: u,
      };
    this.PubSub.publish('info:filtering:header-filter-changed', g);
  }),
  (qe = new WeakSet()),
  (Ii = function (e) {
    var i;
    s(this, Rt) || (e.appendChild((i = s(this, ot)) == null ? void 0 : i.getDropdownGui()), a(this, Rt, !0));
  });
class Js {}
var ht;
class Zr extends Js {
  constructor(e) {
    super();
    r(this, ht, void 0);
    (this.params = e), a(this, ht, e.cssPrefix);
    const i =
      /* HTLM */
      `
      <div class="${s(this, ht)}header-filter">
        <input type="text" class="${s(this, ht)}header-filter-input">
      </div>
    `;
    (this.element = v(i)),
      (this.input = this.element.querySelector(`.${s(this, ht)}header-filter-input`)),
      this.attachUiEvents(e);
  }
  getGui() {
    return this.element;
  }
  getType() {
    return 'text';
  }
  getState() {
    const e = this.input ? this.input.value : null;
    return {
      method: this.params.method,
      searchTerm: e,
    };
  }
  isActive() {
    return !!(this.input ? this.input.value : null);
  }
  getFilterFn() {
    const e = this.params.colDef.filterOptions;
    return (i, n) => {
      let l = i.searchTerm;
      const c = i.method,
        d = e.caseSensitive;
      switch (((n = d ? n : n.toString().toLowerCase()), (l = d ? l : l.toString().toLowerCase()), c)) {
        case 'includes':
          return n.includes(l);
        default:
          return !1;
      }
    };
  }
  attachUiEvents(e) {
    if (this.input) {
      const i = bi(() => e.filterChanged(), e.debounceTime);
      this.input.addEventListener('keyup', () => i());
    }
  }
  destroy() {}
}
ht = new WeakMap();
var lt;
class En extends Js {
  constructor(e) {
    super();
    r(this, lt, void 0);
    (this.params = e), a(this, lt, e.cssPrefix);
    const i =
      /* HTML */
      `
        <div class="${s(this, lt)}header-filter">
          <input type="number" class="${s(this, lt)}header-filter-input" />
        </div>
      `;
    (this.element = v(i)),
      (this.input = this.element.querySelector(`.${s(this, lt)}header-filter-input`)),
      this.attachUiEvents(e);
  }
  getGui() {
    return this.element;
  }
  getType() {
    return 'number';
  }
  getState() {
    const e = this.input.value;
    return {
      method: this.params.method,
      searchTerm: e,
    };
  }
  isActive() {
    return !!this.input.value;
  }
  getFilterFn() {
    return (e, i) => {
      const n = e.method,
        l = Number(e.searchTerm),
        c = Number(i);
      switch (n) {
        case 'equals':
          return c === l;
        default:
          return !1;
      }
    };
  }
  attachUiEvents(e) {
    if (this.input) {
      const i = bi(() => e.filterChanged(), e.debounceTime);
      this.input.addEventListener('keyup', () => i());
    }
  }
  destroy() {}
}
lt = new WeakMap();
var ct;
class $n extends Js {
  constructor(e) {
    super();
    r(this, ct, void 0);
    (this.params = e), a(this, ct, e.cssPrefix);
    const i =
      /* HTML */
      `
        <div class="${s(this, ct)}header-filter">
          <input type="date" class="${s(this, ct)}header-filter-input" />
        </div>
      `;
    (this.element = v(i)),
      (this.input = this.element.querySelector(`.${s(this, ct)}header-filter-input`)),
      this.attachUiEvents(e);
  }
  getGui() {
    return this.element;
  }
  getType() {
    return 'date';
  }
  getState() {
    const e = this.input.value;
    return {
      method: this.params.method,
      searchTerm: e,
    };
  }
  isActive() {
    return !!this.input.value;
  }
  getFilterFn() {
    const e = this.params.colDef.filterOptions;
    return (i, n) => {
      const l = e.dateParserFn,
        c = i.method,
        d = Vr(i.searchTerm),
        f = typeof n == 'string' ? l(n) : n;
      switch (c) {
        case 'equals':
          return Nr(d, f);
        default:
          return !1;
      }
    };
  }
  attachUiEvents(e) {
    if (this.input) {
      const i = bi(() => e.filterChanged(), e.debounceTime);
      this.input.addEventListener('change', () => i());
    }
  }
  destroy() {}
}
ct = new WeakMap();
var dt, ze, Ai;
class yn extends Js {
  constructor(e) {
    super();
    r(this, ze);
    r(this, dt, void 0);
    (this.params = e), a(this, dt, e.cssPrefix);
    const i =
      /* HTML */
      `
        <div class="${s(this, dt)}header-filter">
          <select class="${s(this, dt)}header-filter-select">
            <option disabled selected value></option>
          </select>
        </div>
      `;
    (this.element = v(i)),
      (this.select = this.element.querySelector(`.${s(this, dt)}header-filter-select`)),
      o(this, ze, Ai).call(this, e),
      this.attachUiEvents(e);
  }
  getGui() {
    return this.element;
  }
  getType() {
    return 'select';
  }
  getState() {
    return {
      method: this.params.method,
      searchTerm: this.select.value,
    };
  }
  isActive() {
    return !!this.select.value;
  }
  getFilterFn() {
    return (e, i) => {
      const n = e.method;
      switch (((i = i.toString().toLowerCase()), n)) {
        case 'includes':
          return i.includes(e.searchTerm);
        case 'equals':
          return i === e.searchTerm;
        default:
          return !1;
      }
    };
  }
  attachUiEvents(e) {
    this.select &&
      this.select.addEventListener('change', () => {
        e.filterChanged();
      });
  }
  destroy() {}
}
(dt = new WeakMap()),
  (ze = new WeakSet()),
  (Ai = function (e) {
    if (this.select) {
      const i = e.listOptions,
        n = document.createDocumentFragment();
      i.forEach((l) => {
        const c = document.createElement('option');
        (c.label = l.label), (c.value = l.value), n.appendChild(c);
      }),
        this.select.appendChild(n);
    }
  });
var W;
class Oi {
  constructor(t, e, i) {
    r(this, W, void 0);
    (this.index = t), (this.cells = e), a(this, W, i);
    const n =
      /* HTML */
      `<div class="${i.cssPrefix}row" role="row" ref="row" style="height: ${i.rowHeight}px;"></div>`;
    this.element = v(n);
  }
  render() {
    const t = document.createDocumentFragment(),
      e = this.cells.filter((d) => d.pinned === 'left').reduce((d, f) => d + f.width, 0),
      i = this.cells.filter((d) => d.pinned === 'right').reduce((d, f) => d + f.width, 0),
      n = v(
        /* HTML */
        `<div
          class="${s(this, W).cssPrefix}pinned-cells-wrapper ${s(this, W).cssPrefix}pinned-cells-wrapper-left"
        ></div>`
      ),
      l = v(
        /* HTML */
        `<div
          class="${s(this, W).cssPrefix}main-cells-wrapper"
          style="left: ${e}px; width: calc(100% - ${e + i}px);"
          ref="rowMainCellsWrapper"
        ></div>`
      ),
      c = v(
        /* HTML */
        `<div
          class="${s(this, W).cssPrefix}pinned-cells-wrapper ${s(this, W).cssPrefix}pinned-cells-wrapper-right"
        ></div>`
      );
    return (
      t.appendChild(n),
      t.appendChild(l),
      t.appendChild(c),
      this.cells.filter((d) => d.pinned === 'left').forEach((d) => n.appendChild(d.render())),
      this.cells.filter((d) => !d.pinned).forEach((d) => l.appendChild(d.render())),
      this.cells.filter((d) => d.pinned === 'right').forEach((d) => c.appendChild(d.render())),
      this.element.appendChild(t),
      this.element
    );
  }
}
W = new WeakMap();
var _;
class tn extends Oi {
  constructor(e, i, n) {
    super(e, i, n);
    r(this, _, void 0);
    (this.index = e), (this.cells = i), a(this, _, n);
    const l = s(this, _).columns.some((d) => d.filter) ? n.headerHeight + 15 : n.headerHeight,
      c =
        /* HTML */
        `<div class="${n.cssPrefix}header-row" role="row" ref="headerRow" style="height: ${l}px"></div>`;
    this.element = v(c);
  }
  render() {
    const e = document.createDocumentFragment(),
      i = this.cells.filter((f) => f.pinned === 'left').reduce((f, u) => f + u.width, 0),
      n = this.cells.filter((f) => f.pinned === 'right').reduce((f, u) => f + u.width, 0),
      l = v(
        /* HTML */
        `<div ref="headerLeftCellsWrapper" class="${s(this, _).cssPrefix}header-left-cells-wrapper"></div>`
      ),
      c = v(
        /* HTML */
        `<div
          ref="headerMainCellsWrapper"
          class="${s(this, _).cssPrefix}header-main-cells-wrapper"
          style="left: ${i}px; width: calc(100% - ${i + n}px)"
        ></div>`
      ),
      d = v(
        /* HTML */
        `<div ref="headerRightCellsWrapper" class="${s(this, _).cssPrefix}header-right-cells-wrapper"></div>`
      );
    return (
      e.appendChild(l),
      e.appendChild(c),
      e.appendChild(d),
      this.cells.filter((f) => f.pinned === 'left').forEach((f) => l.appendChild(f.render())),
      this.cells.filter((f) => !f.pinned).forEach((f) => c.appendChild(f.render())),
      this.cells.filter((f) => f.pinned === 'right').forEach((f) => d.appendChild(f.render())),
      this.element.appendChild(e),
      this.element
    );
  }
}
_ = new WeakMap();
var P;
class en {
  constructor(t, e, i) {
    r(this, P, void 0);
    (this.PubSub = i), (this.options = t), a(this, P, e);
    const n =
      /* HTML */
      `<div class="${s(this, P)}pagination">
        <div class="${s(this, P)}pagination-content">
          <button class="${s(this, P)}pagination-button" ref="data-den-pagination-first-button">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="${s(this, P)}pagination-button-svg"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="m18.75 4.5-7.5 7.5 7.5 7.5m-6-15L5.25 12l7.5 7.5"
              />
            </svg>
          </button>
          <button class="${s(this, P)}pagination-button" ref="data-den-pagination-prev-button">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="${s(this, P)}pagination-button-svg"
            >
              <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5 8.25 12l7.5-7.5" />
            </svg>
          </button>
          <div class="${s(this, P)}pagination-info" ref="data-den-pagination-info">
            1-10 ${this.options.ofText || 'of'} 100
          </div>
          <button class="${s(this, P)}pagination-button" ref="data-den-pagination-next-button">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="${s(this, P)}pagination-button-svg"
            >
              <path stroke-linecap="round" stroke-linejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5" />
            </svg>
          </button>
          <button class="${s(this, P)}pagination-button" ref="data-den-pagination-last-button">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="${s(this, P)}pagination-button-svg"
            >
              <path stroke-linecap="round" stroke-linejoin="round" d="m5.25 4.5 7.5 7.5-7.5 7.5m6-15 7.5 7.5-7.5 7.5" />
            </svg>
          </button>
        </div>
      </div>`;
    (this.element = v(n)),
      (this.buttons = {
        first: this.element.querySelector('[ref=data-den-pagination-first-button]'),
        prev: this.element.querySelector('[ref=data-den-pagination-prev-button]'),
        next: this.element.querySelector('[ref=data-den-pagination-next-button]'),
        last: this.element.querySelector('[ref=data-den-pagination-last-button]'),
      }),
      this.attachUiEvents(),
      this.subscribeToEvents();
  }
  getGui() {
    return this.element;
  }
  attachUiEvents() {
    this.buttons.first.addEventListener('click', () => {
      this.PubSub.publish('command:pagination:load-first-page:start', {
        context: new b('command:pagination:load-first-page:start'),
      });
    }),
      this.buttons.prev.addEventListener('click', () => {
        this.PubSub.publish('command:pagination:load-prev-page:start', {
          context: new b('command:pagination:load-prev-page:start'),
        });
      }),
      this.buttons.next.addEventListener('click', () => {
        this.PubSub.publish('command:pagination:load-next-page:start', {
          context: new b('command:pagination:load-next-page:start'),
        });
      }),
      this.buttons.last.addEventListener('click', () => {
        this.PubSub.publish('command:pagination:load-last-page:start', {
          context: new b('command:pagination:load-last-page:start'),
        });
      });
  }
  destroy() {
    var t;
    (this.element.innerHTML = ''), (t = document.querySelector('.data-den-pagination')) == null || t.remove();
  }
  subscribeToEvents() {
    this.PubSub.subscribe('info:pagination:info-change:done', (t) => {
      this.updateInfo(t.data.firstRowIndex, t.data.lastRowIndex, t.data.allTotalRows),
        this.updateButtonsState(t.data.firstRowIndex, t.data.lastRowIndex, t.data.allTotalRows);
    });
  }
  updateButtonsState(t, e, i) {
    Object.values(this.buttons).forEach((n) => (n.disabled = !1)),
      t === 0 && ((this.buttons.first.disabled = !0), (this.buttons.prev.disabled = !0)),
      e === i && ((this.buttons.next.disabled = !0), (this.buttons.last.disabled = !0));
  }
  updateInfo(t, e, i) {
    const n = this.element.querySelector('[ref=data-den-pagination-info');
    n.innerHTML = `${t + 1}-${e} ${this.options.ofText || 'of'} ${i}`;
  }
  updatePageSize(t) {
    this.PubSub.publish('info:pagination:page-size-change:done', {
      pageSize: t,
      context: new b('info:pagination:page-size-change:done'),
    });
  }
}
P = new WeakMap();
const ki = (h) => h.filter((t) => t.pinned === 'left'),
  Ys = (h) => h.filter((t) => !t.pinned),
  ei = (h) => h.filter((t) => t.pinned === 'right'),
  wi = (h) => Ti(h).map((t) => h[t]),
  Ti = (h) => Ys(h).map((t) => h.indexOf(t)),
  sn = (h) => Ys(h).map((t, e) => e),
  si = (h) => [...ki(h).map((t) => h.indexOf(t)), ...Ys(h).map((t) => h.indexOf(t)), ...ei(h).map((t) => h.indexOf(t))];
class rn {
  constructor(t) {
    (this.data = {}), (this.data = { ...this.data, ...t });
  }
  getValue(t) {
    return this.data[t];
  }
}
var ut;
class Wt {
  static on(t, e) {
    s(this, ut)[t] || (s(this, ut)[t] = []), s(this, ut)[t].push(e);
  }
  static triggerEvent(t, e) {
    var n;
    const i = {
      name: t,
      preventDefault: () => {
        i.defaultPrevented = !0;
      },
      defaultPrevented: !1,
      ...e,
    };
    return (
      (n = s(this, ut)[t]) == null ||
        n.forEach((l) => {
          l(i);
        }),
      i
    );
  }
}
(ut = new WeakMap()), r(Wt, ut, {});
var M,
  p,
  L,
  Yt,
  Ft,
  Zt,
  ft,
  Lt,
  te,
  ii,
  ee,
  ri,
  He,
  qi,
  We,
  zi,
  Ge,
  Hi,
  Ue,
  Wi,
  Ve,
  Gi,
  Ne,
  Ui,
  se,
  ni,
  Mt,
  Se,
  Be,
  Vi,
  je,
  Ni,
  Qe,
  Bi,
  Xe,
  ji,
  Ke,
  Qi,
  _e,
  Xi;
class nn {
  constructor(t, e, i) {
    r(this, te);
    r(this, ee);
    r(this, He);
    r(this, We);
    r(this, Ge);
    r(this, Ue);
    r(this, Ve);
    r(this, Ne);
    r(this, se);
    r(this, Mt);
    r(this, Be);
    r(this, je);
    r(this, Qe);
    r(this, Xe);
    r(this, Ke);
    r(this, _e);
    r(this, M, void 0);
    r(this, p, void 0);
    r(this, L, void 0);
    r(this, Yt, void 0);
    r(this, Ft, void 0);
    r(this, Zt, void 0);
    r(this, ft, []);
    r(this, Lt, null);
    (this.PubSub = i),
      a(this, M, t),
      a(this, p, e),
      e.pagination && a(this, Lt, new en(e.paginationOptions, e.cssPrefix, this.PubSub)),
      o(this, te, ii).call(this),
      o(this, Xe, ji).call(this),
      o(this, Ke, Qi).call(this),
      o(this, se, ni).call(this);
  }
  renderTable() {
    const t = o(this, Be, Vi).call(this),
      e = document.createElement('div');
    e.setAttribute('ref', 'gridMain'),
      e.classList.add(`${s(this, p).cssPrefix}grid-main`),
      e.appendChild(o(this, je, Ni).call(this)),
      e.appendChild(o(this, Qe, Bi).call(this)),
      t.appendChild(e),
      s(this, Lt) && t.appendChild(s(this, Lt).getGui()),
      s(this, M).appendChild(t),
      o(this, Mt, Se).call(this);
  }
  rerenderTable() {
    (s(this, M).innerHTML = ''),
      o(this, te, ii).call(this),
      o(this, se, ni).call(this),
      this.PubSub.publish('command:rerendering:done', {
        caller: this,
        context: new b('command:rerendering:done'),
      }),
      this.PubSub.publish('command:rerendering:done', {
        caller: this,
        context: new b('command:rerendering:done'),
      });
  }
}
(M = new WeakMap()),
  (p = new WeakMap()),
  (L = new WeakMap()),
  (Yt = new WeakMap()),
  (Ft = new WeakMap()),
  (Zt = new WeakMap()),
  (ft = new WeakMap()),
  (Lt = new WeakMap()),
  (te = new WeakSet()),
  (ii = function () {
    a(this, L, wi(s(this, p).columns)),
      a(this, Yt, wi(s(this, p).columns)),
      a(this, Ft, Ti(s(this, p).columns)),
      a(this, Zt, o(this, We, zi).call(this, s(this, p).columns, '')),
      this.renderTable();
  }),
  (ee = new WeakSet()),
  (ri = function (t, e, i) {
    return t.map((n) => {
      const l = n.headerName,
        c = 0,
        d = n.width || 120,
        f = s(this, p)
          .columns.map((u) => u.field)
          .indexOf(n.field);
      return new vi(l, f, e, c, d, n.pinned, s(this, p), i, this.PubSub);
    });
  }),
  (He = new WeakSet()),
  (qi = function (t, e, i) {
    return t.map((n, l) => {
      const c = n.headerName,
        d = s(this, L)
          .slice(0, l)
          .reduce((g, x) => g + (x.width || 120), 0),
        f = s(this, L)[l].width || 120,
        u = s(this, p)
          .columns.map((g) => g.field)
          .indexOf(n.field);
      return new vi(c, u, e, d, f, n.pinned, s(this, p), i, this.PubSub);
    });
  }),
  (We = new WeakSet()),
  (zi = function (t, e) {
    const n = o(this, ee, ri).call(this, ki(t), 0, e),
      l = o(this, He, qi).call(this, Ys(t), 0, e),
      c = o(this, ee, ri).call(this, ei(t).reverse(), 0, e),
      d = [...n, ...l, ...c];
    return new tn(0, d, s(this, p));
  }),
  (Ge = new WeakSet()),
  (Hi = function (t, e, i, n) {
    const l = s(this, p).columns.find((f) => f.field === t);
    if (l.pinned !== 'left') return;
    const c = 0,
      d = s(this, p).columns[i].width || 120;
    return new xe(e, i, n, c, d, l.pinned, s(this, p));
  }),
  (Ue = new WeakSet()),
  (Wi = function (t, e, i, n) {
    const l = s(this, p).columns.find((u) => u.field === t);
    if (l.pinned) return;
    const c = s(this, L).findIndex((u) => u.field === t),
      d = s(this, L)
        .slice(0, c)
        .reduce((u, g) => u + (g.width || 120), 0),
      f = s(this, L)[c].width || 120;
    return new xe(e, i, n, d, f, l.pinned, s(this, p));
  }),
  (Ve = new WeakSet()),
  (Gi = function (t, e, i, n) {
    const l = s(this, p).columns.find((u) => u.field === t);
    if (l.pinned !== 'right') return;
    const c = s(this, p)
        .columns.filter((u) => u.pinned === 'right')
        .map((u) => u.field)
        .indexOf(t),
      d = 0,
      f = ei(s(this, p).columns)[c].width || 120;
    return new xe(e, i, n, d, f, l.pinned, s(this, p));
  }),
  (Ne = new WeakSet()),
  (Ui = function (t) {
    return t.map((e, i) => {
      const n = Object.entries(e).map(([u, g], x) => o(this, Ge, Hi).call(this, u, g, x, i)),
        l = Object.entries(e);
      l.sort(([u], [g]) => {
        const x = s(this, L).findIndex((X) => X.field === u),
          ve = s(this, L).findIndex((X) => X.field === g);
        return x - ve;
      });
      const c = l.map(([u, g], x) => o(this, Ue, Wi).call(this, u, g, x, i)),
        d = Object.entries(e)
          .reverse()
          .map(([u, g], x) => o(this, Ve, Gi).call(this, u, g, x, i)),
        f = [...n, ...c, ...d].filter((u) => u !== void 0);
      return new Oi(i, f, s(this, p));
    });
  }),
  (se = new WeakSet()),
  (ni = function () {
    this.PubSub.publish('command:fetch:start', {
      caller: this,
      context: new b('command:fetch:start'),
    });
  }),
  (Mt = new WeakSet()),
  (Se = function () {
    const t = s(this, M).querySelector(`.${s(this, p).cssPrefix}header`),
      e = s(this, M).querySelector(`.${s(this, p).cssPrefix}grid-rows`),
      i = s(this, M).querySelector('[ref=headerMainCellsWrapper]'),
      n = s(this, M).querySelectorAll('[ref=rowMainCellsWrapper]'),
      l = s(this, p).columns.reduce((u, g) => u + (g.width || 120), 0),
      c = s(this, p)
        .columns.filter((u) => u.pinned === 'left')
        .reduce((u, g) => u + (g.width || 120), 0),
      d = s(this, p)
        .columns.filter((u) => !u.pinned)
        .reduce((u, g) => u + (g.width || 120), 0),
      f = s(this, p).rowHeight * s(this, ft).length;
    (t.style.width = `${l}px`),
      (e.style.width = `${l}px`),
      (e.style.height = `${f}px`),
      (i.style.left = `${c}px`),
      (i.style.width = `${d}px`),
      n &&
        n.forEach((u) => {
          (u.style.left = `${c}px`), (u.style.width = `${d}px`);
        });
  }),
  (Be = new WeakSet()),
  (Vi = function () {
    const t = document.createElement('div');
    return t.classList.add(`${s(this, p).cssPrefix}grid`), t;
  }),
  (je = new WeakSet()),
  (Ni = function () {
    const t = document.createElement('div');
    t.classList.add(`${s(this, p).cssPrefix}header`), t.setAttribute('role', 'rowgroup');
    const e = s(this, Zt).render();
    return t.appendChild(e), t;
  }),
  (Qe = new WeakSet()),
  (Bi = function () {
    const t = document.createElement('div');
    t.classList.add(`${s(this, p).cssPrefix}grid-rows`), t.setAttribute('role', 'rowgroup');
    const e = document.createDocumentFragment();
    return s(this, ft).forEach((i) => e.appendChild(i.render())), t.appendChild(e), t;
  }),
  (Xe = new WeakSet()),
  (ji = function () {
    this.PubSub.subscribe('info:dragging:columns-reorder:done', (t) => {
      a(this, Ft, t.data.columnsOrder),
        a(
          this,
          L,
          s(this, Ft).map((e) => s(this, Yt)[e])
        );
    }),
      this.PubSub.subscribe('info:resizing:start', (t) => {
        const e = si(s(this, p).columns)[t.data.currentColIndex];
        (s(this, p).columns[e].width = t.data.newCurrentColWidth), o(this, Mt, Se).call(this);
      }),
      this.PubSub.subscribe('command:pin-column:start', (t) => {
        const e = new rn({
          pin: s(this, p).columns[t.data.colIndex].pinned,
        });
        if (
          ((s(this, p).columns[t.data.colIndex].pinned = t.data.pin),
          Wt.triggerEvent('pinningStart', {
            pin: t.data.pin,
            colIndex: t.data.colIndex,
            columns: s(this, p).columns,
          }).defaultPrevented)
        ) {
          s(this, p).columns[t.data.colIndex].pinned = e.getValue('pin');
          return;
        }
        this.rerenderTable(),
          Wt.triggerEvent('pinningDone', {
            pin: t.data.pin,
            colIndex: t.data.colIndex,
            columns: s(this, p).columns,
          });
      });
  }),
  (Ke = new WeakSet()),
  (Qi = function () {
    this.PubSub.subscribe('info:fetch:done', (t) => {
      o(this, _e, Xi).call(this, t);
    });
  }),
  (_e = new WeakSet()),
  (Xi = function (t) {
    const { rows: e } = t.data,
      i = document.createDocumentFragment();
    a(this, ft, o(this, Ne, Ui).call(this, e)), s(this, ft).forEach((l) => i.appendChild(l.render()));
    const n = s(this, M).querySelector(`.${s(this, p).cssPrefix}grid-rows`);
    (n.innerHTML = ''), n.appendChild(i), o(this, Mt, Se).call(this);
  });
var ie, $, y, R, Je, Ki, G, it, Ye, _i, Ze, Ji, ts, Yi, es, Zi, ss, tr;
class an {
  constructor(t, e) {
    r(this, Je);
    r(this, G);
    r(this, Ye);
    r(this, Ze);
    r(this, ts);
    r(this, es);
    r(this, ss);
    r(this, ie, void 0);
    r(this, $, void 0);
    r(this, y, void 0);
    r(this, R, void 0);
    (this.PubSub = e),
      a(this, ie, t.paginationOptions),
      a(this, $, 0),
      a(this, R, 0),
      a(this, y, s(this, ie).pageSize || 10),
      o(this, Je, Ki).call(this);
  }
}
(ie = new WeakMap()),
  ($ = new WeakMap()),
  (y = new WeakMap()),
  (R = new WeakMap()),
  (Je = new WeakSet()),
  (Ki = function () {
    this.PubSub.subscribe('command:pagination:load-first-page:start', () => {
      o(this, Ze, Ji).call(this);
    }),
      this.PubSub.subscribe('command:pagination:load-prev-page:start', () => {
        o(this, ts, Yi).call(this);
      }),
      this.PubSub.subscribe('command:pagination:load-next-page:start', () => {
        o(this, es, Zi).call(this);
      }),
      this.PubSub.subscribe('command:pagination:load-last-page:start', () => {
        o(this, ss, tr).call(this);
      }),
      this.PubSub.subscribe('info:pagination:page-size-change:done', (t) => {
        a(this, y, t.data.pageSize), a(this, $, 0), o(this, G, it).call(this);
      }),
      this.PubSub.subscribe('info:fetch:done', (t) => {
        s(this, R) || s(this, R) === t.data.rows.length || (a(this, R, t.data.rows.length), o(this, G, it).call(this));
      });
  }),
  (G = new WeakSet()),
  (it = function () {
    const t = s(this, $) * s(this, y),
      e = Math.min(s(this, R), s(this, $) * s(this, y) + s(this, y));
    o(this, Ye, _i).call(this, t, e, s(this, R));
  }),
  (Ye = new WeakSet()),
  (_i = function (t, e, i) {
    this.PubSub.publish('info:pagination:info-change:done', {
      firstRowIndex: t,
      lastRowIndex: e,
      allTotalRows: i,
      pageSize: s(this, y),
      context: new b('info:pagination:info-change:done'),
    });
  }),
  (Ze = new WeakSet()),
  (Ji = function () {
    a(this, $, 0), o(this, G, it).call(this);
  }),
  (ts = new WeakSet()),
  (Yi = function () {
    s(this, $) !== 0 && (ti(this, $)._--, o(this, G, it).call(this));
  }),
  (es = new WeakSet()),
  (Zi = function () {
    s(this, $) * s(this, y) + s(this, y) >= s(this, R) || (ti(this, $)._++, o(this, G, it).call(this));
  }),
  (ss = new WeakSet()),
  (tr = function () {
    s(this, R) / s(this, y) - 1 >= s(this, R) ||
      (a(this, $, Math.ceil(s(this, R) / s(this, y) - 1)), o(this, G, it).call(this));
  });
var I,
  J,
  pt,
  It,
  Y,
  z,
  U,
  A,
  m,
  V,
  O,
  k,
  S,
  N,
  gt,
  Z,
  mt,
  bt,
  vt,
  is,
  er,
  rs,
  sr,
  re,
  ai,
  ne,
  oi,
  ae,
  hi,
  oe,
  li,
  he,
  ci,
  ns,
  ir,
  as,
  rr,
  le,
  di,
  ce,
  ui,
  os,
  nr,
  hs,
  ar,
  ls,
  or,
  cs,
  hr,
  ds,
  lr,
  us,
  cr,
  fs,
  dr,
  ps,
  ur,
  gs,
  fr,
  ms,
  pr,
  de,
  fi,
  bs,
  gr,
  At,
  Pe,
  ue,
  pi,
  Ot,
  Ce,
  vs,
  mr,
  ws,
  br,
  xs,
  vr,
  Ss,
  wr,
  Ps,
  xr;
class on {
  constructor(t, e, i) {
    r(this, is);
    r(this, rs);
    r(this, re);
    r(this, ne);
    r(this, ae);
    r(this, oe);
    r(this, he);
    r(this, ns);
    r(this, as);
    r(this, le);
    r(this, ce);
    r(this, os);
    r(this, hs);
    r(this, ls);
    r(this, cs);
    r(this, ds);
    r(this, us);
    r(this, fs);
    r(this, ps);
    r(this, gs);
    r(this, ms);
    r(this, de);
    r(this, bs);
    r(this, At);
    r(this, ue);
    r(this, Ot);
    r(this, vs);
    r(this, ws);
    r(this, xs);
    r(this, Ss);
    r(this, Ps);
    r(this, I, void 0);
    r(this, J, void 0);
    r(this, pt, void 0);
    r(this, It, void 0);
    r(this, Y, void 0);
    r(this, z, void 0);
    r(this, U, void 0);
    r(this, A, void 0);
    r(this, m, void 0);
    r(this, V, void 0);
    r(this, O, void 0);
    r(this, k, void 0);
    r(this, S, void 0);
    r(this, N, void 0);
    r(this, gt, void 0);
    r(this, Z, void 0);
    r(this, mt, void 0);
    r(this, bt, void 0);
    r(this, vt, void 0);
    (this.PubSub = i),
      a(this, I, t),
      a(this, J, t.querySelector('[ref="gridMain"]')),
      a(this, pt, e),
      a(this, It, !1),
      a(this, Y, !1),
      a(this, z, null),
      a(this, U, []),
      a(this, A, -1),
      a(this, m, -1),
      a(this, V, -1),
      a(this, O, []),
      a(this, k, []),
      a(this, S, []),
      a(this, N, []),
      a(this, gt, 0),
      a(this, Z, e.cssPrefix),
      a(this, mt, () => {}),
      a(this, bt, () => {}),
      a(this, vt, () => {}),
      o(this, is, er).call(this),
      o(this, rs, sr).call(this);
  }
  init() {
    o(this, ce, ui).call(this),
      o(this, re, ai).call(this),
      this.update(),
      o(this, ne, oi).call(this),
      o(this, le, di).call(this),
      o(this, os, nr).call(this),
      a(this, It, !0);
  }
  dispose() {
    o(this, xs, vr).call(this), o(this, Ss, wr).call(this);
  }
  update() {
    const t = [...o(this, ns, ir).call(this)];
    a(
      this,
      O,
      s(this, N).map((e) => t[e])
    );
  }
}
(I = new WeakMap()),
  (J = new WeakMap()),
  (pt = new WeakMap()),
  (It = new WeakMap()),
  (Y = new WeakMap()),
  (z = new WeakMap()),
  (U = new WeakMap()),
  (A = new WeakMap()),
  (m = new WeakMap()),
  (V = new WeakMap()),
  (O = new WeakMap()),
  (k = new WeakMap()),
  (S = new WeakMap()),
  (N = new WeakMap()),
  (gt = new WeakMap()),
  (Z = new WeakMap()),
  (mt = new WeakMap()),
  (bt = new WeakMap()),
  (vt = new WeakMap()),
  (is = new WeakSet()),
  (er = function () {
    this.PubSub.subscribe('info:fetch:done', () => {
      s(this, It) ? this.update() : this.init();
    });
  }),
  (rs = new WeakSet()),
  (sr = function () {
    this.PubSub.subscribe('command:rerendering:done', () => {
      o(this, ce, ui).call(this),
        o(this, re, ai).call(this),
        setTimeout(() => {
          a(this, J, s(this, I).querySelector('[ref="gridMain"]')),
            this.update(),
            o(this, ne, oi).call(this),
            o(this, le, di).call(this);
        }, 0);
    });
  }),
  (re = new WeakSet()),
  (ai = function () {
    a(this, z, s(this, I).querySelector('[ref="headerMainCellsWrapper"]')),
      a(this, U, Array.from(s(this, z).querySelectorAll('[ref="headerCell"]')));
  }),
  (ne = new WeakSet()),
  (oi = function () {
    a(this, k, [...o(this, he, ci).call(this)]),
      o(this, ae, hi).call(this),
      a(this, gt, s(this, J).getBoundingClientRect().left + parseFloat(s(this, z).style.left));
  }),
  (ae = new WeakSet()),
  (hi = function () {
    a(this, S, []),
      s(this, k).forEach((t) => {
        t.left !== 'auto' && s(this, S).push(parseFloat(t.left));
      }),
      s(this, S).sort((t, e) => t - e);
  }),
  (oe = new WeakSet()),
  (li = function (t) {
    return t - s(this, gt) + s(this, J).scrollLeft;
  }),
  (he = new WeakSet()),
  (ci = function () {
    return s(this, U).map((t) => ({
      left: t.style.left,
      width: parseFloat(t.style.width),
    }));
  }),
  (ns = new WeakSet()),
  (ir = function () {
    return s(this, U).map((t, e) => [...o(this, as, rr).call(this, e)]);
  }),
  (as = new WeakSet()),
  (rr = function (t) {
    const e = s(this, U)[t],
      i = s(this, I).querySelectorAll('[ref="row"]'),
      n = Array.from(i).map((l) => l.querySelectorAll('.data-den-main-cells-wrapper [ref="cell"]')[t]);
    return [e, ...n];
  }),
  (le = new WeakSet()),
  (di = function () {
    a(this, vt, o(this, hs, ar).bind(this)),
      a(this, mt, o(this, ds, lr).bind(this)),
      a(this, bt, o(this, us, cr).bind(this)),
      s(this, z).addEventListener('mousedown', s(this, vt)),
      s(this, I).addEventListener('mousemove', s(this, mt)),
      document.addEventListener('mouseup', s(this, bt));
  }),
  (ce = new WeakSet()),
  (ui = function () {
    a(this, N, sn(s(this, pt).columns));
  }),
  (os = new WeakSet()),
  (nr = function () {
    this.PubSub.subscribe('info:resizing:done', () => {
      const t = [...o(this, he, ci).call(this)];
      a(
        this,
        k,
        s(this, N).map((e) => t[e])
      ),
        o(this, ae, hi).call(this),
        a(this, gt, s(this, J).getBoundingClientRect().left + parseFloat(s(this, z).style.left));
    });
  }),
  (hs = new WeakSet()),
  (ar = function (t) {
    t.stopPropagation();
    const e = t.target;
    t.button !== 0 ||
      (e.getAttribute('ref') !== 'headerCell' &&
        e.getAttribute('ref') !== 'headerCellMain' &&
        e.getAttribute('ref') !== 'headerValueAndSorter') ||
      o(this, ls, or).call(this, o(this, oe, li).call(this, t.pageX));
  }),
  (ls = new WeakSet()),
  (or = function (t) {
    o(this, cs, hr).call(this, t), a(this, Y, !0), o(this, fs, dr).call(this), o(this, ps, ur).call(this);
  }),
  (cs = new WeakSet()),
  (hr = function (t) {
    a(this, A, o(this, de, fi).call(this, s(this, S), t));
  }),
  (ds = new WeakSet()),
  (lr = function (t) {
    if (!s(this, Y)) return;
    const e = o(this, oe, li).call(this, t.pageX);
    a(this, m, o(this, de, fi).call(this, s(this, S), e));
    const i = s(this, k)[s(this, A)].width,
      n = o(this, ue, pi).call(this, s(this, A));
    if (
      (o(this, At, Pe).call(this) === 'right' && s(this, S)[s(this, m)] + n > e) ||
      (o(this, At, Pe).call(this) === 'left' && s(this, S)[s(this, m)] + i < e)
    ) {
      a(this, m, s(this, A));
      return;
    }
    s(this, V) !== s(this, m) && s(this, m) !== -1 && (o(this, bs, gr).call(this), a(this, V, s(this, m)));
  }),
  (us = new WeakSet()),
  (cr = function () {
    s(this, Y) && o(this, vs, mr).call(this);
  }),
  (fs = new WeakSet()),
  (dr = function () {
    s(this, O).forEach((t) => {
      t.forEach((e) => {
        e.classList.add(`${s(this, Z)}dragging`);
      });
    });
  }),
  (ps = new WeakSet()),
  (ur = function () {
    s(this, I).children[0].classList.add(`${s(this, pt).cssPrefix}dragging`),
      s(this, O)[s(this, A)].forEach((t) => {
        t.classList.add(`${s(this, Z)}active`);
      });
  }),
  (gs = new WeakSet()),
  (fr = function () {
    s(this, I).children[0].classList.remove(`${s(this, pt).cssPrefix}dragging`),
      s(this, O).forEach((t) => {
        t.forEach((e) => {
          e.classList.remove(`${s(this, Z)}active`);
        });
      });
  }),
  (ms = new WeakSet()),
  (pr = function () {
    s(this, O).forEach((t) => {
      t.forEach((e) => {
        e.classList.remove(`${s(this, Z)}dragging`);
      });
    });
  }),
  (de = new WeakSet()),
  (fi = function (t, e) {
    for (let i = 0; i < t.length - 1; i++) if (t[i] < e && t[i + 1] >= e) return i;
    return t.length - 1;
  }),
  (bs = new WeakSet()),
  (gr = function () {
    if (s(this, A) === s(this, m) && s(this, V) === -1) return;
    const t = o(this, At, Pe).call(this),
      e = t === 'right' ? s(this, m) - 1 : s(this, m) + 1,
      i = o(this, ue, pi).call(this, e);
    t === 'right'
      ? (s(this, S)[s(this, m)] = s(this, S)[s(this, m)] + i)
      : (s(this, S)[s(this, m) + 1] = s(this, S)[s(this, m) + 1] - i),
      o(this, Ot, Ce).call(this, s(this, k), e, s(this, m)),
      o(this, Ot, Ce).call(this, s(this, O), e, s(this, m)),
      o(this, Ot, Ce).call(this, s(this, N), e, s(this, m)),
      s(this, O).forEach((n, l) => {
        n.forEach((c) => {
          c.style.left = `${s(this, S)[l]}px`;
        });
      }),
      o(this, Ps, xr).call(this);
  }),
  (At = new WeakSet()),
  (Pe = function () {
    return s(this, V) > s(this, m) ? 'left' : 'right';
  }),
  (ue = new WeakSet()),
  (pi = function (t) {
    const e = s(this, k)[t].width;
    return s(this, k)[s(this, m)].width - e;
  }),
  (Ot = new WeakSet()),
  (Ce = function (t, e, i) {
    if (e === -1) return;
    const n = t[e];
    (t[e] = t[i]), (t[i] = n);
  }),
  (vs = new WeakSet()),
  (mr = function () {
    a(this, Y, !1), o(this, ms, pr).call(this), o(this, gs, fr).call(this), o(this, ws, br).call(this);
  }),
  (ws = new WeakSet()),
  (br = function () {
    a(this, A, -1), a(this, m, -1), a(this, V, -1);
  }),
  (xs = new WeakSet()),
  (vr = function () {
    s(this, U).forEach((t) => {
      t.classList.remove('data-den-header-cell-draggable');
    });
  }),
  (Ss = new WeakSet()),
  (wr = function () {
    s(this, z).removeEventListener('mousedown', s(this, vt)),
      s(this, I).removeEventListener('mousemove', s(this, mt)),
      document.removeEventListener('mouseup', s(this, bt));
  }),
  (Ps = new WeakSet()),
  (xr = function () {
    this.PubSub.publish('info:dragging:columns-reorder:done', {
      columnsOrder: s(this, N),
      context: new b('info:dragging:columns-reorder:done'),
    });
  });
var T,
  B,
  kt,
  j,
  tt,
  wt,
  Tt,
  C,
  xt,
  qt,
  St,
  zt,
  Cs,
  Ds,
  Sr,
  Es,
  Pr,
  $s,
  Cr,
  ys,
  Dr,
  Rs,
  Er,
  Fs,
  $r,
  Ls,
  yr,
  Ms,
  Rr,
  Is,
  Fr,
  As,
  Lr,
  fe,
  gi;
class hn {
  constructor(t, e, i) {
    r(this, Ds);
    r(this, Es);
    r(this, $s);
    r(this, ys);
    r(this, Rs);
    r(this, Fs);
    r(this, Ls);
    r(this, Ms);
    r(this, Is);
    r(this, As);
    r(this, fe);
    r(this, T, void 0);
    r(this, B, void 0);
    r(this, kt, void 0);
    r(this, j, void 0);
    r(this, tt, void 0);
    r(this, wt, void 0);
    r(this, Tt, void 0);
    r(this, C, void 0);
    r(this, xt, void 0);
    r(this, qt, void 0);
    r(this, St, void 0);
    r(this, zt, void 0);
    r(this, Cs, 45);
    (this.PubSub = i),
      a(this, T, t),
      a(this, B, e),
      a(this, kt, !1),
      a(this, j, !1),
      a(this, tt, []),
      a(this, wt, []),
      a(this, St, []),
      a(this, Tt, []),
      a(this, C, null),
      a(this, xt, null),
      a(this, qt, []),
      s(this, zt),
      o(this, Ds, Sr).call(this),
      o(this, Es, Pr).call(this);
  }
  init() {
    a(this, tt, Array.from(s(this, T).querySelectorAll('[ref="headerCell"]'))),
      a(
        this,
        wt,
        Array.from(s(this, T).querySelector('[ref="headerMainCellsWrapper"]').querySelectorAll('[ref="headerCell"]'))
      ),
      a(this, St, si(s(this, B).columns)),
      o(this, $s, Cr).call(this),
      o(this, ys, Dr).call(this),
      a(this, kt, !0);
  }
}
(T = new WeakMap()),
  (B = new WeakMap()),
  (kt = new WeakMap()),
  (j = new WeakMap()),
  (tt = new WeakMap()),
  (wt = new WeakMap()),
  (Tt = new WeakMap()),
  (C = new WeakMap()),
  (xt = new WeakMap()),
  (qt = new WeakMap()),
  (St = new WeakMap()),
  (zt = new WeakMap()),
  (Cs = new WeakMap()),
  (Ds = new WeakSet()),
  (Sr = function () {
    this.PubSub.subscribe('info:fetch:done', () => {
      s(this, kt) || this.init(),
        setTimeout(() => {
          a(this, Tt, Array.from(s(this, T).querySelectorAll('[ref="row"]')));
        }, 0);
    });
  }),
  (Es = new WeakSet()),
  (Pr = function () {
    this.PubSub.subscribe('command:rerendering:done', () => {
      a(this, tt, Array.from(s(this, T).querySelectorAll('[ref="headerCell"]'))),
        a(
          this,
          wt,
          Array.from(s(this, T).querySelector('[ref="headerMainCellsWrapper"]').querySelectorAll('[ref="headerCell"]'))
        ),
        a(this, St, si(s(this, B).columns));
    });
  }),
  ($s = new WeakSet()),
  (Cr = function () {
    this.PubSub.subscribe('info:resizing:mousedown', o(this, Rs, Er).bind(this)),
      document.addEventListener('mousemove', o(this, Ls, yr).bind(this)),
      document.addEventListener('mouseup', o(this, Fs, $r).bind(this));
  }),
  (ys = new WeakSet()),
  (Dr = function () {
    this.PubSub.subscribe('info:dragging:columns-reorder:done', (t) => {
      a(this, St, t.data.columnsOrder);
    });
  }),
  (Rs = new WeakSet()),
  (Er = function (t) {
    s(this, T).children[0].classList.add(`${s(this, B).cssPrefix}resizing`),
      a(this, C, t.data.target.parentElement),
      a(this, xt, o(this, fe, gi).call(this, s(this, C))),
      a(this, zt, t.data.isPinnedRight),
      !(!s(this, C) || !s(this, C).parentElement) && (a(this, j, !0), a(this, qt, o(this, As, Lr).call(this)));
  }),
  (Fs = new WeakSet()),
  ($r = function () {
    s(this, T).children[0].classList.remove(`${s(this, B).cssPrefix}resizing`),
      s(this, j) &&
        (a(this, j, !1),
        this.PubSub.publish('info:resizing:done', {
          context: new b('info:resizing:done'),
        }));
  }),
  (Ls = new WeakSet()),
  (yr = function (t) {
    var c;
    if (!s(this, j) || !s(this, C) || s(this, xt).some((d) => d === void 0)) {
      a(this, j, !1);
      return;
    }
    const e = s(this, zt) ? -t.movementX : t.movementX,
      i = (c = s(this, C)) == null ? void 0 : c.style.width,
      n = s(this, C).querySelector(`.${s(this, B).cssPrefix}header-resizer`),
      l = parseInt(i || '0') + e;
    (e > 0 && t.clientX < n.getClientRects()[0].left) ||
      l < s(this, Cs) ||
      (o(this, Ms, Rr).call(this, l),
      o(this, Is, Fr).call(this, e),
      this.PubSub.publish('info:resizing:start', {
        currentColIndex: s(this, tt).indexOf(s(this, C)),
        newCurrentColWidth: parseInt(s(this, C).style.width, 10),
        context: new b('info:resizing:start'),
      }));
  }),
  (Ms = new WeakSet()),
  (Rr = function (t) {
    s(this, xt).forEach((e) => (e.style.width = `${t}px`));
  }),
  (Is = new WeakSet()),
  (Fr = function (t) {
    s(this, C) &&
      s(this, qt).forEach((e) => {
        const i = e.style.left;
        if (i === 'auto') return;
        const n = parseInt(i || '0') + t;
        o(this, fe, gi)
          .call(this, e)
          .forEach((c) => (c.style.left = `${n}px`));
      });
  }),
  (As = new WeakSet()),
  (Lr = function () {
    var e;
    const t = parseInt(((e = s(this, C)) == null ? void 0 : e.style.left) || '0', 10);
    return s(this, wt).filter((i) => parseInt(i.style.left || '0', 10) > t);
  }),
  (fe = new WeakSet()),
  (gi = function (t) {
    if (!t || !t.parentElement) return [];
    const e = s(this, tt).indexOf(t),
      i = s(this, Tt).map((n) => n.querySelectorAll('[ref="cell"]')[e]);
    return [t, ...i];
  });
var Os, Mr, ks, Ir, Ts, Ar;
class ln {
  constructor(t, e) {
    r(this, Os);
    r(this, ks);
    r(this, Ts);
    (this.PubSub = e),
      (this.activeHeaderFilters = {}),
      (this.options = t),
      (this.activeQuickFilter = { searchTerm: '', filterFn: t.quickFilterOptions.filterFn }),
      this.PubSub.subscribe('info:filtering:header-filter-changed', o(this, Os, Mr).bind(this)),
      this.PubSub.subscribe('info:filtering:quick-filter-changed', o(this, Ts, Ar).bind(this));
  }
}
(Os = new WeakSet()),
  (Mr = function (t) {
    const { field: e, type: i, state: n, isActive: l, filterFn: c } = t.data,
      d = { type: i, state: n, filterFn: c };
    o(this, ks, Ir).call(this, e, d, l);
    const f = {
      context: new b('info:filtering:active-filters-changed'),
      filters: this.activeHeaderFilters,
    };
    this.PubSub.publish('info:filtering:active-filters-changed', f);
  }),
  (ks = new WeakSet()),
  (Ir = function (t, e, i) {
    i ? (this.activeHeaderFilters[t] = e) : delete this.activeHeaderFilters[t];
  }),
  (Ts = new WeakSet()),
  (Ar = function (t) {
    const { searchTerm: e } = t.data;
    this.activeQuickFilter.searchTerm = e;
    const i = {
      context: new b('info:filtering:active-quick-filter-changed'),
      filter: this.activeQuickFilter,
    };
    this.PubSub.publish('info:filtering:active-quick-filter-changed', i);
  });
class cn {
  constructor(t) {
    (this.data = {}), (this.data = { ...this.data, ...t });
  }
  getValue(t) {
    return this.data[t];
  }
}
var Q, Ht, pe;
class dn {
  constructor(t, e) {
    r(this, Q, void 0);
    r(this, Ht, void 0);
    r(this, pe, void 0);
    (this.PubSub = e),
      a(this, Q, ''),
      a(this, Ht, 'asc'),
      a(this, pe, t),
      (this.activeSortersMap = /* @__PURE__ */ new Map()),
      this.PubSub.subscribe('command:sorting:start', (i) => {
        const n = new cn({ field: s(this, Q), order: s(this, Ht) }),
          { field: l, isMultiSort: c } = i.data,
          d = this.activeSortersMap.has(l),
          f = d ? this.activeSortersMap.get(l).order : '';
        let u;
        if (d)
          switch (f) {
            case 'asc':
              u = 'desc';
              break;
            case 'desc':
              u = '';
              break;
            default:
              u = 'asc';
              break;
          }
        else u = 'asc';
        i.data.order && (u = i.data.order), a(this, Q, i.data.field);
        const x = s(this, pe).columns.find((X) => X.field === s(this, Q)).sortOptions.comparator;
        if (
          Wt.triggerEvent('sortingStart', {
            field: l,
            order: u,
            comparator: x,
            sortFn: this.sort,
          }).defaultPrevented
        ) {
          a(this, Q, n.getValue('field')), a(this, Ht, n.getValue('order'));
          return;
        }
        c
          ? this.updateActiveSortersMap(l, u, x)
          : (this.activeSortersMap.clear(), this.updateActiveSortersMap(l, u, x)),
          this.PubSub.publish('command:fetch:sort-start', {
            caller: this,
            context: i.context,
            field: l,
            order: u,
            comparator: x,
            sortFn: this.sort,
            activeSorters: this.getActiveSortersArray(),
            isMultiSort: c,
          });
      });
  }
  updateActiveSortersMap(t, e, i) {
    const n = this.activeSortersMap.has(t);
    if (e === '' && n) {
      this.activeSortersMap.delete(t), this.updateSortIndexes();
      return;
    }
    if (n && e !== '') {
      const l = this.activeSortersMap.get(t);
      l.order = e;
    } else if (!n && e !== '') {
      const l = this.activeSortersMap.size;
      this.activeSortersMap.set(s(this, Q), { field: t, order: e, comparator: i, sortIndex: l });
    }
  }
  updateSortIndexes() {
    let t = 0;
    for (const e of this.activeSortersMap.values()) e.sortIndex = t++;
  }
  getActiveSortersArray() {
    return Array.from(this.activeSortersMap.values()).sort((t, e) => t.sortIndex - e.sortIndex);
  }
  sort(t, e) {
    return (
      t.sort((i, n) => {
        let l = 0;
        for (const c of e) {
          const { order: d, field: f, comparator: u } = c;
          if (l === 0) {
            const g = d === 'asc',
              x = i[f],
              ve = n[f],
              X = u(x, ve);
            l = g ? X : X * -1;
          } else break;
        }
        return l;
      }),
      t
    );
  }
}
(Q = new WeakMap()), (Ht = new WeakMap()), (pe = new WeakMap());
class Or {}
var ge;
class un extends Or {
  constructor(e) {
    super();
    r(this, ge, void 0);
    a(this, ge, e);
  }
  getData(e) {
    return this.filterData(Gt(s(this, ge)), e.filtersOptions)
      .then((i) => this.quickFilterData(i, e.quickFilterOptions))
      .then((i) => this.sortData(i, e.sortingOptions))
      .then((i) => this.paginateData(i, e.paginationOptions));
  }
  filterData(e, i) {
    if (!i) return Promise.resolve(e);
    const l = Object.keys(i.filters).reduce(
      (c, d) =>
        c.filter((f) => {
          const u = i.filters[d].filterFn,
            g = i.filters[d].state,
            x = f[d];
          return u(g, x);
        }),
      e
    );
    return Promise.resolve(l);
  }
  paginateData(e, i) {
    if (!i) return Promise.resolve(e);
    const { firstRowIndex: n, lastRowIndex: l } = i,
      c = e.slice(n, l);
    return Promise.resolve(c);
  }
  sortData(e, i) {
    if (!i) return Promise.resolve(e);
    const { sortFn: n, activeSorters: l } = i,
      c = n(e, l);
    return Promise.resolve(c);
  }
  quickFilterData(e, i) {
    if (!i) return Promise.resolve(e);
    const { searchTerm: n, filterFn: l } = i,
      c = e.filter((d) => l(n, Object.values(d)));
    return Promise.resolve(c);
  }
}
ge = new WeakMap();
class fn extends Or {
  getData(t) {
    return fetch('url' + new URLSearchParams(t)).then((e) => e.json());
  }
  sortData(t, e) {
    return fetch('url' + new URLSearchParams(e)).then((i) => i.json());
  }
  filterData(t, e) {
    return fetch('url' + new URLSearchParams(e)).then((i) => i.json());
  }
  quickFilterData(t, e) {
    return fetch('url' + new URLSearchParams(e)).then((i) => i.json());
  }
  paginateData(t, e) {
    return fetch('url' + new URLSearchParams(e)).then((i) => i.json());
  }
}
var me, E, et, Ct, st, Dt, qs, kr, zs, Tr, Hs, qr, Ws, zr, Gs, Hr;
class pn {
  constructor(t, e) {
    r(this, et);
    r(this, st);
    r(this, qs);
    r(this, zs);
    r(this, Hs);
    r(this, Ws);
    r(this, Gs);
    r(this, me, void 0);
    r(this, E, void 0);
    (this.PubSub = e),
      a(this, me, t),
      a(this, E, {}),
      o(this, qs, kr).call(this),
      o(this, zs, Tr).call(this),
      o(this, Hs, qr).call(this),
      o(this, Ws, zr).call(this),
      o(this, Gs, Hr).call(this);
  }
}
(me = new WeakMap()),
  (E = new WeakMap()),
  (et = new WeakSet()),
  (Ct = function (t) {
    return s(this, me).getData(t);
  }),
  (st = new WeakSet()),
  (Dt = function (t, e) {
    const i = {
      caller: this,
      context: t,
      rows: e,
    };
    this.PubSub.publish('info:fetch:done', i);
  }),
  (qs = new WeakSet()),
  (kr = function () {
    this.PubSub.subscribe('command:fetch:start', (t) => {
      o(this, et, Ct)
        .call(this, s(this, E))
        .then((e) => {
          o(this, st, Dt).call(this, t.context, e);
        });
    });
  }),
  (zs = new WeakSet()),
  (Tr = function () {
    this.PubSub.subscribe('command:fetch:sort-start', (t) => {
      (s(this, E).sortingOptions = {
        field: t.data.field,
        order: t.data.order,
        comparator: t.data.comparator,
        sortFn: t.data.sortFn,
        activeSorters: t.data.activeSorters,
      }),
        o(this, et, Ct)
          .call(this, s(this, E))
          .then((e) => {
            o(this, st, Dt).call(this, t.context, e), Wt.triggerEvent('sortingDone', s(this, E).sortingOptions);
          });
    });
  }),
  (Hs = new WeakSet()),
  (qr = function () {
    this.PubSub.subscribe('info:filtering:active-quick-filter-changed', (t) => {
      (s(this, E).quickFilterOptions = {
        searchTerm: t.data.filter.searchTerm,
        filterFn: t.data.filter.filterFn,
      }),
        o(this, et, Ct)
          .call(this, s(this, E))
          .then((e) => {
            o(this, st, Dt).call(this, t.context, e);
          });
    });
  }),
  (Ws = new WeakSet()),
  (zr = function () {
    this.PubSub.subscribe('info:filtering:active-filters-changed', (t) => {
      (s(this, E).filtersOptions = {
        filters: t.data.filters,
      }),
        o(this, et, Ct)
          .call(this, s(this, E))
          .then((e) => {
            o(this, st, Dt).call(this, t.context, e);
          });
    });
  }),
  (Gs = new WeakSet()),
  (Hr = function () {
    this.PubSub.subscribe('info:pagination:info-change:done', (t) => {
      (s(this, E).paginationOptions = {
        firstRowIndex: t.data.firstRowIndex,
        lastRowIndex: t.data.lastRowIndex,
      }),
        o(this, et, Ct)
          .call(this, s(this, E))
          .then((e) => {
            o(this, st, Dt).call(this, t.context, e);
          });
    });
  });
class gn {
  constructor(t, e, i) {
    (this.name = t), (this.data = e), (this.context = i), (this.key = '' + Math.random());
  }
}
var H, Us, Wr;
class mn {
  constructor() {
    r(this, Us);
    r(this, H, {
      'command:pagination:load-first-page:start': [],
      'command:pagination:load-prev-page:start': [],
      'command:pagination:load-next-page:start': [],
      'command:pagination:load-last-page:start': [],
      'info:pagination:data-change:done': [],
      'info:pagination:info-change:done': [],
      'info:pagination:page-size-change:done': [],
      'info:dragging:columns-reorder:done': [],
      'command:sorting:start': [],
      'info:filtering:get-active-quick-filter:done': [],
      'info:filtering:header-filter-changed': [],
      'info:filtering:active-filters-changed': [],
      'info:filtering:quick-filter-changed': [],
      'info:filtering:active-quick-filter-changed': [],
      'info:resizing:mousedown': [],
      'info:resizing:start': [],
      'info:resizing:done': [],
      'command:fetch:start': [],
      'command:fetch:sort-start': [],
      'info:fetch:done': [],
      'command:pin-column:start': [],
      'command:rerendering:done': [],
    });
  }
  publish(t, e) {
    if (!s(this, H)[t]) return;
    const i = new gn(t, e, e.context);
    s(this, H)[t].forEach((n) => {
      n(i);
    });
  }
  subscribe(t, e) {
    if (!s(this, H)[t]) throw new Error(`Could not subscribe: Unsupported event: ${t}`);
    return (
      s(this, H)[t].push(e),
      () => {
        o(this, Us, Wr).call(this, t, e);
      }
    );
  }
}
(H = new WeakMap()),
  (Us = new WeakSet()),
  (Wr = function (t, e) {
    s(this, H)[t] && (s(this, H)[t] = s(this, H)[t].filter((i) => i !== e));
  });
const bn = {
    pageSize: 10,
    pageSizeOptions: [5, 10, 25],
    ofText: 'of',
  },
  vn = (h, t) => ((h = h.toString().toLowerCase()), (t = t.toString().toLowerCase()), t.includes(h)),
  wn = {
    filterFn: vn,
  },
  xn = (h) => {
    const t = h.split('/').map((l) => Number(l)),
      [e, i, n] = t;
    return new Date(n, i - 1, e);
  },
  Sn = (h, t) => (
    typeof h == 'string' && (h = h.toLowerCase()),
    typeof t == 'string' && (t = t.toLowerCase()),
    h === t ? 0 : h > t ? 1 : -1
  ),
  Pn = {
    comparator: Sn,
  },
  Cn = {
    cssPrefix: 'data-den-',
    mode: 'client',
    columns: [],
    defaultColDef: {
      sort: !1,
      sortOptions: Pn,
      filter: !1,
      filterRenderer: Zr,
      filterOptions: {
        method: 'includes',
        debounceTime: 500,
        caseSensitive: !1,
        dateParserFn: xn,
        listOptions: [],
      },
      resize: !1,
      width: 200,
      cellRenderer: jr,
    },
    rows: [],
    draggable: !1,
    pagination: !1,
    paginationOptions: bn,
    quickFilterOptions: wn,
    resizable: !1,
    rowHeight: 42,
    headerHeight: 42,
    multiSortKey: 'shift',
    multiSort: !0,
  },
  we = (h) => h && typeof h == 'object',
  mi = (h, t) =>
    !we(h) || !we(t)
      ? t
      : (Object.keys(t).forEach((e) => {
          const i = h[e],
            n = t[e];
          Array.isArray(i) && Array.isArray(n)
            ? (h[e] = i.concat(n))
            : we(i) && we(n)
            ? (h[e] = mi(Object.assign({}, i), n))
            : (h[e] = n);
        }),
        h);
var Vs, Ns, Bs, js, Qs, Xs, Pt, be, Ks, Gr, _s, Ur;
class Rn {
  constructor(t, e) {
    r(this, Ks);
    r(this, _s);
    r(this, Vs, void 0);
    r(this, Ns, void 0);
    r(this, Bs, void 0);
    r(this, js, void 0);
    r(this, Qs, void 0);
    r(this, Xs, void 0);
    r(this, Pt, void 0);
    r(this, be, void 0);
    a(this, Pt, null), a(this, be, null), (this.PubSub = new mn());
    const i = o(this, Ks, Gr).call(this, Cn, e);
    a(this, Pt, o(this, _s, Ur).call(this, i)),
      s(this, Pt) && a(this, be, new pn(s(this, Pt), this.PubSub)),
      a(this, Vs, new nn(t, i, this.PubSub)),
      a(this, Ns, new dn(i, this.PubSub)),
      a(this, Bs, new ln(i, this.PubSub)),
      a(this, js, new an(i, this.PubSub)),
      a(this, Qs, e.draggable ? new on(t, i, this.PubSub) : null),
      a(this, Xs, e.columns.some((n) => n.resize) ? new hn(t, i, this.PubSub) : null);
  }
  on(t, e) {
    Wt.on(t, e);
  }
  sort(t, e) {
    const i = 'command:sorting:start';
    this.PubSub.publish(i, {
      context: new b(i),
      field: t,
      order: e,
    });
  }
  quickFilter(t) {
    const i = {
      context: new b('info:filtering:quick-filter-changed'),
      searchTerm: t,
    };
    this.PubSub.publish('info:filtering:quick-filter-changed', i);
  }
  pinColumn(t, e) {
    const i = 'command:pin-column:start';
    this.PubSub.publish(i, {
      context: new b(i),
      pin: t,
      colIndex: e,
    });
  }
}
(Vs = new WeakMap()),
  (Ns = new WeakMap()),
  (Bs = new WeakMap()),
  (js = new WeakMap()),
  (Qs = new WeakMap()),
  (Xs = new WeakMap()),
  (Pt = new WeakMap()),
  (be = new WeakMap()),
  (Ks = new WeakSet()),
  (Gr = function (t, e) {
    const i = mi(Gt(t), e);
    return (
      i.columns.forEach((n, l) => {
        i.columns[l] = mi(Gt(i.defaultColDef), n);
      }),
      i
    );
  }),
  (_s = new WeakSet()),
  (Ur = function (t) {
    const { mode: e, rows: i } = t;
    return e === 'client' && i.length ? new un(t.rows) : e === 'server' ? new fn() : null;
  });
export {
  Rn as DataDen,
  un as DataDenClientDataLoaderStrategy,
  Or as DataDenDataLoaderStrategy,
  jr as DataDenDefaultCellRenderer,
  $n as DataDenHeaderDateFilterRenderer,
  En as DataDenHeaderNumberFilterRenderer,
  yn as DataDenHeaderSelectFilterRenderer,
  Zr as DataDenHeaderTextFilterRenderer,
  fn as DataDenServerDataLoaderStrategy,
};
//# sourceMappingURL=data-den.es.min.js.map
